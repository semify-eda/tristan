/* Generated by Yosys 0.39+1 (git sha1 b3124f30e, clang++ 14.0.0-1ubuntu1.1 -fPIC -Os) */

module cv32e40x_top(clk_i, rst_ni, instr_req_o, instr_gnt_i, instr_rvalid_i, instr_addr_o, instr_rdata_i, data_req_o, data_gnt_i, data_rvalid_i, data_addr_o, data_be_o, data_we_o, data_wdata_o, data_rdata_i, mcycle_o, debug_req_i, fetch_enable_i, core_sleep_o, compressed_valid, compressed_ready
, compressed_req_instr, compressed_req_mode, compressed_req_id, compressed_resp_instr, compressed_resp_accept, issue_valid, issue_ready, issue_req_instr, issue_req_mode, issue_req_id, issue_req_rs, issue_req_rs_valid, issue_req_ecs, issue_req_ecs_valid, issue_resp_accept, issue_resp_writeback, issue_resp_dualwrite, issue_resp_dualread, issue_resp_loadstore, issue_resp_ecswrite, issue_resp_exc
, commit_valid, commit_id, commit_kill, mem_valid, mem_ready, mem_req_id, mem_req_addr, mem_req_mode, mem_req_we, mem_req_size, mem_req_be, mem_req_attr, mem_req_wdata, mem_req_last, mem_req_spec, mem_resp_exc, mem_resp_exccode, mem_resp_dbg, mem_result_valid, mem_result_id, mem_result_rdata
, mem_result_err, mem_result_dbg, result_valid, result_ready, result_id, result_data, result_rd, result_we, result_ecsdata, result_ecswe, result_exc, result_exccode, result_err, result_dbg);
  wire _0000_;
  wire _0001_;
  wire _0002_;
  wire _0003_;
  wire [352:0] _0004_;
  wire [190:0] _0005_;
  wire _0006_;
  wire [1:0] _0007_;
  wire [1:0] _0008_;
  wire _0009_;
  wire [31:0] _0010_;
  wire _0011_;
  wire _0012_;
  wire [1:0] _0013_;
  wire [1:0] _0014_;
  wire _0015_;
  wire [1:0] _0016_;
  wire _0017_;
  wire [1:0] _0018_;
  wire _0019_;
  wire [1:0] _0020_;
  wire [1:0] _0021_;
  wire [1:0] _0022_;
  wire [1:0] _0023_;
  wire _0024_;
  wire [3:0] _0025_;
  wire [1:0] _0026_;
  wire _0027_;
  wire [3:0] _0028_;
  wire [14:0] _0029_;
  wire [1:0] _0030_;
  wire [1:0] _0031_;
  wire [1:0] _0032_;
  wire _0033_;
  wire [1:0] _0034_;
  wire [7:0] _0035_;
  wire [1:0] _0036_;
  wire [1:0] _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire [1:0] _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire [3:0] _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire [3:0] _0051_;
  wire _0052_;
  wire _0053_;
  wire [3:0] _0054_;
  wire [3:0] _0055_;
  wire [1:0] _0056_;
  wire [10:0] _0057_;
  wire _0058_;
  wire [7:0] _0059_;
  wire [2:0] _0060_;
  wire [3:0] _0061_;
  wire _0062_;
  wire [1:0] _0063_;
  wire [3:0] _0064_;
  wire _0065_;
  wire [7:0] _0066_;
  wire [2:0] _0067_;
  wire [3:0] _0068_;
  wire _0069_;
  wire [6:0] _0070_;
  wire [2:0] _0071_;
  wire _0072_;
  wire [3:0] _0073_;
  wire [2:0] _0074_;
  wire [3:0] _0075_;
  wire [2:0] _0076_;
  wire _0077_;
  wire [6:0] _0078_;
  wire [2:0] _0079_;
  wire [2:0] _0080_;
  wire [6:0] _0081_;
  wire [2:0] _0082_;
  wire [6:0] _0083_;
  wire [1:0] _0084_;
  wire [6:0] _0085_;
  wire _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire _0091_;
  wire _0092_;
  wire [3:0] _0093_;
  wire _0094_;
  wire [6:0] _0095_;
  wire [6:0] _0096_;
  wire _0097_;
  wire [3:0] _0098_;
  wire _0099_;
  wire [3:0] _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire [3:0] _0107_;
  wire _0108_;
  wire [3:0] _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire [32:0] _0113_;
  wire _0114_;
  wire _0115_;
  wire [1:0] _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire [3:0] _0121_;
  wire _0122_;
  wire _0123_;
  wire [1:0] _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire [31:0] _0128_;
  wire [31:0] _0129_;
  wire [1:0] _0130_;
  wire _0131_;
  wire [2:0] _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire [3:0] _0309_;
  wire [1:0] _0310_;
  wire [1:0] _0311_;
  wire [1:0] _0312_;
  wire [1:0] _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire [31:0] _0371_;
  wire [31:0] _0372_;
  wire _0373_;
  wire _0374_;
  wire [31:0] _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire [31:0] _0379_;
  wire _0380_;
  wire [63:0] _0381_;
  wire [63:0] _0382_;
  wire [63:0] _0383_;
  wire [1:0] _0384_;
  wire [1:0] _0385_;
  wire [1:0] _0386_;
  wire _0387_;
  wire [31:0] _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire [63:0] _0394_;
  wire [63:0] _0395_;
  wire [63:0] _0396_;
  wire [1:0] _0397_;
  wire [1:0] _0398_;
  wire [1:0] _0399_;
  wire _0400_;
  wire _0401_;
  wire _0402_;
  wire _0403_;
  wire _0404_;
  wire [10:0] _0405_;
  wire _0406_;
  wire _0407_;
  wire [31:0] _0408_;
  wire [31:0] _0409_;
  wire [31:0] _0410_;
  wire [31:0] _0411_;
  wire [1023:0] _0412_;
  wire [31:0] _0413_;
  wire [15:0] _0414_;
  wire _0415_;
  wire _0416_;
  wire _0417_;
  wire _0418_;
  wire _0419_;
  wire _0420_;
  wire _0421_;
  wire _0422_;
  wire _0423_;
  wire _0424_;
  wire _0425_;
  wire _0426_;
  wire _0427_;
  wire _0428_;
  wire _0429_;
  wire _0430_;
  wire _0431_;
  wire _0432_;
  wire _0433_;
  wire _0434_;
  wire _0435_;
  wire _0436_;
  wire _0437_;
  wire _0438_;
  wire _0439_;
  wire _0440_;
  wire _0441_;
  wire _0442_;
  wire _0443_;
  wire _0444_;
  wire _0445_;
  wire _0446_;
  wire _0447_;
  wire _0448_;
  wire _0449_;
  wire _0450_;
  wire _0451_;
  wire _0452_;
  wire _0453_;
  wire _0454_;
  wire _0455_;
  wire _0456_;
  wire _0457_;
  wire _0458_;
  wire _0459_;
  wire _0460_;
  wire _0461_;
  wire _0462_;
  wire _0463_;
  wire _0464_;
  wire _0465_;
  wire _0466_;
  wire _0467_;
  wire _0468_;
  wire _0469_;
  wire _0470_;
  wire _0471_;
  wire _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire _0476_;
  wire _0477_;
  wire _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire _0482_;
  wire _0483_;
  wire _0484_;
  wire _0485_;
  wire _0486_;
  wire _0487_;
  wire _0488_;
  wire _0489_;
  wire _0490_;
  wire _0491_;
  wire _0492_;
  wire _0493_;
  wire _0494_;
  wire _0495_;
  wire _0496_;
  wire _0497_;
  wire _0498_;
  wire _0499_;
  wire _0500_;
  wire _0501_;
  wire _0502_;
  wire _0503_;
  wire _0504_;
  wire _0505_;
  wire _0506_;
  wire _0507_;
  wire _0508_;
  wire _0509_;
  wire _0510_;
  wire _0511_;
  wire _0512_;
  wire _0513_;
  wire _0514_;
  wire [32:0] _0515_;
  wire [1023:0] _0516_;
  wire [31:0] _0517_;
  wire [1023:0] _0518_;
  wire [31:0] _0519_;
  wire _0520_;
  wire _0521_;
  wire _0522_;
  wire _0523_;
  wire _0524_;
  wire _0525_;
  wire _0526_;
  wire _0527_;
  wire _0528_;
  wire _0529_;
  wire _0530_;
  wire _0531_;
  wire _0532_;
  wire _0533_;
  wire _0534_;
  wire _0535_;
  wire _0536_;
  wire _0537_;
  wire _0538_;
  wire [28:0] _0539_;
  wire [28:0] _0540_;
  wire [1:0] _0541_;
  wire [1:0] _0542_;
  wire _0543_;
  wire _0544_;
  wire _0545_;
  wire _0546_;
  wire _0547_;
  wire _0548_;
  wire _0549_;
  wire _0550_;
  wire _0551_;
  wire _0552_;
  wire _0553_;
  wire [30:0] _0554_;
  wire [30:0] _0555_;
  wire _0556_;
  wire _0557_;
  wire _0558_;
  wire _0559_;
  wire [28:0] _0560_;
  wire _0561_;
  wire _0562_;
  wire _0563_;
  wire _0564_;
  wire _0565_;
  wire _0566_;
  wire _0567_;
  wire _0568_;
  wire _0569_;
  wire _0570_;
  wire [1023:0] _0571_;
  wire [1023:0] _0572_;
  wire [31:0] _0573_;
  wire [31:0] _0574_;
  wire [31:0] _0575_;
  wire _0576_;
  wire _0577_;
  wire _0578_;
  wire [1:0] _0579_;
  wire [31:0] _0580_;
  wire [1:0] _0581_;
  wire [1:0] _0582_;
  wire [31:0] _0583_;
  wire _0584_;
  wire [31:0] _0585_;
  wire [1:0] _0586_;
  wire [1:0] _0587_;
  wire [31:0] _0588_;
  wire _0589_;
  wire [31:0] _0590_;
  wire [31:0] _0591_;
  wire _0592_;
  wire _0593_;
  wire _0594_;
  wire _0595_;
  wire _0596_;
  wire _0597_;
  wire _0598_;
  wire _0599_;
  wire _0600_;
  wire _0601_;
  wire _0602_;
  wire _0603_;
  wire _0604_;
  wire _0605_;
  wire _0606_;
  wire _0607_;
  wire _0608_;
  wire _0609_;
  wire _0610_;
  wire _0611_;
  wire _0612_;
  wire _0613_;
  wire _0614_;
  wire _0615_;
  wire _0616_;
  wire _0617_;
  wire _0618_;
  wire _0619_;
  wire _0620_;
  wire _0621_;
  wire _0622_;
  wire _0623_;
  wire _0624_;
  wire _0625_;
  wire _0626_;
  wire _0627_;
  wire _0628_;
  wire _0629_;
  wire _0630_;
  wire _0631_;
  wire _0632_;
  wire _0633_;
  wire _0634_;
  wire _0635_;
  wire _0636_;
  wire _0637_;
  wire _0638_;
  wire _0639_;
  wire _0640_;
  wire _0641_;
  wire _0642_;
  wire _0643_;
  wire _0644_;
  wire _0645_;
  wire _0646_;
  wire _0647_;
  wire _0648_;
  wire _0649_;
  wire _0650_;
  wire _0651_;
  wire _0652_;
  wire _0653_;
  wire _0654_;
  wire _0655_;
  wire _0656_;
  wire _0657_;
  wire _0658_;
  wire _0659_;
  wire _0660_;
  wire _0661_;
  wire _0662_;
  wire _0663_;
  wire _0664_;
  wire _0665_;
  wire _0666_;
  wire _0667_;
  wire _0668_;
  wire _0669_;
  wire _0670_;
  wire _0671_;
  wire _0672_;
  wire _0673_;
  wire _0674_;
  wire _0675_;
  wire _0676_;
  wire _0677_;
  wire _0678_;
  wire _0679_;
  wire _0680_;
  wire _0681_;
  wire _0682_;
  wire _0683_;
  wire _0684_;
  wire _0685_;
  wire _0686_;
  wire _0687_;
  wire _0688_;
  wire _0689_;
  wire _0690_;
  wire _0691_;
  wire _0692_;
  wire _0693_;
  wire _0694_;
  wire _0695_;
  wire _0696_;
  wire _0697_;
  wire _0698_;
  wire _0699_;
  wire _0700_;
  wire _0701_;
  wire _0702_;
  wire _0703_;
  wire _0704_;
  wire _0705_;
  wire _0706_;
  wire _0707_;
  wire _0708_;
  wire _0709_;
  wire _0710_;
  wire _0711_;
  wire _0712_;
  wire _0713_;
  wire _0714_;
  wire _0715_;
  wire _0716_;
  wire _0717_;
  wire _0718_;
  wire _0719_;
  wire _0720_;
  wire _0721_;
  wire _0722_;
  wire _0723_;
  wire [3:0] _0724_;
  wire _0725_;
  wire _0726_;
  wire [247:0] _0727_;
  wire _0728_;
  wire _0729_;
  wire _0730_;
  wire _0731_;
  wire _0732_;
  wire _0733_;
  wire _0734_;
  wire _0735_;
  wire _0736_;
  wire _0737_;
  wire _0738_;
  wire _0739_;
  wire _0740_;
  wire _0741_;
  wire _0742_;
  wire _0743_;
  wire _0744_;
  wire _0745_;
  wire _0746_;
  wire _0747_;
  wire _0748_;
  wire _0749_;
  wire _0750_;
  wire _0751_;
  wire _0752_;
  wire [31:0] _0753_;
  wire _0754_;
  wire _0755_;
  wire _0756_;
  wire _0757_;
  wire [31:0] _0758_;
  wire [31:0] _0759_;
  wire _0760_;
  wire _0761_;
  wire _0762_;
  wire _0763_;
  wire _0764_;
  wire _0765_;
  wire [5:0] _0766_;
  wire [31:0] _0767_;
  wire [31:0] _0768_;
  wire [31:0] _0769_;
  wire _0770_;
  wire _0771_;
  wire _0772_;
  wire _0773_;
  wire _0774_;
  wire [1:0] _0775_;
  wire _0776_;
  wire [1:0] _0777_;
  wire _0778_;
  wire _0779_;
  wire [1:0] _0780_;
  wire _0781_;
  wire [2:0] _0782_;
  wire _0783_;
  wire [1:0] _0784_;
  wire _0785_;
  wire [8:0] _0786_;
  wire _0787_;
  wire [1:0] _0788_;
  wire _0789_;
  wire _0790_;
  wire _0791_;
  wire _0792_;
  wire _0793_;
  wire _0794_;
  wire _0795_;
  wire [1:0] _0796_;
  wire _0797_;
  wire [1:0] _0798_;
  wire _0799_;
  wire _0800_;
  wire _0801_;
  wire _0802_;
  wire _0803_;
  wire _0804_;
  wire _0805_;
  wire [31:0] _0806_;
  wire [63:0] _0807_;
  wire [63:0] _0808_;
  wire [63:0] _0809_;
  wire [63:0] _0810_;
  wire [63:0] _0811_;
  wire [31:0] _0812_;
  wire [31:0] _0813_;
  wire [31:0] _0814_;
  wire [31:0] _0815_;
  wire [31:0] _0816_;
  wire [31:0] _0817_;
  wire [31:0] _0818_;
  wire [31:0] _0819_;
  wire _0820_;
  wire _0821_;
  wire _0822_;
  wire _0823_;
  wire _0824_;
  wire [54:0] _0825_;
  wire [54:0] _0826_;
  wire [54:0] _0827_;
  wire [54:0] _0828_;
  wire _0829_;
  wire _0830_;
  wire [8:0] _0831_;
  wire _0832_;
  wire _0833_;
  wire _0834_;
  wire [54:0] _0835_;
  wire _0836_;
  wire [54:0] _0837_;
  wire [54:0] _0838_;
  wire [54:0] _0839_;
  wire [54:0] _0840_;
  wire [54:0] _0841_;
  wire [54:0] _0842_;
  wire [54:0] _0843_;
  wire _0844_;
  wire [1:0] _0845_;
  wire [54:0] _0846_;
  wire [54:0] _0847_;
  wire [54:0] _0848_;
  wire [54:0] _0849_;
  wire [54:0] _0850_;
  wire [54:0] _0851_;
  wire [54:0] _0852_;
  wire [54:0] _0853_;
  wire [54:0] _0854_;
  wire _0855_;
  wire _0856_;
  wire _0857_;
  wire _0858_;
  wire _0859_;
  wire _0860_;
  wire _0861_;
  wire _0862_;
  wire _0863_;
  wire _0864_;
  wire _0865_;
  wire _0866_;
  wire _0867_;
  wire _0868_;
  wire _0869_;
  wire _0870_;
  wire _0871_;
  wire _0872_;
  wire _0873_;
  wire _0874_;
  wire _0875_;
  wire _0876_;
  wire _0877_;
  wire _0878_;
  wire _0879_;
  wire _0880_;
  wire _0881_;
  wire _0882_;
  wire _0883_;
  wire _0884_;
  wire _0885_;
  wire _0886_;
  wire _0887_;
  wire _0888_;
  wire _0889_;
  wire _0890_;
  wire _0891_;
  wire _0892_;
  wire _0893_;
  wire _0894_;
  wire _0895_;
  wire _0896_;
  wire _0897_;
  wire _0898_;
  wire _0899_;
  wire _0900_;
  wire _0901_;
  wire _0902_;
  wire _0903_;
  wire _0904_;
  wire [1:0] _0905_;
  wire [1:0] _0906_;
  wire [1:0] _0907_;
  wire _0908_;
  wire _0909_;
  wire [31:0] _0910_;
  wire _0911_;
  wire _0912_;
  wire [31:0] _0913_;
  wire [31:0] _0914_;
  wire _0915_;
  wire _0916_;
  wire [31:0] _0917_;
  wire _0918_;
  wire _0919_;
  wire [31:0] _0920_;
  wire [31:0] _0921_;
  wire [31:0] _0922_;
  wire [31:0] _0923_;
  wire [31:0] _0924_;
  wire _0925_;
  wire [31:0] _0926_;
  wire _0927_;
  wire [31:0] _0928_;
  wire _0929_;
  wire [31:0] _0930_;
  wire _0931_;
  wire [31:0] _0932_;
  wire _0933_;
  wire _0934_;
  wire [31:0] _0935_;
  wire _0936_;
  wire [31:0] _0937_;
  wire _0938_;
  wire _0939_;
  wire _0940_;
  wire _0941_;
  wire _0942_;
  wire _0943_;
  wire _0944_;
  wire _0945_;
  wire _0946_;
  wire _0947_;
  wire _0948_;
  wire _0949_;
  wire [3:0] _0950_;
  wire _0951_;
  wire _0952_;
  wire _0953_;
  wire _0954_;
  wire _0955_;
  wire _0956_;
  wire _0957_;
  wire _0958_;
  wire _0959_;
  wire [1:0] _0960_;
  wire _0961_;
  wire _0962_;
  wire _0963_;
  wire _0964_;
  wire [1:0] _0965_;
  wire _0966_;
  wire _0967_;
  wire _0968_;
  wire _0969_;
  wire _0970_;
  wire _0971_;
  wire _0972_;
  wire _0973_;
  wire _0974_;
  wire [3:0] _0975_;
  wire [3:0] _0976_;
  wire [31:0] _0977_;
  wire [3:0] _0978_;
  wire _0979_;
  wire _0980_;
  wire [3:0] _0981_;
  wire [31:0] _0982_;
  wire [3:0] _0983_;
  wire [3:0] _0984_;
  wire [31:0] _0985_;
  wire [3:0] _0986_;
  wire [31:0] _0987_;
  wire [3:0] _0988_;
  wire [3:0] _0989_;
  wire [31:0] _0990_;
  wire [3:0] _0991_;
  wire [3:0] _0992_;
  wire [3:0] _0993_;
  wire [3:0] _0994_;
  wire _0995_;
  wire [4:0] _0996_;
  wire [31:0] _0997_;
  wire _0998_;
  wire [3:0] _0999_;
  wire _1000_;
  wire _1001_;
  wire _1002_;
  wire _1003_;
  wire _1004_;
  wire [3:0] _1005_;
  wire _1006_;
  wire _1007_;
  wire [4:0] _1008_;
  wire [31:0] _1009_;
  wire _1010_;
  wire [3:0] _1011_;
  wire _1012_;
  wire _1013_;
  wire _1014_;
  wire _1015_;
  wire _1016_;
  wire [3:0] _1017_;
  wire _1018_;
  wire _1019_;
  wire [31:0] _1020_;
  wire _1021_;
  wire [3:0] _1022_;
  wire _1023_;
  wire _1024_;
  wire _1025_;
  wire _1026_;
  wire [3:0] _1027_;
  wire _1028_;
  wire _1029_;
  wire [4:0] _1030_;
  wire [31:0] _1031_;
  wire _1032_;
  wire _1033_;
  wire _1034_;
  wire _1035_;
  wire _1036_;
  wire [3:0] _1037_;
  wire _1038_;
  wire [31:0] _1039_;
  wire _1040_;
  wire [3:0] _1041_;
  wire _1042_;
  wire _1043_;
  wire [3:0] _1044_;
  wire [31:0] _1045_;
  wire _1046_;
  wire [3:0] _1047_;
  wire _1048_;
  wire [3:0] _1049_;
  wire [31:0] _1050_;
  wire [3:0] _1051_;
  wire [3:0] _1052_;
  wire [31:0] _1053_;
  wire [3:0] _1054_;
  wire [3:0] _1055_;
  wire [3:0] _1056_;
  wire [11:0] _1057_;
  wire [4:0] _1058_;
  wire _1059_;
  wire _1060_;
  wire _1061_;
  wire _1062_;
  wire _1063_;
  wire _1064_;
  wire _1065_;
  wire _1066_;
  wire _1067_;
  wire _1068_;
  wire _1069_;
  wire _1070_;
  wire _1071_;
  wire _1072_;
  wire _1073_;
  wire _1074_;
  wire _1075_;
  wire _1076_;
  wire _1077_;
  wire _1078_;
  wire _1079_;
  wire _1080_;
  wire _1081_;
  wire _1082_;
  wire _1083_;
  wire _1084_;
  wire _1085_;
  wire _1086_;
  wire _1087_;
  wire [11:0] _1088_;
  wire [11:0] _1089_;
  wire _1090_;
  wire [1:0] _1091_;
  wire _1092_;
  wire _1093_;
  wire _1094_;
  wire _1095_;
  wire _1096_;
  wire _1097_;
  wire _1098_;
  wire _1099_;
  wire [2:0] _1100_;
  wire _1101_;
  wire _1102_;
  wire _1103_;
  wire _1104_;
  wire [3:0] _1105_;
  wire [3:0] _1106_;
  wire [3:0] _1107_;
  wire _1108_;
  wire [1:0] _1109_;
  wire _1110_;
  wire [11:0] _1111_;
  wire [4:0] _1112_;
  wire [31:0] _1113_;
  wire _1114_;
  wire [2:0] _1115_;
  wire [2:0] _1116_;
  wire [2:0] _1117_;
  wire _1118_;
  wire _1119_;
  wire _1120_;
  wire _1121_;
  wire _1122_;
  wire _1123_;
  wire _1124_;
  wire _1125_;
  wire _1126_;
  wire [1:0] _1127_;
  wire _1128_;
  wire _1129_;
  wire [1:0] _1130_;
  wire _1131_;
  wire [2:0] _1132_;
  wire [1:0] _1133_;
  wire [31:0] _1134_;
  wire _1135_;
  wire _1136_;
  wire _1137_;
  wire _1138_;
  wire _1139_;
  wire [1:0] _1140_;
  wire [2:0] _1141_;
  wire [1:0] _1142_;
  wire [31:0] _1143_;
  wire _1144_;
  wire _1145_;
  wire _1146_;
  wire [34:0] _1147_;
  wire _1148_;
  wire [1:0] _1149_;
  wire [1:0] _1150_;
  wire [1:0] _1151_;
  wire [1:0] _1152_;
  wire [2:0] _1153_;
  wire [31:0] _1154_;
  wire _1155_;
  wire _1156_;
  wire _1157_;
  wire [1:0] _1158_;
  wire [1:0] _1159_;
  wire [1:0] _1160_;
  wire _1161_;
  wire _1162_;
  wire _1163_;
  wire _1164_;
  wire [1:0] _1165_;
  wire [1:0] _1166_;
  wire _1167_;
  wire _1168_;
  wire [1:0] _1169_;
  wire [1:0] _1170_;
  wire [1:0] _1171_;
  wire [1:0] _1172_;
  wire [1:0] _1173_;
  wire [31:0] _1174_;
  wire [31:0] _1175_;
  wire [31:0] _1176_;
  wire [31:0] _1177_;
  wire [31:0] _1178_;
  wire [31:0] _1179_;
  wire [31:0] _1180_;
  wire [31:0] _1181_;
  wire [31:0] _1182_;
  wire [31:0] _1183_;
  wire [31:0] _1184_;
  wire [1:0] _1185_;
  wire [1:0] _1186_;
  wire [2:0] _1187_;
  wire [1:0] _1188_;
  wire [2:0] _1189_;
  wire [2:0] _1190_;
  wire [104:0] _1191_;
  wire _1192_;
  wire _1193_;
  wire _1194_;
  wire _1195_;
  wire _1196_;
  wire _1197_;
  wire _1198_;
  wire _1199_;
  wire _1200_;
  wire _1201_;
  wire _1202_;
  wire _1203_;
  wire _1204_;
  wire _1205_;
  wire _1206_;
  wire _1207_;
  wire _1208_;
  wire _1209_;
  wire _1210_;
  wire _1211_;
  wire _1212_;
  wire _1213_;
  wire _1214_;
  wire _1215_;
  wire _1216_;
  wire _1217_;
  wire _1218_;
  wire _1219_;
  wire _1220_;
  wire _1221_;
  wire _1222_;
  wire _1223_;
  wire _1224_;
  wire _1225_;
  wire [31:0] _1226_;
  wire [31:0] _1227_;
  wire _1228_;
  wire _1229_;
  wire _1230_;
  wire _1231_;
  wire _1232_;
  wire _1233_;
  wire [2:0] _1234_;
  wire [2:0] _1235_;
  wire [32:0] _1236_;
  wire [2:0] _1237_;
  wire [2:0] _1238_;
  wire [104:0] _1239_;
  wire [2:0] _1240_;
  wire [2:0] _1241_;
  wire [104:0] _1242_;
  wire [31:0] _1243_;
  wire [1:0] _1244_;
  wire [1:0] _1245_;
  wire [2:0] _1246_;
  wire _1247_;
  wire _1248_;
  wire _1249_;
  wire _1250_;
  wire _1251_;
  wire _1252_;
  wire _1253_;
  wire _1254_;
  wire [2:0] _1255_;
  wire [2:0] _1256_;
  wire [2:0] _1257_;
  wire [104:0] _1258_;
  wire [104:0] _1259_;
  wire [31:0] _1260_;
  wire [1:0] _1261_;
  wire [15:0] _1262_;
  wire [1:0] _1263_;
  wire _1264_;
  wire [34:0] _1265_;
  wire [31:0] _1266_;
  wire [31:0] _1267_;
  wire [31:0] _1268_;
  wire [31:0] _1269_;
  wire [31:0] _1270_;
  wire [1:0] _1271_;
  wire [2:0] _1272_;
  wire [1:0] _1273_;
  wire [1:0] _1274_;
  wire [1:0] _1275_;
  wire _1276_;
  wire _1277_;
  wire [31:0] _1278_;
  wire _1279_;
  wire _1280_;
  wire _1281_;
  wire _1282_;
  wire _1283_;
  wire [31:0] _1284_;
  wire _1285_;
  wire [1:0] _1286_;
  wire _1287_;
  wire [2:0] _1288_;
  wire [2:0] _1289_;
  wire [2:0] _1290_;
  wire _1291_;
  wire _1292_;
  wire _1293_;
  wire _1294_;
  wire _1295_;
  wire _1296_;
  wire [1:0] _1297_;
  wire _1298_;
  wire _1299_;
  wire [1:0] _1300_;
  wire _1301_;
  wire [2:0] _1302_;
  wire [2:0] _1303_;
  wire [2:0] _1304_;
  wire [1:0] _1305_;
  wire [1:0] _1306_;
  wire _1307_;
  wire [31:0] _1308_;
  wire [1:0] _1309_;
  wire [1:0] _1310_;
  wire _1311_;
  wire _1312_;
  wire _1313_;
  wire _1314_;
  wire _1315_;
  wire _1316_;
  wire _1317_;
  wire _1318_;
  wire [2:0] _1319_;
  wire [2:0] _1320_;
  wire [2:0] _1321_;
  wire _1322_;
  wire _1323_;
  wire _1324_;
  wire _1325_;
  wire _1326_;
  wire _1327_;
  wire _1328_;
  wire _1329_;
  wire _1330_;
  wire [1:0] _1331_;
  wire _1332_;
  wire _1333_;
  wire [1:0] _1334_;
  wire _1335_;
  wire [2:0] _1336_;
  wire [1:0] _1337_;
  wire _1338_;
  wire _1339_;
  wire _1340_;
  wire _1341_;
  wire _1342_;
  wire _1343_;
  wire _1344_;
  wire _1345_;
  wire _1346_;
  wire _1347_;
  wire [1:0] _1348_;
  wire [1:0] _1349_;
  wire [31:0] _1350_;
  wire [31:0] _1351_;
  wire [31:0] _1352_;
  wire [31:0] _1353_;
  wire _1354_;
  wire [31:0] _1355_;
  wire [31:0] _1356_;
  wire _1357_;
  wire _1358_;
  wire _1359_;
  wire _1360_;
  wire _1361_;
  wire _1362_;
  wire _1363_;
  wire _1364_;
  wire _1365_;
  wire _1366_;
  wire _1367_;
  wire _1368_;
  wire _1369_;
  wire _1370_;
  wire _1371_;
  wire _1372_;
  wire _1373_;
  wire _1374_;
  wire _1375_;
  wire _1376_;
  wire _1377_;
  wire _1378_;
  wire _1379_;
  wire _1380_;
  wire _1381_;
  wire _1382_;
  wire _1383_;
  wire _1384_;
  wire _1385_;
  wire _1386_;
  wire _1387_;
  wire _1388_;
  wire _1389_;
  wire _1390_;
  wire _1391_;
  wire _1392_;
  wire _1393_;
  wire _1394_;
  wire _1395_;
  wire _1396_;
  wire _1397_;
  wire _1398_;
  wire _1399_;
  wire _1400_;
  wire _1401_;
  wire _1402_;
  wire _1403_;
  wire _1404_;
  wire _1405_;
  wire _1406_;
  wire _1407_;
  wire _1408_;
  wire _1409_;
  wire _1410_;
  wire _1411_;
  wire _1412_;
  wire _1413_;
  wire _1414_;
  wire _1415_;
  wire _1416_;
  wire _1417_;
  wire _1418_;
  wire _1419_;
  wire _1420_;
  wire _1421_;
  wire _1422_;
  wire _1423_;
  wire _1424_;
  wire _1425_;
  wire _1426_;
  wire _1427_;
  wire _1428_;
  wire _1429_;
  wire _1430_;
  wire _1431_;
  wire _1432_;
  wire _1433_;
  wire _1434_;
  wire _1435_;
  wire _1436_;
  wire _1437_;
  wire _1438_;
  wire _1439_;
  wire _1440_;
  wire _1441_;
  wire _1442_;
  wire _1443_;
  wire _1444_;
  wire _1445_;
  wire _1446_;
  wire _1447_;
  wire _1448_;
  wire _1449_;
  wire _1450_;
  wire _1451_;
  wire _1452_;
  wire _1453_;
  wire _1454_;
  wire _1455_;
  wire _1456_;
  wire _1457_;
  wire _1458_;
  wire _1459_;
  wire _1460_;
  wire _1461_;
  wire _1462_;
  wire _1463_;
  wire _1464_;
  wire _1465_;
  wire _1466_;
  wire _1467_;
  wire _1468_;
  wire _1469_;
  wire _1470_;
  wire _1471_;
  wire _1472_;
  wire _1473_;
  wire _1474_;
  wire _1475_;
  wire _1476_;
  wire _1477_;
  wire _1478_;
  wire _1479_;
  wire _1480_;
  wire _1481_;
  wire _1482_;
  wire _1483_;
  wire _1484_;
  wire _1485_;
  wire _1486_;
  wire _1487_;
  wire _1488_;
  wire _1489_;
  wire _1490_;
  wire _1491_;
  wire _1492_;
  wire _1493_;
  wire _1494_;
  wire _1495_;
  wire _1496_;
  wire _1497_;
  wire _1498_;
  wire _1499_;
  wire _1500_;
  wire _1501_;
  wire _1502_;
  wire _1503_;
  wire _1504_;
  wire _1505_;
  wire _1506_;
  wire _1507_;
  wire _1508_;
  wire _1509_;
  wire _1510_;
  wire _1511_;
  wire _1512_;
  wire _1513_;
  wire _1514_;
  wire _1515_;
  wire _1516_;
  wire _1517_;
  wire _1518_;
  wire _1519_;
  wire _1520_;
  wire _1521_;
  wire _1522_;
  wire _1523_;
  wire _1524_;
  wire _1525_;
  wire _1526_;
  wire _1527_;
  wire _1528_;
  wire _1529_;
  wire _1530_;
  wire _1531_;
  wire _1532_;
  wire _1533_;
  wire _1534_;
  wire _1535_;
  wire _1536_;
  wire _1537_;
  wire _1538_;
  wire _1539_;
  wire _1540_;
  wire _1541_;
  wire _1542_;
  wire _1543_;
  wire _1544_;
  wire _1545_;
  wire _1546_;
  wire _1547_;
  wire _1548_;
  wire _1549_;
  wire _1550_;
  wire _1551_;
  wire _1552_;
  wire _1553_;
  wire _1554_;
  wire _1555_;
  wire _1556_;
  wire _1557_;
  wire _1558_;
  wire _1559_;
  wire _1560_;
  wire _1561_;
  wire _1562_;
  wire _1563_;
  wire _1564_;
  wire _1565_;
  wire _1566_;
  wire _1567_;
  wire _1568_;
  wire _1569_;
  wire _1570_;
  wire _1571_;
  wire _1572_;
  wire _1573_;
  wire _1574_;
  wire _1575_;
  wire _1576_;
  wire _1577_;
  wire _1578_;
  wire _1579_;
  wire _1580_;
  wire _1581_;
  wire _1582_;
  wire _1583_;
  wire _1584_;
  wire _1585_;
  wire _1586_;
  wire _1587_;
  wire _1588_;
  wire _1589_;
  wire _1590_;
  wire _1591_;
  wire _1592_;
  wire _1593_;
  wire _1594_;
  wire _1595_;
  wire [31:0] _1596_;
  wire _1597_;
  wire _1598_;
  wire _1599_;
  wire _1600_;
  wire _1601_;
  wire _1602_;
  wire _1603_;
  wire _1604_;
  wire _1605_;
  wire _1606_;
  wire _1607_;
  wire [3:0] _1608_;
  wire [3:0] _1609_;
  wire _1610_;
  wire _1611_;
  wire _1612_;
  wire _1613_;
  wire _1614_;
  wire [1:0] _1615_;
  wire [31:0] _1616_;
  wire [1:0] _1617_;
  wire _1618_;
  wire _1619_;
  wire _1620_;
  wire _1621_;
  wire _1622_;
  wire _1623_;
  wire [31:0] _1624_;
  wire _1625_;
  wire _1626_;
  wire _1627_;
  wire _1628_;
  wire _1629_;
  wire _1630_;
  wire [31:0] _1631_;
  wire _1632_;
  wire _1633_;
  wire _1634_;
  wire _1635_;
  wire _1636_;
  wire _1637_;
  wire _1638_;
  wire _1639_;
  wire _1640_;
  wire _1641_;
  wire _1642_;
  wire _1643_;
  wire _1644_;
  wire _1645_;
  wire _1646_;
  wire [1:0] _1647_;
  wire _1648_;
  wire _1649_;
  wire _1650_;
  wire _1651_;
  wire _1652_;
  wire _1653_;
  wire _1654_;
  wire _1655_;
  wire _1656_;
  wire _1657_;
  wire _1658_;
  wire _1659_;
  wire _1660_;
  wire _1661_;
  wire _1662_;
  wire _1663_;
  wire _1664_;
  wire [1:0] _1665_;
  wire _1666_;
  wire _1667_;
  wire [34:0] _1668_;
  wire [31:0] _1669_;
  wire [1:0] _1670_;
  wire [1:0] _1671_;
  wire [31:0] _1672_;
  wire _1673_;
  wire _1674_;
  wire _1675_;
  wire [10:0] _1676_;
  wire [10:0] _1677_;
  wire [10:0] _1678_;
  wire [10:0] _1679_;
  wire [10:0] _1680_;
  wire [10:0] _1681_;
  wire [10:0] _1682_;
  wire [3:0] _1683_;
  wire [3:0] _1684_;
  wire [3:0] _1685_;
  input clk_i;
  wire clk_i;
  output [3:0] commit_id;
  wire [3:0] commit_id;
  output commit_kill;
  wire commit_kill;
  output commit_valid;
  wire commit_valid;
  input compressed_ready;
  wire compressed_ready;
  output [3:0] compressed_req_id;
  wire [3:0] compressed_req_id;
  output [15:0] compressed_req_instr;
  wire [15:0] compressed_req_instr;
  output [1:0] compressed_req_mode;
  wire [1:0] compressed_req_mode;
  input compressed_resp_accept;
  wire compressed_resp_accept;
  input [31:0] compressed_resp_instr;
  wire [31:0] compressed_resp_instr;
  output compressed_valid;
  wire compressed_valid;
  output core_sleep_o;
  wire core_sleep_o;
  wire \cv32e40x_core_inst.abort_op_id ;
  wire \cv32e40x_core_inst.abort_op_if ;
  wire [1:0] \cv32e40x_core_inst.align_status_wb ;
  wire \cv32e40x_core_inst.alu_en_id ;
  wire \cv32e40x_core_inst.alu_jmp_id ;
  wire \cv32e40x_core_inst.alu_jmpr_id ;
  wire [31:0] \cv32e40x_core_inst.boot_addr_i ;
  wire \cv32e40x_core_inst.branch_decision_ex ;
  wire [31:0] \cv32e40x_core_inst.branch_target_ex ;
  wire \cv32e40x_core_inst.clic_irq_i ;
  wire [4:0] \cv32e40x_core_inst.clic_irq_id_i ;
  wire [7:0] \cv32e40x_core_inst.clic_irq_level_i ;
  wire [1:0] \cv32e40x_core_inst.clic_irq_priv_i ;
  wire \cv32e40x_core_inst.clic_irq_shv_i ;
  wire \cv32e40x_core_inst.clk ;
  wire \cv32e40x_core_inst.clk_i ;
  wire \cv32e40x_core_inst.controller_i.abort_op_id_i ;
  wire \cv32e40x_core_inst.controller_i.abort_op_if_i ;
  wire [1:0] \cv32e40x_core_inst.controller_i.align_status_wb_i ;
  wire \cv32e40x_core_inst.controller_i.alu_en_id_i ;
  wire \cv32e40x_core_inst.controller_i.alu_jmp_id_i ;
  wire \cv32e40x_core_inst.controller_i.alu_jmpr_id_i ;
  wire \cv32e40x_core_inst.controller_i.branch_decision_ex_i ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.alu_jmpr_id_i ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.csr_counter_read_i ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.csr_en_raw_id_i ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.csr_expl_hz_ex ;
  wire [27:0] \cv32e40x_core_inst.controller_i.bypass_i.csr_hz_i ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.csr_impl_rd_unqual_id ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.csr_impl_write_in_ex ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.csr_impl_write_in_wb ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.csr_irq_enable_write_i ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.csr_mnxti_read_i ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.csr_write_in_ex ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.csr_write_in_ex_wb ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.csr_write_in_wb ;
  wire [17:0] \cv32e40x_core_inst.controller_i.bypass_i.ctrl_byp_o ;
  wire [247:0] \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i ;
  wire [352:0] \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i ;
  wire [190:0] \cv32e40x_core_inst.controller_i.bypass_i.if_id_pipe_i ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.jmpr_unqual_id ;
  wire [1:0] \cv32e40x_core_inst.controller_i.bypass_i.lsu_atomic_ex_i ;
  wire [1:0] \cv32e40x_core_inst.controller_i.bypass_i.lsu_atomic_wb_i ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.lsu_bus_busy_i ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.lsu_en_wb ;
  wire [9:0] \cv32e40x_core_inst.controller_i.bypass_i.rf_raddr_id_i ;
  wire [1:0] \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_ex_hz ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_ex_jalr_match ;
  wire [1:0] \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_ex_match ;
  wire [1:0] \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_wb_hz ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_wb_jalr_match ;
  wire [1:0] \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_wb_match ;
  wire [1:0] \cv32e40x_core_inst.controller_i.bypass_i.rf_re_id_i ;
  wire [4:0] \cv32e40x_core_inst.controller_i.bypass_i.rf_waddr_ex ;
  wire [4:0] \cv32e40x_core_inst.controller_i.bypass_i.rf_waddr_wb ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.rf_we_ex ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.rf_we_wb ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.sv2v_tmp_334B7 ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.sv2v_tmp_4914A ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.sv2v_tmp_54375 ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.sv2v_tmp_B009B ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.sv2v_tmp_E5A17 ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.sys_mret_id_i ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.sys_mret_unqual_id ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.tbljmp_unqual_id ;
  wire \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i ;
  wire \cv32e40x_core_inst.controller_i.clk ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.abort_op_id_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.abort_op_if_i ;
  wire [1:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.align_status_wb_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.alu_en_id_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.alu_jmp_id_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_decision_ex_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_in_ex ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_taken_ex ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_taken_n ;
  reg \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_taken_q ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.clic_ptr_in_id ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.clic_ptr_in_pipeline ;
  reg \cv32e40x_core_inst.controller_i.controller_fsm_i.clic_ptr_in_progress_id ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.clic_ptr_in_progress_id_clear ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.clic_ptr_in_progress_id_set ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.clic_ptr_in_wb ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.clk ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_flush_ack_n ;
  reg \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_flush_ack_q ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_wr_in_wb_flush_i ;
  wire [17:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i ;
  reg [1:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_cs ;
  wire [1:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_ns ;
  wire [201:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i ;
  wire [31:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.dcsr_i ;
  reg [2:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_cause_q ;
  wire [2:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_fsm_cs ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_interruptible ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n ;
  reg \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_req_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.dret_in_wb ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.ebreak_in_wb ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.etrigger_in_wb ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.etrigger_wb_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_ready_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_valid_i ;
  wire [247:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_wb_pipe_i ;
  wire [10:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_allowed ;
  wire [10:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.fence_in_wb ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.fence_req_clr ;
  reg \cv32e40x_core_inst.controller_i.controller_fsm_i.fence_req_q ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.fence_req_set ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.fencei_flush_ack_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.fencei_in_wb ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.fencei_req_and_ack_q ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.fetch_enable_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.first_op_id_i ;
  wire [352:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.id_ex_pipe_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.id_ready_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.id_stage_haltable ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.id_valid_i ;
  wire [190:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.if_id_pipe_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.if_valid_i ;
  wire [7:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.irq_clic_level_i ;
  wire [1:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.irq_clic_priv_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.irq_clic_shv_i ;
  wire [9:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.irq_id_ctrl_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.irq_req_ctrl_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.irq_wu_ctrl_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.jmp_id ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.jump_in_id ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.jump_taken_id ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.last_op_ex_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.last_op_id_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.last_op_if_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.last_op_wb_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_busy_i ;
  wire [1:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_err_wb_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_valid_wb_i ;
  wire [31:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.mcause_i ;
  wire [31:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.mintstatus_i ;
  wire [1:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.mpu_status_wb_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.mret_in_wb ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.mret_ptr_in_id ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.mret_ptr_in_wb ;
  wire [1:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.mtvec_mode_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.nmi_is_store_q ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.nmi_pending_q ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.no_x_ext.sv2v_tmp_FC9EB ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.non_shv_irq_ack ;
  wire [31:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.pc_if_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.pending_async_debug ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.pending_interrupt ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.pending_nmi ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.pending_nmi_early ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.pending_single_step ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.pending_sync_debug ;
  wire [1:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.pipe_pc_mux_ctrl ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.rst_n ;
  reg \cv32e40x_core_inst.controller_i.controller_fsm_i.sequence_in_progress_id ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.single_step_allowed ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.single_step_halt_if_n ;
  reg \cv32e40x_core_inst.controller_i.controller_fsm_i.single_step_halt_if_q ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_011E8 ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_02F65 ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_06A0A ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_1CDE7 ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_25FB9 ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_2645F ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_31573 ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_35E3A ;
  wire [11:1] \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_524C7 ;
  wire [5:1] \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_5381E ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_557D1 ;
  wire [5:1] \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_63C61 ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6AD4B ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C215 ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C451 ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_79E24 ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_90BD1 ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_96624 ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_A1D3F ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_A228D ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_AEAA2 ;
  wire [3:1] \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_BD570 ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C3579 ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C46A7 ;
  wire [10:1] \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_CC8DA ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_D8609 ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_E0ABD ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_ECB01 ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_F6E73 ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sync_debug_allowed ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sys_en_id_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sys_mret_id ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.sys_mret_id_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.trigger_match_in_wb ;
  reg \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_ready_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_valid_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.wfe_in_wb ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.wfi_in_wb ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.woke_to_debug_q ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.woke_to_interrupt_q ;
  wire [31:0] \cv32e40x_core_inst.controller_i.controller_fsm_i.wpt_match_wb_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.wu_wfe_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.xif_csr_error_i ;
  wire \cv32e40x_core_inst.controller_i.controller_fsm_i.xif_in_wb ;
  wire \cv32e40x_core_inst.controller_i.csr_counter_read_i ;
  wire \cv32e40x_core_inst.controller_i.csr_en_raw_id_i ;
  wire [27:0] \cv32e40x_core_inst.controller_i.csr_hz_i ;
  wire \cv32e40x_core_inst.controller_i.csr_irq_enable_write_i ;
  wire \cv32e40x_core_inst.controller_i.csr_mnxti_read_i ;
  wire \cv32e40x_core_inst.controller_i.csr_wr_in_wb_flush_i ;
  wire [17:0] \cv32e40x_core_inst.controller_i.ctrl_byp_o ;
  wire [201:0] \cv32e40x_core_inst.controller_i.ctrl_fsm_o ;
  wire \cv32e40x_core_inst.controller_i.data_stall_wb_i ;
  wire [31:0] \cv32e40x_core_inst.controller_i.dcsr_i ;
  wire \cv32e40x_core_inst.controller_i.debug_req_i ;
  wire \cv32e40x_core_inst.controller_i.etrigger_wb_i ;
  wire \cv32e40x_core_inst.controller_i.ex_ready_i ;
  wire \cv32e40x_core_inst.controller_i.ex_valid_i ;
  wire [247:0] \cv32e40x_core_inst.controller_i.ex_wb_pipe_i ;
  wire \cv32e40x_core_inst.controller_i.fencei_flush_ack_i ;
  wire \cv32e40x_core_inst.controller_i.fetch_enable_i ;
  wire \cv32e40x_core_inst.controller_i.first_op_id_i ;
  wire [352:0] \cv32e40x_core_inst.controller_i.id_ex_pipe_i ;
  wire \cv32e40x_core_inst.controller_i.id_ready_i ;
  wire \cv32e40x_core_inst.controller_i.id_valid_i ;
  wire [190:0] \cv32e40x_core_inst.controller_i.if_id_pipe_i ;
  wire \cv32e40x_core_inst.controller_i.if_valid_i ;
  wire [7:0] \cv32e40x_core_inst.controller_i.irq_clic_level_i ;
  wire [1:0] \cv32e40x_core_inst.controller_i.irq_clic_priv_i ;
  wire \cv32e40x_core_inst.controller_i.irq_clic_shv_i ;
  wire [9:0] \cv32e40x_core_inst.controller_i.irq_id_ctrl_i ;
  wire \cv32e40x_core_inst.controller_i.irq_req_ctrl_i ;
  wire \cv32e40x_core_inst.controller_i.irq_wu_ctrl_i ;
  wire \cv32e40x_core_inst.controller_i.last_op_ex_i ;
  wire \cv32e40x_core_inst.controller_i.last_op_id_i ;
  wire \cv32e40x_core_inst.controller_i.last_op_if_i ;
  wire \cv32e40x_core_inst.controller_i.last_op_wb_i ;
  wire [1:0] \cv32e40x_core_inst.controller_i.lsu_atomic_ex_i ;
  wire [1:0] \cv32e40x_core_inst.controller_i.lsu_atomic_wb_i ;
  wire \cv32e40x_core_inst.controller_i.lsu_bus_busy_i ;
  wire \cv32e40x_core_inst.controller_i.lsu_busy_i ;
  wire [1:0] \cv32e40x_core_inst.controller_i.lsu_err_wb_i ;
  wire \cv32e40x_core_inst.controller_i.lsu_valid_wb_i ;
  wire [31:0] \cv32e40x_core_inst.controller_i.mcause_i ;
  wire [31:0] \cv32e40x_core_inst.controller_i.mintstatus_i ;
  wire [1:0] \cv32e40x_core_inst.controller_i.mpu_status_wb_i ;
  wire [1:0] \cv32e40x_core_inst.controller_i.mtvec_mode_i ;
  wire [31:0] \cv32e40x_core_inst.controller_i.pc_if_i ;
  wire [9:0] \cv32e40x_core_inst.controller_i.rf_raddr_id_i ;
  wire [1:0] \cv32e40x_core_inst.controller_i.rf_re_id_i ;
  wire \cv32e40x_core_inst.controller_i.rst_n ;
  wire \cv32e40x_core_inst.controller_i.sys_en_id_i ;
  wire \cv32e40x_core_inst.controller_i.sys_mret_id_i ;
  wire \cv32e40x_core_inst.controller_i.wb_ready_i ;
  wire \cv32e40x_core_inst.controller_i.wb_valid_i ;
  wire [31:0] \cv32e40x_core_inst.controller_i.wpt_match_wb_i ;
  wire \cv32e40x_core_inst.controller_i.wu_wfe_i ;
  wire \cv32e40x_core_inst.controller_i.xif_csr_error_i ;
  wire \cv32e40x_core_inst.core_sleep_o ;
  wire \cv32e40x_core_inst.cs_registers_i.all_counters_disabled ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.clk ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[11].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[12].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[13].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[14].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[15].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[16].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[17].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[18].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[19].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[20].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[21].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[22].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[23].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[24].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[25].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[26].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[27].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[28].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[29].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[30].gen_masked.sv2v_tmp_47877 ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rd_data_o ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rst_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_data_i ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_en_i ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.clk ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[0].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[10].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[12].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[13].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[14].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[15].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[1].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[2].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[4].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[5].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[6].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[8].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[9].gen_masked.sv2v_tmp_47877 ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rd_data_o ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rst_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.wr_data_i ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.wr_en_i ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.clk ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.gen_csr[1].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.gen_csr[2].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.gen_csr[3].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.gen_csr[4].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.gen_csr[5].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.gen_csr[6].gen_masked.sv2v_tmp_47877 ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rd_data_o ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rst_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i ;
  wire \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.clic_pa_o ;
  wire \cv32e40x_core_inst.cs_registers_i.clic_pa_valid_o ;
  wire \cv32e40x_core_inst.cs_registers_i.clk ;
  wire \cv32e40x_core_inst.cs_registers_i.csr_counter_read_o ;
  wire \cv32e40x_core_inst.cs_registers_i.csr_en_gated ;
  wire [27:0] \cv32e40x_core_inst.cs_registers_i.csr_hz_o ;
  wire \cv32e40x_core_inst.cs_registers_i.csr_illegal_o ;
  wire \cv32e40x_core_inst.cs_registers_i.csr_irq_enable_write_o ;
  wire \cv32e40x_core_inst.cs_registers_i.csr_mnxti_read_o ;
  wire \cv32e40x_core_inst.cs_registers_i.csr_mtvec_init_i ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.csr_op ;
  wire [11:0] \cv32e40x_core_inst.cs_registers_i.csr_raddr ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.csr_rdata_int ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.csr_rdata_o ;
  wire [11:0] \cv32e40x_core_inst.cs_registers_i.csr_waddr ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.csr_wdata ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.csr_wdata_int ;
  wire \cv32e40x_core_inst.cs_registers_i.csr_we_int ;
  wire \cv32e40x_core_inst.cs_registers_i.csr_wr_in_wb ;
  wire \cv32e40x_core_inst.cs_registers_i.csr_wr_in_wb_flush_o ;
  wire [201:0] \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3657$1132.wdata ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3661$1133.wdata ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3665$1134.wdata ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3669$1135.wdata ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3673$1141.wdata ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3677$1142.wdata ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3681$1143.wdata ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3693$1147.wdata ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3751$1152.wdata ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3773$1153.wdata ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3781$1155.wdata ;
  wire \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_dcsr_ebreaku_resolve$func$preprocessed.v:3673$1138.current_value ;
  wire \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_dcsr_ebreaku_resolve$func$preprocessed.v:3673$1138.next_value ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_dcsr_prv_resolve$func$preprocessed.v:3673$1136.current_value ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_dcsr_prv_resolve$func$preprocessed.v:3673$1136.next_value ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_mstatus_mpp_resolve$func$preprocessed.v:3693$1144.current_value ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_mstatus_mpp_resolve$func$preprocessed.v:3693$1144.next_value ;
  wire \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_mstatus_mprv_resolve$func$preprocessed.v:3693$1145.current_value ;
  wire \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_mstatus_mprv_resolve$func$preprocessed.v:3693$1145.next_value ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_mtvec_mode_clint_resolve$func$preprocessed.v:3751$1148.current_value ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_mtvec_mode_clint_resolve$func$preprocessed.v:3751$1148.next_value ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.dcsr_o ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.dcsr_q ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.dcsr_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_stopcount ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.clk ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.csr_wdata_i ;
  wire [201:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ctrl_fsm_i ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.cv32e40x_pkg_etrigger_u_resolve$func$preprocessed.v:5112$4382.next_value ;
  wire [3:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.cv32e40x_pkg_mcontrol2_6_match_resolve$func$preprocessed.v:5100$4377.next_value ;
  wire [3:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.cv32e40x_pkg_mcontrol2_6_match_resolve$func$preprocessed.v:5103$4380.next_value ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.cv32e40x_pkg_mcontrol2_6_u_resolve$func$preprocessed.v:5100$4376.next_value ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.cv32e40x_pkg_mcontrol2_6_u_resolve$func$preprocessed.v:5103$4378.next_value ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.cv32e40x_pkg_mcontrol6_hit_resolve$func$preprocessed.v:5093$4375.current_value ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.cv32e40x_pkg_mcontrol6_hit_resolve$func$preprocessed.v:5093$4375.next_value ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.cv32e40x_pkg_mcontrol6_uncertain_resolve$func$preprocessed.v:5103$4381.next_value ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.cv32e40x_pkg_mcontrol6_uncertainen_resolve$func$preprocessed.v:5103$4379.next_value ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.etrigger_wb_o ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.etrigger_wb ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.if_addr_match ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_addr_high ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_addr_high_lsb ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_addr_low ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_addr_low_lsb ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_addr_match ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_addr_match_en ;
  wire [3:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_byte_addr_match[0] ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.mcontrol6_hit_resolved[0] ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.priv_lvl_match_en_ex ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.priv_lvl_match_en_if ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.priv_lvl_match_en_wb ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.sv2v_autoblock_1.b ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.sv2v_autoblock_2.b ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.sv2v_autoblock_5.i ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.sv2v_autoblock_6.i ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.sv2v_autoblock_7.i ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata1_n[0] ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata1_q[0] ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata1_rdata[0] ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata1_we_hit ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata1_we_int ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata2_q[0] ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata2_rdata[0] ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata2_we_int ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].sv2v_autoblock_3.b ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].sv2v_autoblock_4.i ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.clk ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rd_data_o ;
  reg [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rst_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.wr_data_i ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.wr_en_i ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.clk ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rd_data_o ;
  reg [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rst_n ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.wr_en_i ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.trigger_match_ex ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.trigger_match_if ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.clk ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rd_data_o ;
  reg [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rst_n ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.wr_en_i ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_q ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_atomic_ex_i ;
  wire [3:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_valid_ex_i ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_we_ex_i ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.pc_if_i ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_ex_i ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_wb_i ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.rst_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.tdata1_rdata_o ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.tdata1_we_i ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.tdata2_rdata_o ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.tdata2_we_i ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.tinfo_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.tinfo_rdata_o ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.trigger_match_ex_o ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.trigger_match_if_o ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.tselect_rdata_o ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.tselect_we_i ;
  wire \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.unused_signals ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.dpc_o ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.dpc_q ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.dpc_rdata ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.dscratch0_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.dscratch0_q ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.dscratch0_rdata ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.dscratch1_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.dscratch1_q ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.dscratch1_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.etrigger_wb_o ;
  wire [247:0] \cv32e40x_core_inst.cs_registers_i.ex_wb_pipe_i ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[10].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[11].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[12].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[13].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[14].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[15].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[16].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[17].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[18].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[19].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[1].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[20].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[21].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[22].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[23].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[24].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[25].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[26].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[27].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[28].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[29].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[30].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[31].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[4].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[5].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[6].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[7].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[8].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[9].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563 ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[10].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[10].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[11].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[11].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[12].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[12].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[13].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[13].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[14].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[14].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[15].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[15].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[16].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[16].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[17].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[17].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[18].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[18].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[19].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[19].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[1].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[1].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[20].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[20].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[21].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[21].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[22].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[22].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[23].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[23].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[24].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[24].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[25].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[25].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[26].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[26].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[27].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[27].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[28].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[28].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[29].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[29].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[30].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[30].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[31].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[31].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[4].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[4].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[5].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[5].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[6].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[6].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[7].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[7].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[8].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[8].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [64:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[9].gen_non_implemented_nextvalue.sv2v_tmp_136EF ;
  wire [2:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[9].gen_non_implemented_nextvalue.sv2v_tmp_B720C ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[0].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[10].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[11].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[12].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[13].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[14].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[15].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[16].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[17].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[18].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[19].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[1].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[20].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[21].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[22].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[23].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[24].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[25].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[26].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[27].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[28].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[29].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[2].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[30].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[31].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [16:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[3].gen_implemented_mhpmevent.gen_tie_off.sv2v_tmp_B7F8B ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[4].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[5].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[6].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[7].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[8].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire [32:1] \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[9].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3 ;
  wire \cv32e40x_core_inst.cs_registers_i.genblk5[0].hpm_even_no_flop.sv2v_tmp_4AF07 ;
  wire \cv32e40x_core_inst.cs_registers_i.genblk5[1].hpm_even_no_flop.sv2v_tmp_4AF07 ;
  wire \cv32e40x_core_inst.cs_registers_i.genblk5[2].hpm_even_no_flop.sv2v_tmp_4AF07 ;
  wire \cv32e40x_core_inst.cs_registers_i.genblk5[3].hpm_even_no_flop.sv2v_tmp_4AF07 ;
  wire \cv32e40x_core_inst.cs_registers_i.genblk5[4].hpm_even_no_flop.sv2v_tmp_4AF07 ;
  wire \cv32e40x_core_inst.cs_registers_i.genblk5[5].hpm_even_no_flop.sv2v_tmp_4AF07 ;
  wire [15:0] \cv32e40x_core_inst.cs_registers_i.hpm_events ;
  wire [15:0] \cv32e40x_core_inst.cs_registers_i.hpm_events_raw ;
  wire [352:0] \cv32e40x_core_inst.cs_registers_i.id_ex_pipe_i ;
  wire \cv32e40x_core_inst.cs_registers_i.illegal_csr_read ;
  wire \cv32e40x_core_inst.cs_registers_i.illegal_csr_write ;
  wire \cv32e40x_core_inst.cs_registers_i.instr_valid ;
  wire [25:0] \cv32e40x_core_inst.cs_registers_i.jvt_addr_o ;
  wire \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.clk ;
  wire \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.gen_csr[0].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.gen_csr[1].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.gen_csr[2].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.gen_csr[3].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.gen_csr[4].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.gen_csr[5].gen_masked.sv2v_tmp_47877 ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rd_data_o ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q ;
  wire \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rst_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_data_i ;
  wire \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ;
  wire [5:0] \cv32e40x_core_inst.cs_registers_i.jvt_mode_o ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.jvt_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.jvt_q ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.jvt_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.jvt_we ;
  wire \cv32e40x_core_inst.cs_registers_i.jvt_wr_in_wb ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.lsu_addr_ex_i ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.lsu_atomic_ex_i ;
  wire [3:0] \cv32e40x_core_inst.cs_registers_i.lsu_be_ex_i ;
  wire \cv32e40x_core_inst.cs_registers_i.lsu_valid_ex_i ;
  wire \cv32e40x_core_inst.cs_registers_i.lsu_we_ex_i ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.marchid_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.marchid_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.marchid_we ;
  wire \cv32e40x_core_inst.cs_registers_i.mcause_alias_we ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mcause_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mcause_o ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mcause_q ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mcause_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.mcause_we ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mconfigptr_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mconfigptr_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.mconfigptr_we ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mcountinhibit_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mcountinhibit_q ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mcountinhibit_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.mcountinhibit_we ;
  wire [63:0] \cv32e40x_core_inst.cs_registers_i.mcycle_o ;
  wire \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.clk ;
  wire \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.gen_csr[0].gen_masked.sv2v_tmp_47877 ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rd_data_o ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q ;
  wire \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rst_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i ;
  wire \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mepc_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mepc_o ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mepc_q ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mepc_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.mepc_we ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mhartid_i ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mhartid_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mhartid_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.mhartid_we ;
  wire [2047:0] \cv32e40x_core_inst.cs_registers_i.mhpmcounter_increment ;
  wire [2047:0] \cv32e40x_core_inst.cs_registers_i.mhpmcounter_n ;
  wire [2047:0] \cv32e40x_core_inst.cs_registers_i.mhpmcounter_q ;
  wire [2047:0] \cv32e40x_core_inst.cs_registers_i.mhpmcounter_rdata ;
  wire [63:0] \cv32e40x_core_inst.cs_registers_i.mhpmcounter_we ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_increment ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper ;
  wire [1023:0] \cv32e40x_core_inst.cs_registers_i.mhpmevent_q ;
  wire [1023:0] \cv32e40x_core_inst.cs_registers_i.mhpmevent_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.mhpmevent_we ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mie_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mie_o ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mie_q ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mie_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.mie_we ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mimpid_n ;
  wire [3:0] \cv32e40x_core_inst.cs_registers_i.mimpid_patch_i ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mimpid_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.mimpid_we ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mintstatus_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mintstatus_o ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mintstatus_q ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mintstatus_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.mintstatus_we ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mintthresh_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mintthresh_q ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mintthresh_rdata ;
  wire [7:0] \cv32e40x_core_inst.cs_registers_i.mintthresh_th_o ;
  wire \cv32e40x_core_inst.cs_registers_i.mintthresh_we ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mip_i ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mip_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mip_rdata ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.misa_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.misa_rdata ;
  wire [4:0] \cv32e40x_core_inst.cs_registers_i.mnxti_irq_id ;
  wire [4:0] \cv32e40x_core_inst.cs_registers_i.mnxti_irq_id_i ;
  wire [7:0] \cv32e40x_core_inst.cs_registers_i.mnxti_irq_level_i ;
  wire \cv32e40x_core_inst.cs_registers_i.mnxti_irq_pending_i ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mnxti_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mnxti_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.mnxti_we ;
  wire \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.clk ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rd_data_o ;
  reg [31:0] \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q ;
  wire \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rst_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_data_i ;
  wire \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mscratch_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mscratch_q ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mscratch_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.mscratch_we ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mscratchcswl_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mscratchcswl_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.mscratchcswl_we ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_alias_we ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.clk ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[0].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[10].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[11].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[12].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[13].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[14].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[15].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[16].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[17].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[18].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[19].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[1].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[20].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[21].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[22].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[23].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[24].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[25].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[26].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[27].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[28].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[29].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[2].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[30].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[31].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[4].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[5].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[6].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[8].gen_masked.sv2v_tmp_47877 ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[9].gen_masked.sv2v_tmp_47877 ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rd_data_o ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rst_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.wr_data_i ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.wr_en_i ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mstatus_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mstatus_o ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mstatus_q ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mstatus_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.mstatus_we ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mstatush_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mstatush_rdata ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mtval_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mtval_rdata ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mtvec_addr_i ;
  wire [24:0] \cv32e40x_core_inst.cs_registers_i.mtvec_addr_o ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.mtvec_mode_o ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mtvec_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mtvec_q ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mtvec_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.mtvec_we ;
  wire [24:0] \cv32e40x_core_inst.cs_registers_i.mtvt_addr_o ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mtvt_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mtvt_q ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mtvt_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.mtvt_we ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mvendorid_n ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.mvendorid_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.mvendorid_we ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.pc_if_i ;
  wire [2:0] \cv32e40x_core_inst.cs_registers_i.priv_lvl_if_ctrl_o ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.priv_lvl_if_i ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.priv_lvl_lsu_o ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.priv_lvl_o ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.priv_lvl_q ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.priv_lvl_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.priv_lvl_we ;
  wire \cv32e40x_core_inst.cs_registers_i.ptr_in_if_i ;
  wire \cv32e40x_core_inst.cs_registers_i.rst_n ;
  wire [11:0] \cv32e40x_core_inst.cs_registers_i.sv2v_cast_12$func$preprocessed.v:3147$1169.inp ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.sv2v_cast_2$func$preprocessed.v:3751$1149.inp ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.sv2v_cast_2$func$preprocessed.v:4050$1158.inp ;
  wire [1:0] \cv32e40x_core_inst.cs_registers_i.sv2v_cast_2$func$preprocessed.v:4094$1159.inp ;
  wire [2:0] \cv32e40x_core_inst.cs_registers_i.sv2v_cast_3$func$preprocessed.v:3673$1137.inp ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.sv2v_cast_32$func$preprocessed.v:3673$1140.inp ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.sv2v_cast_32$func$preprocessed.v:3693$1146.inp ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.sv2v_cast_32$func$preprocessed.v:3751$1151.inp ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.sv2v_cast_32$func$preprocessed.v:3781$1154.inp ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.sv2v_cast_32$func$preprocessed.v:3983$1157.inp ;
  wire [3:0] \cv32e40x_core_inst.cs_registers_i.sv2v_cast_4$func$preprocessed.v:3673$1139.inp ;
  wire [3:0] \cv32e40x_core_inst.cs_registers_i.sv2v_cast_4$func$preprocessed.v:3751$1150.inp ;
  wire [3:0] \cv32e40x_core_inst.cs_registers_i.sv2v_cast_4$func$preprocessed.v:3983$1156.inp ;
  wire \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_1C271 ;
  wire [12:1] \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_4AB31 ;
  wire [12:1] \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_B0505 ;
  wire \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_F9A70 ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.tdata1_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.tdata1_we ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.tdata2_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.tdata2_we ;
  wire [63:0] \cv32e40x_core_inst.cs_registers_i.time_i ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.tinfo_rdata ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.trigger_match_ex_o ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.trigger_match_if_o ;
  wire [31:0] \cv32e40x_core_inst.cs_registers_i.tselect_rdata ;
  wire \cv32e40x_core_inst.cs_registers_i.tselect_we ;
  wire \cv32e40x_core_inst.cs_registers_i.unused_signals ;
  wire [31:0] \cv32e40x_core_inst.csr_clic_pa ;
  wire \cv32e40x_core_inst.csr_clic_pa_valid ;
  wire \cv32e40x_core_inst.csr_counter_read ;
  wire \cv32e40x_core_inst.csr_en_raw_id ;
  wire [27:0] \cv32e40x_core_inst.csr_hz ;
  wire \cv32e40x_core_inst.csr_illegal ;
  wire \cv32e40x_core_inst.csr_irq_enable_write ;
  wire \cv32e40x_core_inst.csr_mnxti_read ;
  wire \cv32e40x_core_inst.csr_mtvec_init_if ;
  wire [31:0] \cv32e40x_core_inst.csr_rdata ;
  wire \cv32e40x_core_inst.csr_wr_in_wb_flush ;
  wire [17:0] \cv32e40x_core_inst.ctrl_byp ;
  wire [201:0] \cv32e40x_core_inst.ctrl_fsm ;
  wire [31:0] \cv32e40x_core_inst.data_addr_o ;
  wire [5:0] \cv32e40x_core_inst.data_atop_o ;
  wire [3:0] \cv32e40x_core_inst.data_be_o ;
  wire \cv32e40x_core_inst.data_dbg_o ;
  wire \cv32e40x_core_inst.data_err_i ;
  wire \cv32e40x_core_inst.data_exokay_i ;
  wire \cv32e40x_core_inst.data_gnt_i ;
  wire [1:0] \cv32e40x_core_inst.data_memtype_o ;
  wire [2:0] \cv32e40x_core_inst.data_prot_o ;
  wire [31:0] \cv32e40x_core_inst.data_rdata_i ;
  wire \cv32e40x_core_inst.data_req_o ;
  wire \cv32e40x_core_inst.data_rvalid_i ;
  wire \cv32e40x_core_inst.data_stall_wb ;
  wire [31:0] \cv32e40x_core_inst.data_wdata_o ;
  wire \cv32e40x_core_inst.data_we_o ;
  wire \cv32e40x_core_inst.dbg_ack ;
  wire [31:0] \cv32e40x_core_inst.dcsr ;
  wire \cv32e40x_core_inst.debug_halted_o ;
  wire \cv32e40x_core_inst.debug_havereset_o ;
  wire [31:0] \cv32e40x_core_inst.debug_pc_o ;
  wire \cv32e40x_core_inst.debug_pc_valid_o ;
  wire \cv32e40x_core_inst.debug_req_gated ;
  wire \cv32e40x_core_inst.debug_req_i ;
  wire \cv32e40x_core_inst.debug_running_o ;
  wire [31:0] \cv32e40x_core_inst.dm_exception_addr_i ;
  wire [31:0] \cv32e40x_core_inst.dm_halt_addr_i ;
  wire [31:0] \cv32e40x_core_inst.dpc ;
  wire \cv32e40x_core_inst.etrigger_wb ;
  wire \cv32e40x_core_inst.ex_ready ;
  wire \cv32e40x_core_inst.ex_stage_i.alu_cmp_result ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i._sv2v_strm_2C78E$func$preprocessed.v:1075$4047._sv2v_strm_55E18_idx ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i._sv2v_strm_2C78E$func$preprocessed.v:1075$4047._sv2v_strm_55E18_inp ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i._sv2v_strm_2C78E$func$preprocessed.v:1075$4047._sv2v_strm_55E18_out ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i._sv2v_strm_2C78E$func$preprocessed.v:1075$4047.inp ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i._sv2v_strm_A820F$func$preprocessed.v:1089$4048._sv2v_strm_55E18_idx ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i._sv2v_strm_A820F$func$preprocessed.v:1089$4048._sv2v_strm_55E18_inp ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i._sv2v_strm_A820F$func$preprocessed.v:1089$4048._sv2v_strm_55E18_out ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i._sv2v_strm_A820F$func$preprocessed.v:1089$4048.inp ;
  wire [32:0] \cv32e40x_core_inst.ex_stage_i.alu_i.adder_in_a ;
  wire [32:0] \cv32e40x_core_inst.ex_stage_i.alu_i.adder_in_b ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.adder_result ;
  wire [33:0] \cv32e40x_core_inst.ex_stage_i.alu_i.adder_result_expanded ;
  wire \cv32e40x_core_inst.ex_stage_i.alu_i.adder_subtract ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.operand_i ;
  wire [5:0] \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.result_o ;
  wire [191:0] \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.clmul_result ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.clmulh_result ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.clmulr_result ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.clz_data_in ;
  wire \cv32e40x_core_inst.ex_stage_i.alu_i.cmp_result_o ;
  wire [5:0] \cv32e40x_core_inst.ex_stage_i.alu_i.cpop_result_o ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.div_clz_data_rev_i ;
  wire \cv32e40x_core_inst.ex_stage_i.alu_i.div_clz_en_i ;
  wire [5:0] \cv32e40x_core_inst.ex_stage_i.alu_i.div_clz_result_o ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.div_op_b_shifted_o ;
  wire [5:0] \cv32e40x_core_inst.ex_stage_i.alu_i.div_shift_amt_i ;
  wire \cv32e40x_core_inst.ex_stage_i.alu_i.div_shift_en_i ;
  wire [4:0] \cv32e40x_core_inst.ex_stage_i.alu_i.ff1_result ;
  wire [4:0] \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.first_one_o ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i ;
  wire [159:0] \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_lut ;
  wire [159:0] \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes ;
  wire [32:1] \cv32e40x_core_inst.ex_stage_i.alu_i.gen_shift_nozbs.sv2v_tmp_86497 ;
  wire \cv32e40x_core_inst.ex_stage_i.alu_i.is_equal ;
  wire \cv32e40x_core_inst.ex_stage_i.alu_i.is_greater ;
  wire \cv32e40x_core_inst.ex_stage_i.alu_i.is_signed ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.max_maxu_result ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.min_minu_result ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.muldiv_operand_b_i ;
  wire [32:1] \cv32e40x_core_inst.ex_stage_i.alu_i.no_clmul.sv2v_tmp_C4D03 ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.operand_a_i ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.operand_a_rev ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.operand_b_i ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.operand_b_rev ;
  wire [5:0] \cv32e40x_core_inst.ex_stage_i.alu_i.operator_i ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.result_o ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.result_shnadd ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_aa ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_bb ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_result ;
  wire \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_rshift ;
  wire [5:0] \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_shamt ;
  wire [63:0] \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_tmp ;
  wire \cv32e40x_core_inst.ex_stage_i.alu_ready ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.alu_result ;
  wire \cv32e40x_core_inst.ex_stage_i.alu_valid ;
  wire \cv32e40x_core_inst.ex_stage_i.branch_decision_o ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.branch_target_o ;
  wire \cv32e40x_core_inst.ex_stage_i.clic_ptr_valid ;
  wire \cv32e40x_core_inst.ex_stage_i.clk ;
  wire [27:0] \cv32e40x_core_inst.ex_stage_i.csr_hz_i ;
  wire \cv32e40x_core_inst.ex_stage_i.csr_illegal_i ;
  wire \cv32e40x_core_inst.ex_stage_i.csr_is_illegal ;
  wire \cv32e40x_core_inst.ex_stage_i.csr_mnxti_read_i ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.csr_rdata_i ;
  wire \cv32e40x_core_inst.ex_stage_i.csr_ready ;
  wire \cv32e40x_core_inst.ex_stage_i.csr_valid ;
  wire [201:0] \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.div_clz_data_rev ;
  wire \cv32e40x_core_inst.ex_stage_i.div_clz_en ;
  wire [5:0] \cv32e40x_core_inst.ex_stage_i.div_clz_result ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.div_op_b_shifted ;
  wire \cv32e40x_core_inst.ex_stage_i.div_ready ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.div_result ;
  wire [5:0] \cv32e40x_core_inst.ex_stage_i.div_shift_amt ;
  wire \cv32e40x_core_inst.ex_stage_i.div_shift_en ;
  wire \cv32e40x_core_inst.ex_stage_i.div_valid ;
  wire \cv32e40x_core_inst.ex_stage_i.ex_ready_o ;
  wire \cv32e40x_core_inst.ex_stage_i.ex_valid_o ;
  wire [247:0] \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o ;
  wire \cv32e40x_core_inst.ex_stage_i.forced_nop ;
  wire \cv32e40x_core_inst.ex_stage_i.forced_nop_valid ;
  wire [352:0] \cv32e40x_core_inst.ex_stage_i.id_ex_pipe_i ;
  wire \cv32e40x_core_inst.ex_stage_i.instr_valid ;
  wire \cv32e40x_core_inst.ex_stage_i.last_op_o ;
  wire \cv32e40x_core_inst.ex_stage_i.lsu_en_gated ;
  wire \cv32e40x_core_inst.ex_stage_i.lsu_first_op_i ;
  wire \cv32e40x_core_inst.ex_stage_i.lsu_last_op_i ;
  wire \cv32e40x_core_inst.ex_stage_i.lsu_ready_i ;
  wire \cv32e40x_core_inst.ex_stage_i.lsu_ready_o ;
  wire \cv32e40x_core_inst.ex_stage_i.lsu_split_i ;
  wire \cv32e40x_core_inst.ex_stage_i.lsu_valid_i ;
  wire \cv32e40x_core_inst.ex_stage_i.lsu_valid_o ;
  wire \cv32e40x_core_inst.ex_stage_i.mret_ptr_valid ;
  wire \cv32e40x_core_inst.ex_stage_i.mul_ready ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.mul_result ;
  wire \cv32e40x_core_inst.ex_stage_i.mul_valid ;
  wire [31:0] \cv32e40x_core_inst.ex_stage_i.rf_wdata_o ;
  wire \cv32e40x_core_inst.ex_stage_i.rst_n ;
  wire \cv32e40x_core_inst.ex_stage_i.sys_ready ;
  wire \cv32e40x_core_inst.ex_stage_i.sys_valid ;
  wire \cv32e40x_core_inst.ex_stage_i.wb_ready_i ;
  wire \cv32e40x_core_inst.ex_stage_i.xif_csr_error_o ;
  wire \cv32e40x_core_inst.ex_stage_i.xif_ready ;
  wire \cv32e40x_core_inst.ex_stage_i.xif_valid ;
  wire \cv32e40x_core_inst.ex_valid ;
  wire [247:0] \cv32e40x_core_inst.ex_wb_pipe ;
  wire \cv32e40x_core_inst.fencei_flush_ack_i ;
  wire \cv32e40x_core_inst.fetch_enable ;
  wire \cv32e40x_core_inst.fetch_enable_i ;
  wire \cv32e40x_core_inst.first_op_id ;
  wire \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.clk ;
  wire \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.global_irq_enable ;
  wire [31:0] \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.irq_i ;
  wire [4:0] \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.irq_id_ctrl_o ;
  wire [31:0] \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.irq_local_qual ;
  wire [31:0] \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.irq_q ;
  wire \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.irq_req_ctrl_o ;
  wire \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.irq_wu_ctrl_o ;
  wire [31:0] \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.mie_i ;
  wire [31:0] \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.mip_o ;
  wire [31:0] \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.mstatus_i ;
  wire [1:0] \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.priv_lvl_i ;
  wire \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.rst_n ;
  wire [352:0] \cv32e40x_core_inst.id_ex_pipe ;
  wire \cv32e40x_core_inst.id_ready ;
  wire [5:0] \cv32e40x_core_inst.id_stage_i.ID_EX_PIPE_REGISTERS.sv2v_autoblock_1.sv2v_tmp_cast ;
  wire \cv32e40x_core_inst.id_stage_i.ID_EX_PIPE_REGISTERS.sv2v_autoblock_2.sv2v_tmp_cast_1 ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.ID_EX_PIPE_REGISTERS.sv2v_autoblock_3.sv2v_tmp_cast_2 ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.ID_EX_PIPE_REGISTERS.sv2v_autoblock_4.sv2v_tmp_cast_3 ;
  wire \cv32e40x_core_inst.id_stage_i.abort_op_o ;
  wire \cv32e40x_core_inst.id_stage_i.alu_bch ;
  wire \cv32e40x_core_inst.id_stage_i.alu_en ;
  wire \cv32e40x_core_inst.id_stage_i.alu_en_o ;
  wire \cv32e40x_core_inst.id_stage_i.alu_jmp ;
  wire \cv32e40x_core_inst.id_stage_i.alu_jmp_o ;
  wire \cv32e40x_core_inst.id_stage_i.alu_jmpr ;
  wire \cv32e40x_core_inst.id_stage_i.alu_jmpr_o ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.alu_op_a_mux_sel ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.alu_op_b_mux_sel ;
  wire [5:0] \cv32e40x_core_inst.id_stage_i.alu_operator ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.bch_jmp_mux_sel ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.bch_target ;
  wire \cv32e40x_core_inst.id_stage_i.clk ;
  wire \cv32e40x_core_inst.id_stage_i.csr_en ;
  wire \cv32e40x_core_inst.id_stage_i.csr_en_raw ;
  wire \cv32e40x_core_inst.id_stage_i.csr_en_raw_o ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.csr_op ;
  wire [17:0] \cv32e40x_core_inst.id_stage_i.ctrl_byp_i ;
  wire [201:0] \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.bch_jmp_mux_sel_i ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.bch_target_o ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.imm_i_type_i ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.imm_sb_type_i ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.imm_uj_type_i ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.jalr_fw_i ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.jmp_target_o ;
  wire [25:0] \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.jvt_addr_i ;
  wire [7:0] \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.jvt_index_i ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.pc_id_i ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.pc_target ;
  wire [54:0] \cv32e40x_core_inst.id_stage_i.decoder_i.a_decoder.a_decoder_i.decoder_ctrl_o ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.decoder_i.a_decoder.a_decoder_i.instr_rdata_i ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.alu_bch_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.alu_en ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.alu_en_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.alu_jmp_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.alu_jmpr_o ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.decoder_i.alu_op_a_mux_sel_o ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.decoder_i.alu_op_b_mux_sel_o ;
  wire [5:0] \cv32e40x_core_inst.id_stage_i.decoder_i.alu_operator_o ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.decoder_i.bch_jmp_mux_sel_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.csr_en ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.csr_en_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.csr_en_raw_o ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.decoder_i.csr_op_o ;
  wire [201:0] \cv32e40x_core_inst.id_stage_i.decoder_i.ctrl_fsm_i ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.deassert_we_i ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.dec_a_rf_illegal_addr ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.dec_b_rf_illegal_addr ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.dec_i_rf_illegal_addr ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.dec_m_rf_illegal_addr ;
  wire [54:0] \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_a_ctrl ;
  wire [54:0] \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_a_ctrl_int ;
  wire [54:0] \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_b_ctrl ;
  wire [54:0] \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux ;
  wire [54:0] \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl ;
  wire [54:0] \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl_int ;
  wire [54:0] \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_m_ctrl ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.div_en ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.div_en_o ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.decoder_i.div_operator_o ;
  wire [201:0] \cv32e40x_core_inst.id_stage_i.decoder_i.i_decoder_i.ctrl_fsm_i ;
  wire [54:0] \cv32e40x_core_inst.id_stage_i.decoder_i.i_decoder_i.decoder_ctrl_o ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.decoder_i.i_decoder_i.instr_rdata_i ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.i_decoder_i.tbljmp_i ;
  wire [190:0] \cv32e40x_core_inst.id_stage_i.decoder_i.if_id_pipe_i ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.illegal_insn_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.imm_a_mux_sel_o ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.decoder_i.imm_b_mux_sel_o ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.decoder_i.instr_rdata ;
  wire [5:0] \cv32e40x_core_inst.id_stage_i.decoder_i.lsu_atop_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.lsu_en ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.lsu_en_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.lsu_sext_o ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.decoder_i.lsu_size_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.lsu_we_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.mul_en ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.mul_en_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.mul_operator_o ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.decoder_i.mul_signed_mode_o ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.decoder_i.op_c_mux_sel_o ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.decoder_i.rf_illegal_raddr_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.rf_illegal_waddr ;
  wire [9:0] \cv32e40x_core_inst.id_stage_i.decoder_i.rf_raddr_i ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.decoder_i.rf_re_o ;
  wire [4:0] \cv32e40x_core_inst.id_stage_i.decoder_i.rf_waddr_i ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.rf_we ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.rf_we_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.sys_dret_insn_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.sys_ebrk_insn_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.sys_ecall_insn_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.sys_en ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.sys_en_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.sys_fence_insn_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.sys_fencei_insn_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.sys_mret_insn_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.sys_wfe_insn_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.sys_wfi_insn_o ;
  wire \cv32e40x_core_inst.id_stage_i.decoder_i.tbljmp_first_i ;
  wire \cv32e40x_core_inst.id_stage_i.div_en ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.div_operator ;
  wire \cv32e40x_core_inst.id_stage_i.ex_ready_i ;
  wire [247:0] \cv32e40x_core_inst.id_stage_i.ex_wb_pipe_i ;
  wire \cv32e40x_core_inst.id_stage_i.first_op_o ;
  wire [352:0] \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o ;
  wire \cv32e40x_core_inst.id_stage_i.id_ready_o ;
  wire \cv32e40x_core_inst.id_stage_i.id_valid_o ;
  wire [190:0] \cv32e40x_core_inst.id_stage_i.if_id_pipe_i ;
  wire \cv32e40x_core_inst.id_stage_i.illegal_insn ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.imm_a ;
  wire \cv32e40x_core_inst.id_stage_i.imm_a_mux_sel ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.imm_b ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.imm_b_mux_sel ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.imm_i_type ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.imm_s_type ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.imm_sb_type ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.imm_u_type ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.imm_uj_type ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.imm_z_type ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.instr ;
  wire \cv32e40x_core_inst.id_stage_i.instr_valid ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.jalr_fw ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.jmp_target_o ;
  wire [25:0] \cv32e40x_core_inst.id_stage_i.jvt_addr_i ;
  wire [7:0] \cv32e40x_core_inst.id_stage_i.jvt_index ;
  wire \cv32e40x_core_inst.id_stage_i.last_op_o ;
  wire [5:0] \cv32e40x_core_inst.id_stage_i.lsu_atop ;
  wire \cv32e40x_core_inst.id_stage_i.lsu_en ;
  wire \cv32e40x_core_inst.id_stage_i.lsu_sext ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.lsu_size ;
  wire \cv32e40x_core_inst.id_stage_i.lsu_we ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.mcause_i ;
  wire \cv32e40x_core_inst.id_stage_i.mul_en ;
  wire \cv32e40x_core_inst.id_stage_i.mul_operator ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.mul_signed_mode ;
  wire [6:1] \cv32e40x_core_inst.id_stage_i.no_x_ext.sv2v_tmp_2C7E0 ;
  wire [2:1] \cv32e40x_core_inst.id_stage_i.no_x_ext.sv2v_tmp_73036 ;
  wire [2:1] \cv32e40x_core_inst.id_stage_i.no_x_ext.sv2v_tmp_7A2FC ;
  wire [4:1] \cv32e40x_core_inst.id_stage_i.no_x_ext.sv2v_tmp_7D3C1 ;
  wire [32:1] \cv32e40x_core_inst.id_stage_i.no_x_ext.sv2v_tmp_85082 ;
  wire \cv32e40x_core_inst.id_stage_i.no_x_ext.sv2v_tmp_C1C70 ;
  wire [64:1] \cv32e40x_core_inst.id_stage_i.no_x_ext.sv2v_tmp_ED5B0 ;
  wire \cv32e40x_core_inst.id_stage_i.no_x_ext.unused_xif_signals ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.op_c_mux_sel ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.operand_a ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.operand_a_fw ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.operand_b ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.operand_b_fw ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.operand_c ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.rf_illegal_raddr ;
  wire [9:0] \cv32e40x_core_inst.id_stage_i.rf_raddr_o ;
  wire [63:0] \cv32e40x_core_inst.id_stage_i.rf_rdata_i ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.rf_re ;
  wire [1:0] \cv32e40x_core_inst.id_stage_i.rf_re_o ;
  wire [4:0] \cv32e40x_core_inst.id_stage_i.rf_waddr ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.rf_wdata_ex_i ;
  wire [31:0] \cv32e40x_core_inst.id_stage_i.rf_wdata_wb_i ;
  wire \cv32e40x_core_inst.id_stage_i.rf_we ;
  wire \cv32e40x_core_inst.id_stage_i.rf_we_dec ;
  wire \cv32e40x_core_inst.id_stage_i.rst_n ;
  wire \cv32e40x_core_inst.id_stage_i.sys_dret_insn ;
  wire \cv32e40x_core_inst.id_stage_i.sys_ebrk_insn ;
  wire \cv32e40x_core_inst.id_stage_i.sys_ecall_insn ;
  wire \cv32e40x_core_inst.id_stage_i.sys_en ;
  wire \cv32e40x_core_inst.id_stage_i.sys_en_o ;
  wire \cv32e40x_core_inst.id_stage_i.sys_fence_insn ;
  wire \cv32e40x_core_inst.id_stage_i.sys_fencei_insn ;
  wire \cv32e40x_core_inst.id_stage_i.sys_mret_insn ;
  wire \cv32e40x_core_inst.id_stage_i.sys_mret_insn_o ;
  wire \cv32e40x_core_inst.id_stage_i.sys_wfe_insn ;
  wire \cv32e40x_core_inst.id_stage_i.sys_wfi_insn ;
  wire \cv32e40x_core_inst.id_stage_i.tbljmp_first ;
  wire \cv32e40x_core_inst.id_stage_i.xif_dualwrite ;
  wire \cv32e40x_core_inst.id_stage_i.xif_en ;
  wire \cv32e40x_core_inst.id_stage_i.xif_exception ;
  wire \cv32e40x_core_inst.id_stage_i.xif_insn_accept ;
  wire \cv32e40x_core_inst.id_stage_i.xif_insn_reject ;
  wire \cv32e40x_core_inst.id_stage_i.xif_loadstore ;
  wire \cv32e40x_core_inst.id_stage_i.xif_offloading_o ;
  wire \cv32e40x_core_inst.id_stage_i.xif_waiting ;
  wire \cv32e40x_core_inst.id_stage_i.xif_we ;
  wire \cv32e40x_core_inst.id_valid ;
  wire \cv32e40x_core_inst.if_busy ;
  wire [190:0] \cv32e40x_core_inst.if_id_pipe ;
  wire \cv32e40x_core_inst.if_stage_i.abort_op_o ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.boot_addr_i ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.branch_addr_n ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.branch_target_ex_i ;
  wire [32:0] \cv32e40x_core_inst.if_stage_i.bus_resp ;
  wire \cv32e40x_core_inst.if_stage_i.bus_resp_valid ;
  wire [37:0] \cv32e40x_core_inst.if_stage_i.bus_trans ;
  wire \cv32e40x_core_inst.if_stage_i.bus_trans_ready ;
  wire \cv32e40x_core_inst.if_stage_i.bus_trans_valid ;
  wire \cv32e40x_core_inst.if_stage_i.clk ;
  wire \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.illegal_instr_o ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr ;
  wire [34:0] \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i ;
  wire \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_is_ptr_i ;
  wire [34:0] \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_o ;
  wire \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.is_compressed_o ;
  wire [37:0] \cv32e40x_core_inst.if_stage_i.core_trans ;
  wire \cv32e40x_core_inst.if_stage_i.csr_mtvec_init_o ;
  wire [201:0] \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.dm_exception_addr_i ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.dm_halt_addr_i ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.dpc_i ;
  wire \cv32e40x_core_inst.if_stage_i.first_op ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.clk ;
  wire [11:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_get_stack_adj_base$func$preprocessed.v:9548$2276.$result ;
  wire [3:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_get_stack_adj_base$func$preprocessed.v:9548$2309.rlist ;
  wire [3:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_pushpop_reg_length$func$preprocessed.v:9522$2275.$result ;
  wire [3:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_pushpop_reg_length$func$preprocessed.v:9522$2308.rlist4 ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_sn_to_regnum$func$preprocessed.v:9618$2278.snum ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_sn_to_regnum$func$preprocessed.v:9624$2281.snum ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_sn_to_regnum$func$preprocessed.v:9641$2284.snum ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_sn_to_regnum$func$preprocessed.v:9647$2287.snum ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_sn_to_regnum$func$preprocessed.v:9661$2290.snum ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_sn_to_regnum$func$preprocessed.v:9678$2293.snum ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_sn_to_regnum$func$preprocessed.v:9686$2296.snum ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_sn_to_regnum$func$preprocessed.v:9696$2299.snum ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_sn_to_regnum$func$preprocessed.v:9708$2302.snum ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_sn_to_regnum$func$preprocessed.v:9711$2305.snum ;
  wire [44:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.decode ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.dmove_legal_dest ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.halt_i ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr ;
  reg [3:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr_cnt_q ;
  wire [34:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr_i ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr_is_clic_ptr_i ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr_is_mret_ptr_i ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr_is_pointer ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr_is_tbljmp_ptr_i ;
  wire [34:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr_o ;
  wire [5:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.jvt_mode_i ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.kill_i ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.pushpop_legal_rlist ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.ready_fsm ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.ready_i ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.ready_o ;
  wire [3:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.rlist ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.rst_n ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_first_fsm ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_first_o ;
  wire [3:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_instr ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_last_fsm ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_last_o ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_load ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_move_a2s ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_move_s2a ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_pushpop_o ;
  wire [3:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_state_n ;
  reg [3:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_state_q ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_store ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_tbljmp_o ;
  wire [11:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_12$func$preprocessed.v:9567$2277.inp ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9592$2279.inp ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9592$2282.inp ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9592$2285.inp ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9592$2288.inp ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9592$2291.inp ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9592$2294.inp ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9592$2297.inp ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9592$2300.inp ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9592$2303.inp ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9592$2306.inp ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9595$2280.inp ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9595$2283.inp ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9595$2286.inp ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9595$2289.inp ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9595$2292.inp ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9595$2295.inp ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9595$2298.inp ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9595$2301.inp ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9595$2304.inp ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9595$2307.inp ;
  wire [5:1] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_tmp_0F807 ;
  wire [4:1] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_tmp_1047E ;
  wire [12:1] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_tmp_43B39 ;
  wire [12:1] \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_tmp_64EFF ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.valid_i ;
  wire \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.valid_o ;
  wire \cv32e40x_core_inst.if_stage_i.id_ready_i ;
  wire \cv32e40x_core_inst.if_stage_i.if_busy_o ;
  wire [190:0] \cv32e40x_core_inst.if_stage_i.if_id_pipe_o ;
  wire \cv32e40x_core_inst.if_stage_i.if_ready ;
  wire \cv32e40x_core_inst.if_stage_i.if_valid_o ;
  wire \cv32e40x_core_inst.if_stage_i.illegal_c_insn ;
  wire \cv32e40x_core_inst.if_stage_i.instr_compressed ;
  wire [34:0] \cv32e40x_core_inst.if_stage_i.instr_decompressed ;
  wire [4:0] \cv32e40x_core_inst.if_stage_i.instr_meta_n ;
  wire \cv32e40x_core_inst.if_stage_i.instr_valid ;
  wire \cv32e40x_core_inst.if_stage_i.instruction_obi_i.clk ;
  wire \cv32e40x_core_inst.if_stage_i.instruction_obi_i.next_state ;
  wire [37:0] \cv32e40x_core_inst.if_stage_i.instruction_obi_i.obi_a_req_q ;
  wire [32:0] \cv32e40x_core_inst.if_stage_i.instruction_obi_i.resp_o ;
  wire \cv32e40x_core_inst.if_stage_i.instruction_obi_i.resp_valid_o ;
  wire \cv32e40x_core_inst.if_stage_i.instruction_obi_i.rst_n ;
  reg \cv32e40x_core_inst.if_stage_i.instruction_obi_i.state_q ;
  wire [37:0] \cv32e40x_core_inst.if_stage_i.instruction_obi_i.trans_i ;
  wire \cv32e40x_core_inst.if_stage_i.instruction_obi_i.trans_ready_o ;
  wire \cv32e40x_core_inst.if_stage_i.instruction_obi_i.trans_valid_i ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.jump_target_id_i ;
  wire [5:0] \cv32e40x_core_inst.if_stage_i.jvt_mode_i ;
  wire \cv32e40x_core_inst.if_stage_i.last_op_o ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.mepc_i ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.atomic_access_i ;
  wire [32:0] \cv32e40x_core_inst.if_stage_i.mpu_i.bus_resp_i ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.bus_resp_valid_i ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.bus_trans_bufferable ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.bus_trans_cacheable ;
  wire [37:0] \cv32e40x_core_inst.if_stage_i.mpu_i.bus_trans_o ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.bus_trans_ready_i ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.bus_trans_valid_o ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.clk ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.core_mpu_err_o ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.core_mpu_err_wait_i ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.core_one_txn_pend_n ;
  wire [34:0] \cv32e40x_core_inst.if_stage_i.mpu_i.core_resp_o ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.core_resp_valid_o ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_debug_region ;
  wire [37:0] \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_i ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_pushpop_i ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_ready_o ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_valid_i ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_we ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.instr_fetch_access ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.load_access ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.misaligned_access_i ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.modified_access_i ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_block_bus ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_block_core ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_err ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_err_trans_ready ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_err_trans_valid ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_status ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.pma_err ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.atomic_access_i ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.instr_fetch_access_i ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.load_access_i ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.misaligned_access_i ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.modified_access_i ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.pma_bufferable_o ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.pma_cacheable_o ;
  wire [67:0] \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.pma_cfg ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.pma_cfg_atomic ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.pma_err_o ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.trans_addr_i ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.trans_debug_region_i ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.trans_pushpop_i ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.word_addr ;
  wire \cv32e40x_core_inst.if_stage_i.mpu_i.rst_n ;
  wire [2:0] \cv32e40x_core_inst.if_stage_i.mpu_i.state_n ;
  reg [2:0] \cv32e40x_core_inst.if_stage_i.mpu_i.state_q ;
  wire [24:0] \cv32e40x_core_inst.if_stage_i.mtvec_addr_i ;
  wire [24:0] \cv32e40x_core_inst.if_stage_i.mtvt_addr_i ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.pc_if_o ;
  wire \cv32e40x_core_inst.if_stage_i.predec_ready ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_busy ;
  wire [34:0] \cv32e40x_core_inst.if_stage_i.prefetch_inst_resp ;
  wire [34:0] \cv32e40x_core_inst.if_stage_i.prefetch_instr ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_is_clic_ptr ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_is_mret_ptr ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_is_tbljmp_ptr ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_one_txn_pend_n ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_outstnd_cnt_q ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_priv_lvl ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_ready ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_resp_valid ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.prefetch_trans_addr ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_trans_ready ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_trans_valid ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_incr ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_n ;
  reg [31:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.aligned_is_compressed ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.aligned_n ;
  reg \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.aligned_q ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.branch_addr_i ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.bus_err ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.bus_err_unaligned ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.clk ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.complete_n ;
  reg \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.complete_q ;
  wire [201:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_branch_addr_o ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_branch_o ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_priv_lvl_i ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_priv_lvl_o ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_ptr_access_i ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_ptr_access_o ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_ready_i ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_valid_o ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_addr_o ;
  wire [2:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_cnt_n ;
  reg [2:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_cnt_q ;
  wire [34:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_instr_o ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_is_clic_ptr_o ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_is_mret_ptr_o ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_is_tbljmp_ptr_o ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_priv_lvl_o ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_priv_lvl_q ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_ready_i ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_unaligned ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_valid_o ;
  reg \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_clic_ptr_q ;
  reg \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_mret_ptr_q ;
  reg \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_tbljmp_ptr_q ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.mpu_status ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.mpu_status_unaligned ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.n_flush_branch ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.n_flush_n ;
  reg [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.n_flush_q ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.n_incoming_ins ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.n_pushed_ins ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.one_txn_pend_n ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_cnt_n ;
  reg [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_cnt_q ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_count_down ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_count_up ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstnd_cnt_q_o ;
  reg \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.pop_q ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.prefetch_busy_o ;
  wire [2:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.priv_lvl_ctrl_i ;
  reg \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ptr_fetch_accepted_q ;
  wire [34:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_i ;
  wire [34:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_n ;
  reg [104:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_q ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_valid_gated ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_valid_i ;
  reg [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.rptr ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.rptr2 ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.rptr_n ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.rst_n ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.unaligned_is_compressed ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid ;
  wire [2:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid_int ;
  wire [2:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid_n ;
  reg [2:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid_q ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid_unaligned_uncompressed ;
  reg [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.wptr ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.wptr_n ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.branch_addr_i ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.clk ;
  wire [201:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.ctrl_fsm_i ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.fetch_branch ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.fetch_branch_addr ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.fetch_priv_lvl_access ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.fetch_priv_lvl_resp ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.fetch_ptr_access ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.fetch_ptr_resp ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.fetch_ready ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.fetch_valid ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.one_txn_pend_n ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.outstnd_cnt_q_o ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetch_addr_o ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetch_busy_o ;
  wire [34:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetch_instr_o ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetch_is_clic_ptr_o ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetch_is_mret_ptr_o ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetch_is_tbljmp_ptr_o ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetch_priv_lvl_o ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetch_ready_i ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetch_valid_o ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.clk ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_addr_i ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_priv_lvl_access_i ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_priv_lvl_access_o ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_ptr_access_i ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_ptr_access_o ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_ready_o ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_valid_i ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.next_state ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.rst_n ;
  reg \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.state_q ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_incr ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_o ;
  reg [31:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_q ;
  reg [1:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_priv_lvl_q ;
  reg \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_ptr_access_q ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_ready_i ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_valid_o ;
  wire [2:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.priv_lvl_ctrl_i ;
  wire [34:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.resp_i ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.resp_valid_i ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.rst_n ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.trans_addr_o ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.trans_ready_i ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.trans_valid_o ;
  wire \cv32e40x_core_inst.if_stage_i.prefetch_valid ;
  wire [2:0] \cv32e40x_core_inst.if_stage_i.priv_lvl_ctrl_i ;
  wire [1:0] \cv32e40x_core_inst.if_stage_i.priv_lvl_if_o ;
  wire \cv32e40x_core_inst.if_stage_i.ptr_in_if_o ;
  wire \cv32e40x_core_inst.if_stage_i.rst_n ;
  wire \cv32e40x_core_inst.if_stage_i.seq_first ;
  wire [34:0] \cv32e40x_core_inst.if_stage_i.seq_instr ;
  wire \cv32e40x_core_inst.if_stage_i.seq_instr_valid ;
  wire \cv32e40x_core_inst.if_stage_i.seq_last ;
  wire \cv32e40x_core_inst.if_stage_i.seq_pushpop ;
  wire \cv32e40x_core_inst.if_stage_i.seq_ready ;
  wire \cv32e40x_core_inst.if_stage_i.seq_tbljmp ;
  wire \cv32e40x_core_inst.if_stage_i.seq_valid ;
  wire [31:0] \cv32e40x_core_inst.if_stage_i.trigger_match_i ;
  wire [3:0] \cv32e40x_core_inst.if_stage_i.xif_id ;
  wire \cv32e40x_core_inst.if_stage_i.xif_offloading_id_i ;
  wire \cv32e40x_core_inst.if_valid ;
  wire [31:0] \cv32e40x_core_inst.instr_addr_o ;
  wire \cv32e40x_core_inst.instr_dbg_o ;
  wire \cv32e40x_core_inst.instr_err_i ;
  wire \cv32e40x_core_inst.instr_gnt_i ;
  wire [1:0] \cv32e40x_core_inst.instr_memtype_o ;
  wire [2:0] \cv32e40x_core_inst.instr_prot_o ;
  wire [31:0] \cv32e40x_core_inst.instr_rdata_i ;
  wire \cv32e40x_core_inst.instr_req_o ;
  wire \cv32e40x_core_inst.instr_rvalid_i ;
  wire \cv32e40x_core_inst.irq_ack ;
  wire [7:0] \cv32e40x_core_inst.irq_clic_level ;
  wire [1:0] \cv32e40x_core_inst.irq_clic_priv ;
  wire \cv32e40x_core_inst.irq_clic_shv ;
  wire [31:0] \cv32e40x_core_inst.irq_i ;
  wire [9:0] \cv32e40x_core_inst.irq_id ;
  wire [9:0] \cv32e40x_core_inst.irq_id_ctrl ;
  wire [7:0] \cv32e40x_core_inst.irq_level ;
  wire [1:0] \cv32e40x_core_inst.irq_priv ;
  wire \cv32e40x_core_inst.irq_req_ctrl ;
  wire \cv32e40x_core_inst.irq_shv ;
  wire \cv32e40x_core_inst.irq_wu_ctrl ;
  wire [31:0] \cv32e40x_core_inst.jump_target_id ;
  wire [25:0] \cv32e40x_core_inst.jvt_addr ;
  wire [5:0] \cv32e40x_core_inst.jvt_mode ;
  wire \cv32e40x_core_inst.last_op_ex ;
  wire \cv32e40x_core_inst.last_op_id ;
  wire \cv32e40x_core_inst.last_op_if ;
  wire \cv32e40x_core_inst.last_op_wb ;
  reg [1:0] \cv32e40x_core_inst.load_store_unit_i.a_ext.lsu_atomic_q ;
  wire [70:0] \cv32e40x_core_inst.load_store_unit_i.alcheck_resp ;
  wire \cv32e40x_core_inst.load_store_unit_i.alcheck_resp_valid ;
  wire [80:0] \cv32e40x_core_inst.load_store_unit_i.alcheck_trans ;
  wire \cv32e40x_core_inst.load_store_unit_i.alcheck_trans_ready ;
  wire \cv32e40x_core_inst.load_store_unit_i.alcheck_trans_valid ;
  wire \cv32e40x_core_inst.load_store_unit_i.align_check_en ;
  wire \cv32e40x_core_inst.load_store_unit_i.align_check_i.align_block_bus ;
  wire \cv32e40x_core_inst.load_store_unit_i.align_check_i.align_block_core ;
  wire \cv32e40x_core_inst.load_store_unit_i.align_check_i.align_check_en_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.align_check_i.align_err ;
  wire [1:0] \cv32e40x_core_inst.load_store_unit_i.align_check_i.align_status ;
  wire \cv32e40x_core_inst.load_store_unit_i.align_check_i.align_trans_ready ;
  wire \cv32e40x_core_inst.load_store_unit_i.align_check_i.align_trans_valid ;
  wire [34:0] \cv32e40x_core_inst.load_store_unit_i.align_check_i.bus_resp_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.align_check_i.bus_resp_valid_i ;
  wire [80:0] \cv32e40x_core_inst.load_store_unit_i.align_check_i.bus_trans_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.align_check_i.bus_trans_ready_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.align_check_i.bus_trans_valid_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.align_check_i.clk ;
  wire \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_align_err_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_align_err_wait_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_one_txn_pend_n ;
  wire [70:0] \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_resp_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_resp_valid_o ;
  wire [80:0] \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_trans_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_trans_ready_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_trans_valid_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_trans_we ;
  wire \cv32e40x_core_inst.load_store_unit_i.align_check_i.misaligned_access_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.align_check_i.rst_n ;
  wire [2:0] \cv32e40x_core_inst.load_store_unit_i.align_check_i.state_n ;
  reg [2:0] \cv32e40x_core_inst.load_store_unit_i.align_check_i.state_q ;
  wire [3:0] \cv32e40x_core_inst.load_store_unit_i.be ;
  wire [80:0] \cv32e40x_core_inst.load_store_unit_i.buffer_trans ;
  wire \cv32e40x_core_inst.load_store_unit_i.buffer_trans_ready ;
  wire \cv32e40x_core_inst.load_store_unit_i.buffer_trans_valid ;
  wire \cv32e40x_core_inst.load_store_unit_i.bus_busy_o ;
  wire [34:0] \cv32e40x_core_inst.load_store_unit_i.bus_resp ;
  wire \cv32e40x_core_inst.load_store_unit_i.bus_resp_valid ;
  wire [80:0] \cv32e40x_core_inst.load_store_unit_i.bus_trans ;
  wire \cv32e40x_core_inst.load_store_unit_i.bus_trans_ready ;
  wire \cv32e40x_core_inst.load_store_unit_i.bus_trans_valid ;
  wire \cv32e40x_core_inst.load_store_unit_i.busy_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.clk ;
  wire \cv32e40x_core_inst.load_store_unit_i.cnt_is_one_next ;
  reg [1:0] \cv32e40x_core_inst.load_store_unit_i.cnt_q ;
  wire \cv32e40x_core_inst.load_store_unit_i.consumer_resp_wait ;
  wire \cv32e40x_core_inst.load_store_unit_i.count_down ;
  wire \cv32e40x_core_inst.load_store_unit_i.count_up ;
  wire [201:0] \cv32e40x_core_inst.load_store_unit_i.ctrl_fsm_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.ctrl_update ;
  wire \cv32e40x_core_inst.load_store_unit_i.data_obi_i.clk ;
  wire [34:0] \cv32e40x_core_inst.load_store_unit_i.data_obi_i.resp_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.data_obi_i.resp_valid_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.data_obi_i.rst_n ;
  wire [80:0] \cv32e40x_core_inst.load_store_unit_i.data_obi_i.trans_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.data_obi_i.trans_ready_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.data_obi_i.trans_valid_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.done_0 ;
  wire [34:0] \cv32e40x_core_inst.load_store_unit_i.filter_resp ;
  wire \cv32e40x_core_inst.load_store_unit_i.filter_resp_busy ;
  wire \cv32e40x_core_inst.load_store_unit_i.filter_resp_valid ;
  wire [80:0] \cv32e40x_core_inst.load_store_unit_i.filter_trans ;
  wire \cv32e40x_core_inst.load_store_unit_i.filter_trans_ready ;
  wire \cv32e40x_core_inst.load_store_unit_i.filter_trans_valid ;
  wire \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.clk ;
  wire \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_one_txn_pend_n ;
  wire [70:0] \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_resp_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_resp_valid_o ;
  wire [80:0] \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_trans_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_trans_pushpop_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_trans_ready_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_trans_valid_i ;
  wire [31:0] \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_wpt_match_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_wpt_wait_i ;
  wire [70:0] \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.mpu_resp_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.mpu_resp_valid_i ;
  wire [80:0] \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.mpu_trans_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.mpu_trans_pushpop_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.mpu_trans_ready_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.mpu_trans_valid_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.rst_n ;
  wire [1:0] \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.state_n ;
  reg [1:0] \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.state_q ;
  wire [31:0] \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.trigger_match_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.wpt_block_bus ;
  wire \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.wpt_block_core ;
  wire [31:0] \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.wpt_match ;
  wire [31:0] \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.wpt_match_n ;
  reg [31:0] \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.wpt_match_q ;
  wire \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.wpt_trans_ready ;
  wire \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.wpt_trans_valid ;
  wire [352:0] \cv32e40x_core_inst.load_store_unit_i.id_ex_pipe_i ;
  wire [31:0] \cv32e40x_core_inst.load_store_unit_i.lsu_addr_o ;
  wire [1:0] \cv32e40x_core_inst.load_store_unit_i.lsu_align_status_1_o ;
  wire [1:0] \cv32e40x_core_inst.load_store_unit_i.lsu_atomic_0_o ;
  wire [1:0] \cv32e40x_core_inst.load_store_unit_i.lsu_atomic_1_o ;
  wire [3:0] \cv32e40x_core_inst.load_store_unit_i.lsu_be_o ;
  wire [1:0] \cv32e40x_core_inst.load_store_unit_i.lsu_err_1_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.lsu_first_op_0_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.lsu_last_op_0_o ;
  wire [1:0] \cv32e40x_core_inst.load_store_unit_i.lsu_mpu_status_1_o ;
  wire [31:0] \cv32e40x_core_inst.load_store_unit_i.lsu_rdata_1_o ;
  reg \cv32e40x_core_inst.load_store_unit_i.lsu_sext_q ;
  reg [1:0] \cv32e40x_core_inst.load_store_unit_i.lsu_size_q ;
  wire \cv32e40x_core_inst.load_store_unit_i.lsu_split_0_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.lsu_we_o ;
  reg \cv32e40x_core_inst.load_store_unit_i.lsu_we_q ;
  wire [31:0] \cv32e40x_core_inst.load_store_unit_i.lsu_wpt_match_1_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.misaligned_access ;
  wire \cv32e40x_core_inst.load_store_unit_i.modified_access ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.atomic_access_i ;
  wire [70:0] \cv32e40x_core_inst.load_store_unit_i.mpu_i.bus_resp_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.bus_resp_valid_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.bus_trans_bufferable ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.bus_trans_cacheable ;
  wire [80:0] \cv32e40x_core_inst.load_store_unit_i.mpu_i.bus_trans_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.bus_trans_ready_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.bus_trans_valid_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.clk ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_mpu_err_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_mpu_err_wait_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_one_txn_pend_n ;
  wire [70:0] \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_resp_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_resp_valid_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_trans_debug_region ;
  wire [80:0] \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_trans_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_trans_pushpop_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_trans_ready_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_trans_valid_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_trans_we ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.instr_fetch_access ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.load_access ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.misaligned_access_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.modified_access_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.mpu_block_bus ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.mpu_block_core ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.mpu_err ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.mpu_err_trans_ready ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.mpu_err_trans_valid ;
  wire [1:0] \cv32e40x_core_inst.load_store_unit_i.mpu_i.mpu_status ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_err ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.atomic_access_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.instr_fetch_access_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.load_access_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.misaligned_access_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.modified_access_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_bufferable_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cacheable_o ;
  wire [67:0] \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cfg ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cfg_atomic ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_err_o ;
  wire [31:0] \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.trans_addr_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.trans_debug_region_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.trans_pushpop_i ;
  wire [31:0] \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.word_addr ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_i.rst_n ;
  wire [2:0] \cv32e40x_core_inst.load_store_unit_i.mpu_i.state_n ;
  reg [2:0] \cv32e40x_core_inst.load_store_unit_i.mpu_i.state_q ;
  wire [70:0] \cv32e40x_core_inst.load_store_unit_i.mpu_resp ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_resp_valid ;
  wire [80:0] \cv32e40x_core_inst.load_store_unit_i.mpu_trans ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_trans_atomic ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_trans_pushpop ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_trans_ready ;
  wire \cv32e40x_core_inst.load_store_unit_i.mpu_trans_valid ;
  wire [1:0] \cv32e40x_core_inst.load_store_unit_i.next_cnt ;
  wire \cv32e40x_core_inst.load_store_unit_i.no_x_ext_regs.sv2v_tmp_288F3 ;
  wire [4:1] \cv32e40x_core_inst.load_store_unit_i.no_x_ext_regs.sv2v_tmp_BF3FD ;
  wire \cv32e40x_core_inst.load_store_unit_i.nonsplit_misaligned_halfword ;
  wire [1:0] \cv32e40x_core_inst.load_store_unit_i.priv_lvl_lsu_i ;
  wire [63:0] \cv32e40x_core_inst.load_store_unit_i.rdata_aligned ;
  wire [31:0] \cv32e40x_core_inst.load_store_unit_i.rdata_ext ;
  wire [63:0] \cv32e40x_core_inst.load_store_unit_i.rdata_full ;
  wire \cv32e40x_core_inst.load_store_unit_i.rdata_is_split ;
  reg [1:0] \cv32e40x_core_inst.load_store_unit_i.rdata_offset_q ;
  reg [31:0] \cv32e40x_core_inst.load_store_unit_i.rdata_q ;
  wire \cv32e40x_core_inst.load_store_unit_i.ready_0_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.ready_0_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.ready_1_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.ready_1_o ;
  wire [70:0] \cv32e40x_core_inst.load_store_unit_i.resp ;
  wire [31:0] \cv32e40x_core_inst.load_store_unit_i.resp_rdata ;
  wire \cv32e40x_core_inst.load_store_unit_i.resp_valid ;
  wire \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_busy_o ;
  reg [1:0] \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_cnt_q ;
  wire \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_count_down ;
  wire \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_count_up ;
  wire [1:0] \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_next_cnt ;
  wire \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_resp_is_bufferable ;
  wire \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_trans_accepted ;
  wire \cv32e40x_core_inst.load_store_unit_i.response_filter_i.busy_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.response_filter_i.clk ;
  reg [1:0] \cv32e40x_core_inst.load_store_unit_i.response_filter_i.core_cnt_q ;
  wire \cv32e40x_core_inst.load_store_unit_i.response_filter_i.core_count_down ;
  wire \cv32e40x_core_inst.load_store_unit_i.response_filter_i.core_count_up ;
  wire [1:0] \cv32e40x_core_inst.load_store_unit_i.response_filter_i.core_next_cnt ;
  wire \cv32e40x_core_inst.load_store_unit_i.response_filter_i.core_resp_is_bufferable ;
  wire \cv32e40x_core_inst.load_store_unit_i.response_filter_i.core_trans_accepted ;
  wire [5:0] \cv32e40x_core_inst.load_store_unit_i.response_filter_i.outstanding_q ;
  wire \cv32e40x_core_inst.load_store_unit_i.response_filter_i.ready_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.response_filter_i.ready_o ;
  wire [34:0] \cv32e40x_core_inst.load_store_unit_i.response_filter_i.resp_i ;
  wire [34:0] \cv32e40x_core_inst.load_store_unit_i.response_filter_i.resp_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.response_filter_i.resp_valid_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.response_filter_i.resp_valid_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.response_filter_i.rst_n ;
  wire [1:0] \cv32e40x_core_inst.load_store_unit_i.response_filter_i.sv2v_cast_2$func$preprocessed.v:7539$2080.inp ;
  wire [80:0] \cv32e40x_core_inst.load_store_unit_i.response_filter_i.trans_i ;
  wire [80:0] \cv32e40x_core_inst.load_store_unit_i.response_filter_i.trans_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.response_filter_i.valid_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.response_filter_i.valid_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.rst_n ;
  reg \cv32e40x_core_inst.load_store_unit_i.split_q ;
  wire [76:0] \cv32e40x_core_inst.load_store_unit_i.trans ;
  wire \cv32e40x_core_inst.load_store_unit_i.trans_ready ;
  wire \cv32e40x_core_inst.load_store_unit_i.trans_valid ;
  wire [31:0] \cv32e40x_core_inst.load_store_unit_i.trigger_match_0_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.valid_0_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.valid_0_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.valid_1_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.valid_1_o ;
  wire [31:0] \cv32e40x_core_inst.load_store_unit_i.wdata ;
  wire [70:0] \cv32e40x_core_inst.load_store_unit_i.wpt_resp ;
  wire [31:0] \cv32e40x_core_inst.load_store_unit_i.wpt_resp_rdata ;
  wire \cv32e40x_core_inst.load_store_unit_i.wpt_resp_valid ;
  wire [80:0] \cv32e40x_core_inst.load_store_unit_i.wpt_trans ;
  wire \cv32e40x_core_inst.load_store_unit_i.wpt_trans_pushpop ;
  wire \cv32e40x_core_inst.load_store_unit_i.wpt_trans_ready ;
  wire \cv32e40x_core_inst.load_store_unit_i.wpt_trans_valid ;
  wire \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.bufferable ;
  wire \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.clk ;
  wire \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.next_state ;
  wire \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.push ;
  wire \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.ready_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.ready_o ;
  wire \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.rst_n ;
  reg \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.state ;
  wire [80:0] \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.trans_i ;
  wire [80:0] \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.trans_o ;
  reg [80:0] \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.trans_q ;
  wire \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.valid_i ;
  wire \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.valid_o ;
  wire [3:0] \cv32e40x_core_inst.load_store_unit_i.xif_id_q ;
  wire \cv32e40x_core_inst.load_store_unit_i.xif_mpu_err ;
  wire \cv32e40x_core_inst.load_store_unit_i.xif_req ;
  wire \cv32e40x_core_inst.load_store_unit_i.xif_res_q ;
  wire [31:0] \cv32e40x_core_inst.load_store_unit_i.xif_wpt_match ;
  wire [31:0] \cv32e40x_core_inst.lsu_addr_ex ;
  wire [1:0] \cv32e40x_core_inst.lsu_align_status_wb ;
  wire [1:0] \cv32e40x_core_inst.lsu_atomic_ex ;
  wire [1:0] \cv32e40x_core_inst.lsu_atomic_wb ;
  wire [3:0] \cv32e40x_core_inst.lsu_be_ex ;
  wire \cv32e40x_core_inst.lsu_bus_busy ;
  wire \cv32e40x_core_inst.lsu_busy ;
  wire [1:0] \cv32e40x_core_inst.lsu_err_wb ;
  wire \cv32e40x_core_inst.lsu_first_op_ex ;
  wire \cv32e40x_core_inst.lsu_last_op_ex ;
  wire [1:0] \cv32e40x_core_inst.lsu_mpu_status_wb ;
  wire [31:0] \cv32e40x_core_inst.lsu_rdata_wb ;
  wire \cv32e40x_core_inst.lsu_ready_0 ;
  wire \cv32e40x_core_inst.lsu_ready_1 ;
  wire \cv32e40x_core_inst.lsu_ready_ex ;
  wire \cv32e40x_core_inst.lsu_ready_wb ;
  wire \cv32e40x_core_inst.lsu_split_ex ;
  wire \cv32e40x_core_inst.lsu_valid_0 ;
  wire \cv32e40x_core_inst.lsu_valid_1 ;
  wire \cv32e40x_core_inst.lsu_valid_ex ;
  wire \cv32e40x_core_inst.lsu_valid_wb ;
  wire \cv32e40x_core_inst.lsu_we_ex ;
  wire [31:0] \cv32e40x_core_inst.lsu_wpt_match_wb ;
  wire [80:0] \cv32e40x_core_inst.m_c_obi_data_if.req_payload ;
  wire [34:0] \cv32e40x_core_inst.m_c_obi_data_if.resp_payload ;
  wire \cv32e40x_core_inst.m_c_obi_data_if.s_gnt ;
  wire \cv32e40x_core_inst.m_c_obi_data_if.s_req ;
  wire \cv32e40x_core_inst.m_c_obi_data_if.s_rvalid ;
  wire [37:0] \cv32e40x_core_inst.m_c_obi_instr_if.req_payload ;
  wire [32:0] \cv32e40x_core_inst.m_c_obi_instr_if.resp_payload ;
  wire \cv32e40x_core_inst.m_c_obi_instr_if.s_gnt ;
  wire \cv32e40x_core_inst.m_c_obi_instr_if.s_req ;
  wire \cv32e40x_core_inst.m_c_obi_instr_if.s_rvalid ;
  wire [31:0] \cv32e40x_core_inst.mcause ;
  wire [63:0] \cv32e40x_core_inst.mcycle_o ;
  wire [31:0] \cv32e40x_core_inst.mepc ;
  wire [31:0] \cv32e40x_core_inst.mhartid_i ;
  wire [31:0] \cv32e40x_core_inst.mie ;
  wire [3:0] \cv32e40x_core_inst.mimpid_patch_i ;
  wire [31:0] \cv32e40x_core_inst.mintstatus ;
  wire [7:0] \cv32e40x_core_inst.mintthresh_th ;
  wire [31:0] \cv32e40x_core_inst.mip ;
  wire [4:0] \cv32e40x_core_inst.mnxti_irq_id ;
  wire [7:0] \cv32e40x_core_inst.mnxti_irq_level ;
  wire \cv32e40x_core_inst.mnxti_irq_pending ;
  wire [1:0] \cv32e40x_core_inst.mpu_status_wb ;
  wire [31:0] \cv32e40x_core_inst.mstatus ;
  wire [24:0] \cv32e40x_core_inst.mtvec_addr ;
  wire [31:0] \cv32e40x_core_inst.mtvec_addr_i ;
  wire [1:0] \cv32e40x_core_inst.mtvec_mode ;
  wire [24:0] \cv32e40x_core_inst.mtvt_addr ;
  wire [31:0] \cv32e40x_core_inst.pc_if ;
  wire [1:0] \cv32e40x_core_inst.priv_lvl ;
  wire [1:0] \cv32e40x_core_inst.priv_lvl_if ;
  wire [2:0] \cv32e40x_core_inst.priv_lvl_if_ctrl ;
  wire [1:0] \cv32e40x_core_inst.priv_lvl_lsu ;
  wire \cv32e40x_core_inst.ptr_in_if ;
  wire \cv32e40x_core_inst.register_file_wrapper_i.clk ;
  wire [9:0] \cv32e40x_core_inst.register_file_wrapper_i.raddr_i ;
  wire [63:0] \cv32e40x_core_inst.register_file_wrapper_i.rdata_o ;
  wire \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.clk ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[10].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[11].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[12].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[13].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[14].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[15].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[16].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[17].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[18].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[19].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[1].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[20].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[21].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[22].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[23].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[24].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[25].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[26].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[27].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[28].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[29].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[2].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[30].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[31].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[3].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[4].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[5].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[6].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[7].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[8].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[9].register_write_behavioral.sv2v_autoblock_1.j ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[0] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[10] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[11] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[12] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[13] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[14] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[15] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[16] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[17] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[18] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[19] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[1] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[20] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[21] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[22] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[23] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[24] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[25] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[26] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[27] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[28] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[29] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[2] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[30] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[31] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[3] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[4] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[5] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[6] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[7] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[8] ;
  reg [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[9] ;
  wire [9:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.raddr_i ;
  wire [63:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.rdata_o ;
  wire \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.rst_n ;
  wire [4:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.waddr_i ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] ;
  wire \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i ;
  wire \cv32e40x_core_inst.register_file_wrapper_i.rst_n ;
  wire [4:0] \cv32e40x_core_inst.register_file_wrapper_i.waddr_i ;
  wire [31:0] \cv32e40x_core_inst.register_file_wrapper_i.wdata_i ;
  wire \cv32e40x_core_inst.register_file_wrapper_i.we_i ;
  wire [9:0] \cv32e40x_core_inst.rf_raddr_id ;
  wire [63:0] \cv32e40x_core_inst.rf_rdata_id ;
  wire [1:0] \cv32e40x_core_inst.rf_re_id ;
  wire [4:0] \cv32e40x_core_inst.rf_waddr ;
  wire [4:0] \cv32e40x_core_inst.rf_waddr_wb ;
  wire [31:0] \cv32e40x_core_inst.rf_wdata ;
  wire [31:0] \cv32e40x_core_inst.rf_wdata_ex ;
  wire [31:0] \cv32e40x_core_inst.rf_wdata_wb ;
  wire \cv32e40x_core_inst.rf_we ;
  wire \cv32e40x_core_inst.rf_we_wb ;
  wire \cv32e40x_core_inst.rst_ni ;
  wire \cv32e40x_core_inst.scan_cg_en_i ;
  wire \cv32e40x_core_inst.sleep_unit_i.clk_gated_o ;
  wire \cv32e40x_core_inst.sleep_unit_i.clk_ungated_i ;
  wire \cv32e40x_core_inst.sleep_unit_i.clock_en ;
  wire \cv32e40x_core_inst.sleep_unit_i.core_busy_d ;
  reg \cv32e40x_core_inst.sleep_unit_i.core_busy_q ;
  wire \cv32e40x_core_inst.sleep_unit_i.core_clock_gate_i.clk_i ;
  wire \cv32e40x_core_inst.sleep_unit_i.core_clock_gate_i.clk_o ;
  wire \cv32e40x_core_inst.sleep_unit_i.core_clock_gate_i.en_i ;
  wire \cv32e40x_core_inst.sleep_unit_i.core_clock_gate_i.scan_cg_en_i ;
  wire \cv32e40x_core_inst.sleep_unit_i.core_sleep_o ;
  wire [201:0] \cv32e40x_core_inst.sleep_unit_i.ctrl_fsm_i ;
  wire \cv32e40x_core_inst.sleep_unit_i.fetch_enable_i ;
  wire \cv32e40x_core_inst.sleep_unit_i.fetch_enable_o ;
  reg \cv32e40x_core_inst.sleep_unit_i.fetch_enable_q ;
  wire \cv32e40x_core_inst.sleep_unit_i.if_busy_i ;
  wire \cv32e40x_core_inst.sleep_unit_i.lsu_busy_i ;
  wire \cv32e40x_core_inst.sleep_unit_i.rst_n ;
  wire \cv32e40x_core_inst.sleep_unit_i.scan_cg_en_i ;
  wire \cv32e40x_core_inst.sys_en_id ;
  wire \cv32e40x_core_inst.sys_mret_insn_id ;
  wire [63:0] \cv32e40x_core_inst.time_i ;
  wire [31:0] \cv32e40x_core_inst.trigger_match_ex ;
  wire [31:0] \cv32e40x_core_inst.trigger_match_if ;
  wire \cv32e40x_core_inst.wb_ready ;
  wire [1:0] \cv32e40x_core_inst.wb_stage_i.align_status_wb_o ;
  wire [31:0] \cv32e40x_core_inst.wb_stage_i.clic_pa_i ;
  wire \cv32e40x_core_inst.wb_stage_i.clic_pa_valid_i ;
  wire \cv32e40x_core_inst.wb_stage_i.clk ;
  wire [201:0] \cv32e40x_core_inst.wb_stage_i.ctrl_fsm_i ;
  wire \cv32e40x_core_inst.wb_stage_i.data_stall_o ;
  wire [247:0] \cv32e40x_core_inst.wb_stage_i.ex_wb_pipe_i ;
  wire \cv32e40x_core_inst.wb_stage_i.instr_valid ;
  wire \cv32e40x_core_inst.wb_stage_i.last_op_o ;
  wire [1:0] \cv32e40x_core_inst.wb_stage_i.lsu_align_status ;
  wire [1:0] \cv32e40x_core_inst.wb_stage_i.lsu_align_status_i ;
  reg [1:0] \cv32e40x_core_inst.wb_stage_i.lsu_align_status_q ;
  wire \cv32e40x_core_inst.wb_stage_i.lsu_exception ;
  wire [1:0] \cv32e40x_core_inst.wb_stage_i.lsu_mpu_status ;
  wire [1:0] \cv32e40x_core_inst.wb_stage_i.lsu_mpu_status_i ;
  reg [1:0] \cv32e40x_core_inst.wb_stage_i.lsu_mpu_status_q ;
  wire [31:0] \cv32e40x_core_inst.wb_stage_i.lsu_rdata_i ;
  wire \cv32e40x_core_inst.wb_stage_i.lsu_ready_i ;
  wire \cv32e40x_core_inst.wb_stage_i.lsu_ready_o ;
  wire \cv32e40x_core_inst.wb_stage_i.lsu_valid ;
  wire \cv32e40x_core_inst.wb_stage_i.lsu_valid_i ;
  wire \cv32e40x_core_inst.wb_stage_i.lsu_valid_o ;
  reg \cv32e40x_core_inst.wb_stage_i.lsu_valid_q ;
  wire [31:0] \cv32e40x_core_inst.wb_stage_i.lsu_wpt_match ;
  wire [31:0] \cv32e40x_core_inst.wb_stage_i.lsu_wpt_match_i ;
  reg [31:0] \cv32e40x_core_inst.wb_stage_i.lsu_wpt_match_q ;
  wire [1:0] \cv32e40x_core_inst.wb_stage_i.mpu_status_wb_o ;
  wire [4:0] \cv32e40x_core_inst.wb_stage_i.rf_waddr_wb_o ;
  wire [31:0] \cv32e40x_core_inst.wb_stage_i.rf_wdata_wb_o ;
  wire \cv32e40x_core_inst.wb_stage_i.rf_we_wb_o ;
  wire \cv32e40x_core_inst.wb_stage_i.rst_n ;
  wire \cv32e40x_core_inst.wb_stage_i.wb_ready_o ;
  wire \cv32e40x_core_inst.wb_stage_i.wb_valid ;
  wire \cv32e40x_core_inst.wb_stage_i.wb_valid_o ;
  wire [31:0] \cv32e40x_core_inst.wb_stage_i.wpt_match_wb_o ;
  wire \cv32e40x_core_inst.wb_stage_i.xif_exception ;
  wire \cv32e40x_core_inst.wb_stage_i.xif_waiting ;
  wire \cv32e40x_core_inst.wb_valid ;
  wire [31:0] \cv32e40x_core_inst.wpt_match_wb ;
  wire \cv32e40x_core_inst.wu_wfe_i ;
  wire \cv32e40x_core_inst.xif_csr_error_ex ;
  wire \cv32e40x_core_inst.xif_offloading_id ;
  output [31:0] data_addr_o;
  wire [31:0] data_addr_o;
  output [3:0] data_be_o;
  wire [3:0] data_be_o;
  input data_gnt_i;
  wire data_gnt_i;
  input [31:0] data_rdata_i;
  wire [31:0] data_rdata_i;
  output data_req_o;
  wire data_req_o;
  input data_rvalid_i;
  wire data_rvalid_i;
  output [31:0] data_wdata_o;
  wire [31:0] data_wdata_o;
  output data_we_o;
  wire data_we_o;
  input debug_req_i;
  wire debug_req_i;
  wire [4:0] \ext_if.commit ;
  wire \ext_if.commit_valid ;
  wire \ext_if.compressed_ready ;
  wire [21:0] \ext_if.compressed_req ;
  wire [32:0] \ext_if.compressed_resp ;
  wire \ext_if.compressed_valid ;
  wire \ext_if.issue_ready ;
  wire [110:0] \ext_if.issue_req ;
  wire [8:0] \ext_if.issue_resp ;
  wire \ext_if.issue_valid ;
  wire \ext_if.mem_ready ;
  wire [81:0] \ext_if.mem_req ;
  wire [7:0] \ext_if.mem_resp ;
  wire [37:0] \ext_if.mem_result ;
  wire \ext_if.mem_result_valid ;
  wire \ext_if.mem_valid ;
  wire [59:0] \ext_if.result ;
  wire \ext_if.result_ready ;
  wire \ext_if.result_valid ;
  input fetch_enable_i;
  wire fetch_enable_i;
  output [31:0] instr_addr_o;
  wire [31:0] instr_addr_o;
  input instr_gnt_i;
  wire instr_gnt_i;
  input [31:0] instr_rdata_i;
  wire [31:0] instr_rdata_i;
  output instr_req_o;
  wire instr_req_o;
  input instr_rvalid_i;
  wire instr_rvalid_i;
  input issue_ready;
  wire issue_ready;
  output [5:0] issue_req_ecs;
  wire [5:0] issue_req_ecs;
  output issue_req_ecs_valid;
  wire issue_req_ecs_valid;
  output [3:0] issue_req_id;
  wire [3:0] issue_req_id;
  output [31:0] issue_req_instr;
  wire [31:0] issue_req_instr;
  output [1:0] issue_req_mode;
  wire [1:0] issue_req_mode;
  output [63:0] issue_req_rs;
  wire [63:0] issue_req_rs;
  output [1:0] issue_req_rs_valid;
  wire [1:0] issue_req_rs_valid;
  input issue_resp_accept;
  wire issue_resp_accept;
  input [2:0] issue_resp_dualread;
  wire [2:0] issue_resp_dualread;
  input issue_resp_dualwrite;
  wire issue_resp_dualwrite;
  input issue_resp_ecswrite;
  wire issue_resp_ecswrite;
  input issue_resp_exc;
  wire issue_resp_exc;
  input issue_resp_loadstore;
  wire issue_resp_loadstore;
  input issue_resp_writeback;
  wire issue_resp_writeback;
  output issue_valid;
  wire issue_valid;
  output [63:0] mcycle_o;
  wire [63:0] mcycle_o;
  input mem_ready;
  wire mem_ready;
  input [31:0] mem_req_addr;
  wire [31:0] mem_req_addr;
  input [1:0] mem_req_attr;
  wire [1:0] mem_req_attr;
  input [3:0] mem_req_be;
  wire [3:0] mem_req_be;
  input [3:0] mem_req_id;
  wire [3:0] mem_req_id;
  input mem_req_last;
  wire mem_req_last;
  input [1:0] mem_req_mode;
  wire [1:0] mem_req_mode;
  input [2:0] mem_req_size;
  wire [2:0] mem_req_size;
  input mem_req_spec;
  wire mem_req_spec;
  input [31:0] mem_req_wdata;
  wire [31:0] mem_req_wdata;
  input mem_req_we;
  wire mem_req_we;
  output mem_resp_dbg;
  wire mem_resp_dbg;
  output mem_resp_exc;
  wire mem_resp_exc;
  output [5:0] mem_resp_exccode;
  wire [5:0] mem_resp_exccode;
  output mem_result_dbg;
  wire mem_result_dbg;
  output mem_result_err;
  wire mem_result_err;
  output [3:0] mem_result_id;
  wire [3:0] mem_result_id;
  output [31:0] mem_result_rdata;
  wire [31:0] mem_result_rdata;
  output mem_result_valid;
  wire mem_result_valid;
  output mem_valid;
  wire mem_valid;
  input [31:0] result_data;
  wire [31:0] result_data;
  input result_dbg;
  wire result_dbg;
  input [5:0] result_ecsdata;
  wire [5:0] result_ecsdata;
  input [2:0] result_ecswe;
  wire [2:0] result_ecswe;
  input result_err;
  wire result_err;
  input result_exc;
  wire result_exc;
  input [5:0] result_exccode;
  wire [5:0] result_exccode;
  input [3:0] result_id;
  wire [3:0] result_id;
  input [4:0] result_rd;
  wire [4:0] result_rd;
  output result_ready;
  wire result_ready;
  input result_valid;
  wire result_valid;
  input result_we;
  wire result_we;
  input rst_ni;
  wire rst_ni;
  wire [31:0] \sv2v_cast_32$func$preprocessed.v:11825$183.inp ;
  reg [11:0] \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4719  [15:0];
  initial begin
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4719 [0] = 12'h000;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4719 [1] = 12'h000;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4719 [2] = 12'h000;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4719 [3] = 12'h000;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4719 [4] = 12'h010;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4719 [5] = 12'h010;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4719 [6] = 12'h010;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4719 [7] = 12'h010;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4719 [8] = 12'h020;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4719 [9] = 12'h020;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4719 [10] = 12'h020;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4719 [11] = 12'h020;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4719 [12] = 12'h030;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4719 [13] = 12'h030;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4719 [14] = 12'h030;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4719 [15] = 12'h040;
  end
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_get_stack_adj_base$func$preprocessed.v:9548$2276.$result  = \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4719 [\cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [10:7]];
  reg [3:0] \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4723  [15:0];
  initial begin
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4723 [0] = 4'h0;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4723 [1] = 4'h0;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4723 [2] = 4'h0;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4723 [3] = 4'h0;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4723 [4] = 4'h0;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4723 [5] = 4'h1;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4723 [6] = 4'h2;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4723 [7] = 4'h3;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4723 [8] = 4'h4;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4723 [9] = 4'h5;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4723 [10] = 4'h6;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4723 [11] = 4'h7;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4723 [12] = 4'h8;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4723 [13] = 4'h9;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4723 [14] = 4'ha;
    \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4723 [15] = 4'hc;
  end
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_pushpop_reg_length$func$preprocessed.v:9522$2275.$result  = \$flatten\cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.$auto$proc_rom.cc:155:do_switch$4723 [\cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [10:7]];
  assign _0128_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312] + \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [311:280];
  assign _0129_ = { \cv32e40x_core_inst.load_store_unit_i.trans [76:47], 2'h0 } + 32'd4;
  assign _0130_ = \cv32e40x_core_inst.load_store_unit_i.cnt_q  + 1'h1;
  assign _0131_ = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [1] & _1532_;
  assign \cv32e40x_core_inst.cs_registers_i.csr_mtvec_init_i  = _0292_ & \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i ;
  reg [31:0] _1691_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1691_ <= 32'd3;
    else if (_1471_) _1691_ <= _1631_;
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [82:51] = _1691_;
  reg [1:0] _1692_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1692_ <= 2'h0;
    else if (_1471_) _1692_ <= \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [156:155];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [49:48] = _1692_;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[50] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[50]  <= 1'h0;
    else if (_1471_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[50]  <= \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [157];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [50] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[50] ;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[154] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[154]  <= 1'h0;
    else if (_0201_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[154]  <= \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [0];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [154] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[154] ;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[156] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[156]  <= 1'h0;
    else if (_0201_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[156]  <= \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [2];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [156] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[156] ;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[157] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[157]  <= 1'h0;
    else if (_0201_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[157]  <= \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [3];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [157] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[157] ;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[158] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[158]  <= 1'h0;
    else if (_0201_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[158]  <= \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [4];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [158] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[158] ;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[159] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[159]  <= 1'h0;
    else if (_0201_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[159]  <= \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [5];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [159] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[159] ;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[160] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[160]  <= 1'h0;
    else if (_0201_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[160]  <= \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [6];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [160] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[160] ;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[161] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[161]  <= 1'h0;
    else if (_0201_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[161]  <= \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [7];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [161] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[161] ;
  reg [5:0] _1701_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1701_ <= 6'h00;
    else if (_0202_) _1701_ <= \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_a_ctrl [15:10];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168:163] = _1701_;
  reg [1:0] _1702_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1702_ <= 2'h0;
    else if (_0202_) _1702_ <= \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [18:17];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [171:170] = _1702_;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[172] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[172]  <= 1'h0;
    else if (_0202_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[172]  <= \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [19];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[172] ;
  reg [5:0] _1704_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1704_ <= 6'h13;
    else if (_0203_) _1704_ <= \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [50:45];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] = _1704_;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[351] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[351]  <= 1'h0;
    else if (_0203_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[351]  <= \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [53];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [351] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[351] ;
  reg [31:0] _1706_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1706_ <= 32'd0;
    else if (_0204_) _1706_ <= \cv32e40x_core_inst.id_stage_i.operand_c ;
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [279:248] = _1706_;
  reg [31:0] _1707_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1707_ <= 32'd0;
    else if (_0205_) _1707_ <= \cv32e40x_core_inst.id_stage_i.operand_a ;
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312] = _1707_;
  reg [31:0] _1708_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1708_ <= 32'd0;
    else if (_0206_) _1708_ <= \cv32e40x_core_inst.id_stage_i.operand_b ;
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [311:280] = _1708_;
  reg [4:0] _1709_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1709_ <= 5'h00;
    else if (_1471_) _1709_ <= \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [154:150];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [47:43] = _1709_;
  reg [31:0] _1710_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1710_ <= 32'd0;
    else if (_1471_) _1710_ <= \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [149:118];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [114:83] = _1710_;
  reg [4:0] _1711_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1711_ <= 5'h00;
    else if (_0207_) _1711_ <= \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [169:165];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [119:115] = _1711_;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[120] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[120]  <= 1'h0;
    else if (_1471_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[120]  <= \cv32e40x_core_inst.id_stage_i.decoder_i.rf_we_o ;
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [120] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[120] ;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[153] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[153]  <= 1'h0;
    else if (_1471_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[153]  <= \cv32e40x_core_inst.id_stage_i.decoder_i.illegal_insn_o ;
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [153] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[153] ;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[169] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[169]  <= 1'h0;
    else if (_0202_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[169]  <= \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [16];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [169] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[169] ;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[162] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[162]  <= 1'h0;
    else if (_1471_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[162]  <= \cv32e40x_core_inst.controller_i.controller_fsm_i.sys_en_id_i ;
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [162] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[162] ;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[173] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[173]  <= 1'h0;
    else if (_1471_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[173]  <= \cv32e40x_core_inst.id_stage_i.lsu_en ;
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [173] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[173] ;
  reg [1:0] _1717_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1717_ <= 2'h0;
    else if (_0208_) _1717_ <= \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [22:21];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [175:174] = _1717_;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[176] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[176]  <= 1'h0;
    else if (_1471_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[176]  <= \cv32e40x_core_inst.id_stage_i.csr_en ;
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [176] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[176] ;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[350] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[350]  <= 1'h0;
    else if (_0203_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[350]  <= \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [52];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [350] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[350] ;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[352] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[352]  <= 1'h0;
    else if (_1471_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[352]  <= \cv32e40x_core_inst.controller_i.controller_fsm_i.alu_en_id_i ;
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [352] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[352] ;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[1] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[1]  <= 1'h0;
    else if (_1471_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[1]  <= \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [1];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [1] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[1] ;
  reg [1:0] _1722_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1722_ <= 2'h3;
    else if (_1471_) _1722_ <= \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [100:99];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [41:40] = _1722_;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[155] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[155]  <= 1'h0;
    else if (_0201_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[155]  <= \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [1];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [155] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[155] ;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[42] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[42]  <= 1'h0;
    else if (_0138_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[42]  <= _0004_[42];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [42] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[42] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.load_store_unit_i.split_q  <= 1'h0;
    else if (_0139_) \cv32e40x_core_inst.load_store_unit_i.split_q  <= _0006_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.load_store_unit_i.rdata_q  <= 32'd0;
    else if (_1478_) \cv32e40x_core_inst.load_store_unit_i.rdata_q  <= _1624_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[26]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [26]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[26]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.wb_stage_i.lsu_valid_q  <= 1'h0;
    else if (_0140_) \cv32e40x_core_inst.wb_stage_i.lsu_valid_q  <= _0009_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.load_store_unit_i.lsu_sext_q  <= 1'h0;
    else if (\cv32e40x_core_inst.load_store_unit_i.ctrl_update ) \cv32e40x_core_inst.load_store_unit_i.lsu_sext_q  <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [169];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.load_store_unit_i.lsu_size_q  <= 2'h0;
    else if (\cv32e40x_core_inst.load_store_unit_i.ctrl_update ) \cv32e40x_core_inst.load_store_unit_i.lsu_size_q  <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [171:170];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.load_store_unit_i.a_ext.lsu_atomic_q  <= 2'h0;
    else if (\cv32e40x_core_inst.load_store_unit_i.ctrl_update ) \cv32e40x_core_inst.load_store_unit_i.a_ext.lsu_atomic_q  <= \cv32e40x_core_inst.controller_i.bypass_i.lsu_atomic_ex_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[27]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [27]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[27]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.wb_stage_i.lsu_align_status_q  <= 2'h0;
    else if (_0140_) \cv32e40x_core_inst.wb_stage_i.lsu_align_status_q  <= _0007_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.wb_stage_i.lsu_wpt_match_q  <= 32'd0;
    else if (_0140_) \cv32e40x_core_inst.wb_stage_i.lsu_wpt_match_q  <= _0010_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_taken_q  <= 1'h0;
    else if (_0209_) \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_taken_q  <= \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_taken_n ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.wb_stage_i.lsu_mpu_status_q  <= 2'h0;
    else if (_0140_) \cv32e40x_core_inst.wb_stage_i.lsu_mpu_status_q  <= _0008_;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[19] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[19]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[19]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [19];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [19] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[19] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.controller_i.controller_fsm_i.fence_req_q  <= 1'h0;
    else if (_0151_) \cv32e40x_core_inst.controller_i.controller_fsm_i.fence_req_q  <= _0001_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event  <= 1'h0;
    else if (_0152_) \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event  <= _0003_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[28]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [28]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[28]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[14]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [14]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[14]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[18]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [18]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[18]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[13]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [13]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[13]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  reg [15:0] _1744_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1744_ <= 16'h0000;
    else if (_0210_) _1744_ <= \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [18:3];
  assign \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [117:102] = _1744_;
  reg [31:0] _1745_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1745_ <= 32'd0;
    else if (_0211_) _1745_ <= \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q ;
  assign \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [149:118] = _1745_;
  reg [31:0] _1746_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1746_ <= 32'd3;
    else if (_0212_) _1746_ <= _1668_[34:3];
  assign \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:158] = _1746_;
  reg [1:0] _1747_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1747_ <= 2'h0;
    else if (_1469_) _1747_ <= _1647_;
  assign \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [156:155] = _1747_;
  reg \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[157] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[157]  <= 1'h0;
    else if (_1469_) \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[157]  <= _1648_;
  assign \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [157] = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[157] ;
  reg \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[2] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[2]  <= 1'h0;
    else if (_1469_) \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[2]  <= \cv32e40x_core_inst.if_stage_i.first_op ;
  assign \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [2] = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[2] ;
  reg \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[1] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[1]  <= 1'h0;
    else if (_1469_) \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[1]  <= \cv32e40x_core_inst.controller_i.controller_fsm_i.last_op_if_i ;
  assign \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [1] = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[1] ;
  reg \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[0] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[0]  <= 1'h0;
    else if (_1469_) \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[0]  <= \cv32e40x_core_inst.abort_op_if ;
  assign \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [0] = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[0] ;
  reg [1:0] _1752_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1752_ <= 2'h3;
    else if (_1469_) _1752_ <= \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i ;
  assign \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [100:99] = _1752_;
  reg \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[101] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[101]  <= 1'h0;
    else if (_1469_) \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[101]  <= _1667_;
  assign \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [101] = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[101] ;
  reg [1:0] _1754_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1754_ <= 2'h0;
    else if (_1469_) _1754_ <= { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_clic_ptr_q , \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_mret_ptr_q  };
  assign \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [153:152] = _1754_;
  reg [31:0] _1755_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1755_ <= 32'd0;
    else if (_0213_) _1755_ <= \cv32e40x_core_inst.if_stage_i.instr_decompressed [34:3];
  assign \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [34:3] = _1755_;
  reg \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[190] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[190]  <= 1'h0;
    else if (_0153_) \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[190]  <= _0005_[190];
  assign \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [190] = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[190] ;
  reg \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[151] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[151]  <= 1'h0;
    else if (_0214_) \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[151]  <= _1649_;
  assign \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [151] = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[151] ;
  reg \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[150] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[150]  <= 1'h0;
    else if (_0214_) \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[150]  <= _1650_;
  assign \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [150] = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[150] ;
  reg \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[154] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[154]  <= 1'h0;
    else if (_0214_) \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[154]  <= _1651_;
  assign \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [154] = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[154] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[29]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [29]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[29]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[30]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [30]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[30]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[11]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [11]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[11]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[18] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[18]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[18]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [18];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [18] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[18] ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[17] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[17]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[17]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [17];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [17] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[17] ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[16] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[16]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[16]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [16];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [16] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[16] ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[15] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[15]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[15]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [15];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [15] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[15] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[31]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [31]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[31]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.load_store_unit_i.rdata_offset_q  <= 2'h0;
    else if (\cv32e40x_core_inst.load_store_unit_i.ctrl_update ) \cv32e40x_core_inst.load_store_unit_i.rdata_offset_q  <= \cv32e40x_core_inst.load_store_unit_i.trans [46:45];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.load_store_unit_i.lsu_we_q  <= 1'h0;
    else if (\cv32e40x_core_inst.load_store_unit_i.ctrl_update ) \cv32e40x_core_inst.load_store_unit_i.lsu_we_q  <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172];
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[14] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[14]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[14]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [14];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [14] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[14] ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[13] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[13]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[13]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [13];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [13] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[13] ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[12] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[12]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[12]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [12];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [12] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[12] ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[11] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[11]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[11]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [11];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [11] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[11] ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[10] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[10]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[10]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [10];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [10] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[10] ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[9] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[9]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[9]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [9];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [9] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[9] ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[8] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[8]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[8]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [8];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [8] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[8] ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[7] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[7]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[7]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [7];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [7] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[7] ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[6] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[6]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[6]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [6];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [6] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[6] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[24]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [24]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[24]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[21]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [21]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[21]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[31] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[31]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[31]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [31];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [31] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[31] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.trans_q  <= 81'h000000000040000000000;
    else if (\cv32e40x_core_inst.load_store_unit_i.write_buffer_i.push ) \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.trans_q  <= { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i , \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168:163], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i , \cv32e40x_core_inst.load_store_unit_i.wdata , \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cfg [1], \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.bufferable , 3'h7, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  };
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[30] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[30]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[30]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [30];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [30] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[30] ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[29] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[29]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[29]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [29];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [29] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[29] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[12]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [12]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[12]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[20]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [20]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[20]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[28] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[28]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[28]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [28];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [28] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[28] ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[27] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[27]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[27]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [27];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [27] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[27] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[1]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [1]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[1]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[26] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[26]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[26]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [26];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [26] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[26] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[2]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [2]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[2]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[25] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[25]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[25]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [25];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [25] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[25] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[31] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[31]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mie_we ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[31]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [31];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [31] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[31] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[30] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[30]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mie_we ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[30]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [30];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [30] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[30] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[29] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[29]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mie_we ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[29]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [29];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [29] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[29] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[28] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[28]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mie_we ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[28]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [28];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [28] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[28] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[27] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[27]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mie_we ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[27]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [27];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [27] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[27] ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[24] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[24]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[24]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [24];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [24] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[24] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[26] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[26]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mie_we ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[26]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [26];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [26] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[26] ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[23] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[23]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[23]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [23];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [23] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[23] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[3]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [3]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[3]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[25] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[25]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mie_we ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[25]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [25];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [25] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[25] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[24] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[24]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mie_we ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[24]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [24];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [24] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[24] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[23] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[23]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mie_we ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[23]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [23];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [23] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[23] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[22] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[22]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mie_we ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[22]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [22];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [22] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[22] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[21] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[21]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mie_we ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[21]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [21];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [21] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[21] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[20] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[20]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mie_we ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[20]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [20];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [20] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[20] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[19] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[19]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mie_we ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[19]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [19];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [19] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[19] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[18] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[18]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mie_we ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[18]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [18];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [18] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[18] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[17] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[17]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mie_we ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[17]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [17];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [17] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[17] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[4]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [4]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[4]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[16] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[16]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mie_we ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[16]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [16];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [16] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[16] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[11] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[11]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mie_we ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[11]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [11];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [11] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[11] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[7] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[7]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mie_we ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[7]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [7];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [7] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[7] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[3] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[3]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mie_we ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[3]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [3];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [3] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q_reg[3] ;
  reg [15:0] _1816_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1816_ <= 16'h0000;
    else if (\cv32e40x_core_inst.cs_registers_i.mhpmevent_we ) _1816_ <= _0518_[111:96];
  assign \cv32e40x_core_inst.cs_registers_i.mhpmevent_q [111:96] = _1816_;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[22] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[22]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[22]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [22];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [22] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[22] ;
  reg \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[15] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[15]  <= 1'h0;
    else if (!\cv32e40x_core_inst.cs_registers_i.all_counters_disabled ) \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[15]  <= \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i ;
  assign \cv32e40x_core_inst.cs_registers_i.hpm_events [15] = \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[15] ;
  reg \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[14] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[14]  <= 1'h0;
    else if (!\cv32e40x_core_inst.cs_registers_i.all_counters_disabled ) \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[14]  <= \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_557D1 ;
  assign \cv32e40x_core_inst.cs_registers_i.hpm_events [14] = \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[14] ;
  reg \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[13] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[13]  <= 1'h0;
    else if (!\cv32e40x_core_inst.cs_registers_i.all_counters_disabled ) \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[13]  <= \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_D8609 ;
  assign \cv32e40x_core_inst.cs_registers_i.hpm_events [13] = \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[13] ;
  reg \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[12] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[12]  <= 1'h0;
    else if (!\cv32e40x_core_inst.cs_registers_i.all_counters_disabled ) \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[12]  <= \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_90BD1 ;
  assign \cv32e40x_core_inst.cs_registers_i.hpm_events [12] = \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[12] ;
  reg \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[11] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[11]  <= 1'h0;
    else if (!\cv32e40x_core_inst.cs_registers_i.all_counters_disabled ) \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[11]  <= \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_ECB01 ;
  assign \cv32e40x_core_inst.cs_registers_i.hpm_events [11] = \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[11] ;
  reg \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[10] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[10]  <= 1'h0;
    else if (!\cv32e40x_core_inst.cs_registers_i.all_counters_disabled ) \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[10]  <= \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_AEAA2 ;
  assign \cv32e40x_core_inst.cs_registers_i.hpm_events [10] = \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[10] ;
  reg \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[9] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[9]  <= 1'h0;
    else if (!\cv32e40x_core_inst.cs_registers_i.all_counters_disabled ) \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[9]  <= \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_E0ABD ;
  assign \cv32e40x_core_inst.cs_registers_i.hpm_events [9] = \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[9] ;
  reg \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[8] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[8]  <= 1'h0;
    else if (!\cv32e40x_core_inst.cs_registers_i.all_counters_disabled ) \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[8]  <= \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_A1D3F ;
  assign \cv32e40x_core_inst.cs_registers_i.hpm_events [8] = \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[8] ;
  reg \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[7] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[7]  <= 1'h0;
    else if (!\cv32e40x_core_inst.cs_registers_i.all_counters_disabled ) \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[7]  <= \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C215 ;
  assign \cv32e40x_core_inst.cs_registers_i.hpm_events [7] = \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[7] ;
  reg \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[6] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[6]  <= 1'h0;
    else if (!\cv32e40x_core_inst.cs_registers_i.all_counters_disabled ) \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[6]  <= \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [10];
  assign \cv32e40x_core_inst.cs_registers_i.hpm_events [6] = \cv32e40x_core_inst.cs_registers_i.hpm_events_reg[6] ;
  reg [2:0] _1828_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1828_ <= 3'h7;
    else _1828_ <= { \cv32e40x_core_inst.cs_registers_i.mcountinhibit_n [3:2], \cv32e40x_core_inst.cs_registers_i.mcountinhibit_n [0] };
  assign { \cv32e40x_core_inst.cs_registers_i.mcountinhibit_q [3:2], \cv32e40x_core_inst.cs_registers_i.mcountinhibit_q [0] } = _1828_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[5]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [5]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[5]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[6]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [6]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[6]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[21] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[21]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[21]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [21];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [21] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[21] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[19]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [19]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[19]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[31] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[31]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[31]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [31];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [31] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[31] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[30] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[30]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[30]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [30];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [30] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[30] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[29] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[29]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[29]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [29];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [29] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[29] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[28] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[28]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[28]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [28];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [28] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[28] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[27] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[27]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[27]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [27];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [27] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[27] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[26] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[26]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[26]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [26];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [26] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[26] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[25] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[25]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[25]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [25];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [25] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[25] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[24] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[24]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[24]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [24];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [24] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[24] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[23] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[23]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[23]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [23];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [23] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[23] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[22] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[22]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[22]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [22];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [22] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[22] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[21] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[21]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[21]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [21];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [21] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[21] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[20] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[20]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[20]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [20];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [20] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[20] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[19] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[19]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[19]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [19];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [19] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[19] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[18] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[18]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[18]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [18];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [18] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[18] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[17] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[17]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[17]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [17];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [17] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[17] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[16] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[16]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[16]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [16];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [16] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[16] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[15] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[15]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[15]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [15];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [15] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[15] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[14] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[14]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[14]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [14];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [14] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[14] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[13] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[13]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[13]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [13];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [13] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[13] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[12] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[12]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[12]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [12];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [12] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[12] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[11] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[11]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[11]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [11];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [11] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[11] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[10] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[10]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[10]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [10];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [10] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[10] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[9] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[9]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[9]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [9];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [9] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[9] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[8] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[8]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[8]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [8];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [8] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[8] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[7] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[7]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[7]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [7];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [7] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[7] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[7]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [7]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[7]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[8]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [8]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[8]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  reg \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[20] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[20]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[20]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [20];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [20] = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q_reg[20] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[31] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[31]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[31]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_data_i [31];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [31] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[31] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[10] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[10]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[10]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_data_i [10];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [10] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[10] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[9] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[9]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[9]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_data_i [9];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [9] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[9] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[8] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[8]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[8]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_data_i [8];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [8] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[8] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[7] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[7]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[7]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_data_i [7];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [7] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[7] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[6] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[6]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[6]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_data_i [6];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [6] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[6] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[5] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[5]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[5]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_data_i [5];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [5] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[5] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[4] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[4]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[4]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_data_i [4];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [4] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[4] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[3] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[3]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[3]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_data_i [3];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [3] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[3] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [22] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata1_we_int ) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [22] <= \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.wr_data_i [22];
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[2] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[2]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[2]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_data_i [2];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [2] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[2] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [25] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata1_we_int ) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [25] <= \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.wr_data_i [25];
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[1] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[1]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[1]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_data_i [1];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [1] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[1] ;
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[0] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[0]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[0]  <= \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_data_i [0];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [0] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q_reg[0] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[9]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [9]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[9]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  reg \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[52] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[52]  <= 1'h0;
    else if (_0730_) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[52]  <= _0744_;
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [52] = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[52] ;
  reg [1:0] _1877_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1877_ <= 2'h3;
    else if (_0730_) _1877_ <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [41:40];
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [51:50] = _1877_;
  reg [34:0] _1878_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1878_ <= 35'h000000018;
    else if (_0730_) _1878_ <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [82:48];
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [93:59] = _1878_;
  reg \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[2] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[2]  <= 1'h0;
    else if (_0730_) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[2]  <= \cv32e40x_core_inst.controller_i.controller_fsm_i.last_op_ex_i ;
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [2] = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[2] ;
  reg \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[0] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[0]  <= 1'h0;
    else if (_0215_) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[0]  <= \cv32e40x_core_inst.controller_i.bypass_i.csr_hz_i [26];
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [0] = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[0] ;
  reg \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[247] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[247]  <= 1'h0;
    else if (_0730_) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[247]  <= _0754_;
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [247] = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[247] ;
  reg \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[206] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[206]  <= 1'h0;
    else if (_0730_) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[206]  <= _0755_;
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [206] = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[206] ;
  reg \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[158] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[158]  <= 1'h0;
    else if (_0730_) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[158]  <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [173];
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [158] = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[158] ;
  reg [31:0] _1884_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1884_ <= 32'd0;
    else if (_0215_) _1884_ <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312];
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [191:160] = _1884_;
  reg \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[209] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[209]  <= 1'h0;
    else if (_0730_) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[209]  <= _0731_;
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [209] = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[209] ;
  reg \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[208] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[208]  <= 1'h0;
    else if (_0730_) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[208]  <= _0732_;
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [208] = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[208] ;
  reg \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[207] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[207]  <= 1'h0;
    else if (_0730_) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[207]  <= _0733_;
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [207] = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[207] ;
  reg [4:0] _1888_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1888_ <= 5'h00;
    else if (_0216_) _1888_ <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [119:115];
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] = _1888_;
  reg [31:0] _1889_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1889_ <= 32'd0;
    else if (_0730_) _1889_ <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [114:83];
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [125:94] = _1889_;
  reg [4:0] _1890_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1890_ <= 5'h00;
    else if (_0730_) _1890_ <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [47:43];
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [58:54] = _1890_;
  reg \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[49] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[49]  <= 1'h0;
    else if (_0730_) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[49]  <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [162];
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [49] = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[49] ;
  reg [31:0] _1892_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1892_ <= 32'd0;
    else if (_0217_) _1892_ <= \cv32e40x_core_inst.ex_stage_i.rf_wdata_o ;
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [241:210] = _1892_;
  reg [1:0] _1893_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1893_ <= 2'h0;
    else if (_0215_) _1893_ <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [175:174];
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [205:204] = _1893_;
  reg [11:0] _1894_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1894_ <= 12'h000;
    else if (_0215_) _1894_ <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [291:280];
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] = _1894_;
  reg \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[48] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[48]  <= 1'h0;
    else if (_0218_) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[48]  <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [161];
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [48] = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[48] ;
  reg \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[47] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[47]  <= 1'h0;
    else if (_0218_) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[47]  <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [160];
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [47] = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[47] ;
  reg \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[46] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[46]  <= 1'h0;
    else if (_0218_) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[46]  <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [159];
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [46] = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[46] ;
  reg \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[45] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[45]  <= 1'h0;
    else if (_0218_) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[45]  <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [158];
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [45] = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[45] ;
  reg \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[44] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[44]  <= 1'h0;
    else if (_0218_) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[44]  <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [157];
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [44] = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[44] ;
  reg \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[43] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[43]  <= 1'h0;
    else if (_0218_) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[43]  <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [156];
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [43] = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[43] ;
  reg \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[41] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[41]  <= 1'h0;
    else if (_0218_) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[41]  <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [154];
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [41] = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[41] ;
  reg \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[42] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[42]  <= 1'h0;
    else if (_0218_) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[42]  <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [155];
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [42] = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[42] ;
  reg \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[53] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[53]  <= 1'h0;
    else if (_0155_) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[53]  <= _0727_[53];
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [53] = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[53] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.wpt_match_q  <= 32'd0;
    else if (_0219_) \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.wpt_match_q  <= \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.wpt_match_n ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.state_q  <= 2'h0;
    else if (_0220_) \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.state_q  <= \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.state_n ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[22]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [22]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[22]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[23]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [23]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[23]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[10]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [10]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[10]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.load_store_unit_i.mpu_i.state_q  <= 3'h0;
    else if (_0221_) \cv32e40x_core_inst.load_store_unit_i.mpu_i.state_q  <= \cv32e40x_core_inst.load_store_unit_i.mpu_i.state_n ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.sleep_unit_i.fetch_enable_q  <= 1'h0;
    else if (fetch_enable_i) \cv32e40x_core_inst.sleep_unit_i.fetch_enable_q  <= 1'h1;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[25]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [25]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[25]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.load_store_unit_i.align_check_i.state_q  <= 3'h0;
    else if (_0222_) \cv32e40x_core_inst.load_store_unit_i.align_check_i.state_q  <= \cv32e40x_core_inst.load_store_unit_i.align_check_i.state_n ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.aligned_q  <= 1'h0;
    else if (_0166_) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.aligned_q  <= \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.aligned_n ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.complete_q  <= 1'h0;
    else if (_0223_) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.complete_q  <= \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.complete_n ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.n_flush_q  <= 2'h0;
    else if (_0168_) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.n_flush_q  <= \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.n_flush_n ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_clic_ptr_q  <= 1'h0;
    else if (_0169_) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_clic_ptr_q  <= _1135_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_mret_ptr_q  <= 1'h0;
    else if (_0169_) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_mret_ptr_q  <= _1136_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_tbljmp_ptr_q  <= 1'h0;
    else if (_0169_) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_tbljmp_ptr_q  <= _1137_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ptr_fetch_accepted_q  <= 1'h0;
    else if (_0170_) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ptr_fetch_accepted_q  <= _1139_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid_q  <= 3'h0;
    else if (_0171_) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid_q  <= _1141_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.rptr  <= 2'h0;
    else if (_0224_) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.rptr  <= _1140_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.wptr  <= 2'h0;
    else if (_0166_) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.wptr  <= _1142_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q [31:2] <= 30'h00000000;
    else if (_0224_) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q [31:2] <= _1134_[31:2];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q [1:0] <= 2'h0;
    else if (_0169_) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q [1:0] <= _1134_[1:0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_q  <= 32'd0;
    else if (_1282_) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_q  <= \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_ptr_access_q  <= 1'h0;
    else if (_1282_) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_ptr_access_q  <= \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_ptr_access_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_priv_lvl_q  <= 2'h3;
    else if (_1282_) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_priv_lvl_q  <= \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[16]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [16]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[16]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[15]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [15]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[15]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[17]  <= 32'd0;
    else if (\cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [17]) \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[17]  <= \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [31] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [31] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [31];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [30] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [30] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [30];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [29] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [29] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [29];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [28] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [28] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [28];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [27] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [27] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [27];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [26] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [26] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [26];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [25] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [25] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [25];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [24] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [24] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [24];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [23] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [23] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [23];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [22] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [22] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [22];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [21] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [21] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [21];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [20] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [20] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [20];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [19] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [19] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [19];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [18] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [18] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [18];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.mpu_i.state_q  <= 3'h0;
    else if (_0225_) \cv32e40x_core_inst.if_stage_i.mpu_i.state_q  <= \cv32e40x_core_inst.if_stage_i.mpu_i.state_n ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [17] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [17] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [17];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [16] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [16] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [16];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [15] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [15] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [15];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [14] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [14] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [14];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [13] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [13] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [13];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [12] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [12] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [12];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [11] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [11] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [11];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [10] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [10] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [10];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [9] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [9] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [9];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [8] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [8] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [8];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [7] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [7] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [7];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [6] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [6] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [6];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [5] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [5] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [5];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [4] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [4] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [4];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [3] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [3] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [3];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [2] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [2] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [2];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [1] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [1] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [0] <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q [0] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [0];
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[31] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[31]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[31]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [31];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [31] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[31] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[30] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[30]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[30]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [30];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [30] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[30] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[29] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[29]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[29]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [29];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [29] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[29] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[28] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[28]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[28]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [28];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [28] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[28] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[27] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[27]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[27]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [27];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [27] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[27] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[26] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[26]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[26]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [26];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [26] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[26] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[25] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[25]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[25]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [25];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [25] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[25] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[24] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[24]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[24]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [24];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [24] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[24] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[23] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[23]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[23]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [23];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [23] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[23] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[22] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[22]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[22]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [22];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [22] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[22] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[21] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[21]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[21]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [21];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [21] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[21] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[20] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[20]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[20]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [20];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [20] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[20] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[19] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[19]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[19]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [19];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [19] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[19] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[18] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[18]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[18]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [18];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [18] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[18] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[17] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[17]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[17]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [17];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [17] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[17] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[16] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[16]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[16]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [16];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [16] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[16] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[15] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[15]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[15]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [15];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [15] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[15] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[14] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[14]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[14]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [14];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [14] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[14] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[13] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[13]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[13]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [13];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [13] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[13] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[12] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[12]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[12]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [12];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [12] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[12] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[11] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[11]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[11]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [11];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [11] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[11] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[10] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[10]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[10]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [10];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [10] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[10] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[9] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[9]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[9]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [9];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [9] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[9] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[8] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[8]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[8]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [8];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [8] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[8] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[7] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[7]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[7]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [7];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [7] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[7] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[6] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[6]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[6]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [6];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [6] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[6] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[5] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[5]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[5]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [5];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [5] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[5] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[4] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[4]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[4]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [4];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [4] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[4] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[3] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[3]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[3]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [3];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [3] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[3] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[2] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[2]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[2]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [2];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [2] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[2] ;
  reg \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[1] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[1]  <= 1'h0;
    else if (\cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ) \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[1]  <= \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i [1];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [1] = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q_reg[1] ;
  reg [1:0] _1995_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1995_ <= 2'h0;
    else if (\cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_count_up ) _1995_ <= \cv32e40x_core_inst.load_store_unit_i.response_filter_i.outstanding_q [3:2];
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.outstanding_q [5:4] = _1995_;
  reg [1:0] _1996_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1996_ <= 2'h0;
    else if (\cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_count_up ) _1996_ <= { \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.bufferable , \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172] };
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.outstanding_q [3:2] = _1996_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr_cnt_q  <= 4'h0;
    else if (_0226_) \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr_cnt_q  <= _0975_;
  reg [29:0] _1998_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _1998_ <= 30'h00000000;
    else if (_1465_) _1998_ <= \cv32e40x_core_inst.m_c_obi_instr_if.req_payload [37:8];
  assign \cv32e40x_core_inst.if_stage_i.instruction_obi_i.obi_a_req_q [37:8] = _1998_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_cs  <= 2'h0;
    else if (_0228_) \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_cs  <= \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_ns ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.controller_i.controller_fsm_i.single_step_halt_if_q  <= 1'h0;
    else if (_0229_) \cv32e40x_core_inst.controller_i.controller_fsm_i.single_step_halt_if_q  <= \cv32e40x_core_inst.controller_i.controller_fsm_i.single_step_halt_if_n ;
  reg [31:0] _2001_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _2001_ <= 32'd0;
    else if (_0230_) _2001_ <= _0383_[63:32];
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_q [63:32] = _2001_;
  reg [31:0] _2002_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _2002_ <= 32'd0;
    else if (_0231_) _2002_ <= \cv32e40x_core_inst.cs_registers_i.mhpmcounter_n [31:0];
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_q [31:0] = _2002_;
  reg [31:0] _2003_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _2003_ <= 32'd0;
    else if (_0232_) _2003_ <= _0381_[63:32];
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_q [191:160] = _2003_;
  reg [31:0] _2004_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _2004_ <= 32'd0;
    else if (_0233_) _2004_ <= \cv32e40x_core_inst.cs_registers_i.mhpmcounter_n [159:128];
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_q [159:128] = _2004_;
  reg [31:0] _2005_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _2005_ <= 32'd0;
    else if (_0234_) _2005_ <= _0382_[63:32];
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_q [255:224] = _2005_;
  reg [31:0] _2006_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _2006_ <= 32'd0;
    else if (_0235_) _2006_ <= \cv32e40x_core_inst.cs_registers_i.mhpmcounter_n [223:192];
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_q [223:192] = _2006_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_state_q  <= 4'h0;
    else if (_0236_) \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_state_q  <= _0976_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_q  <= 105'h000000000000000000000000018;
    else if (_0237_) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_q  <= _1242_;
  reg \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q_reg[3] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q_reg[3]  <= 1'h0;
    else if (_0238_) \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q_reg[3]  <= \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.wr_data_i [3];
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [3] = \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q_reg[3] ;
  reg \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q_reg[7] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q_reg[7]  <= 1'h0;
    else if (_0238_) \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q_reg[7]  <= \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.wr_data_i [7];
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [7] = \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q_reg[7] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [31] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [31] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [31];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [30] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [30] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [30];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [29] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [29] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [29];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [28] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [28] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [28];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [27] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [27] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [27];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [26] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [26] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [26];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [25] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [25] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [25];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [24] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [24] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [24];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [23] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [23] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [23];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [22] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [22] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [22];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [21] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [21] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [21];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [20] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [20] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [20];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [19] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [19] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [19];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [18] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [18] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [18];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [17] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [17] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [17];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [16] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [16] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [16];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [15] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [15] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [15];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [14] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [14] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [14];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [13] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [13] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [13];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [12] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [12] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [12];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [11] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [11] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [11];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [10] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [10] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [10];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [9] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [9] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [9];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [8] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [8] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [8];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [7] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [7] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [7];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [6] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [6] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [6];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [5] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [5] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [5];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [4] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [4] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [4];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [3] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [3] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [3];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [2] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [2] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [2];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [1] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [1] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [0] <= 1'h0;
    else if (_0239_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q [0] <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [31] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [31] <= _0585_[31];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [30] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [30] <= _0585_[30];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [29] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [29] <= _0585_[29];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [28] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [28] <= _0585_[28];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [27] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [27] <= _0585_[27];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [26] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [26] <= _0585_[26];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [25] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [25] <= _0585_[25];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [24] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [24] <= _0585_[24];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [23] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [23] <= _0585_[23];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [22] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [22] <= _0585_[22];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [21] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [21] <= _0585_[21];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [20] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [20] <= _0585_[20];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [19] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [19] <= _0585_[19];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [18] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [18] <= _0585_[18];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [17] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [17] <= _0585_[17];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [16] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [16] <= _0585_[16];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [15] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [15] <= _0585_[15];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [14] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [14] <= _0585_[14];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [13] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [13] <= _0585_[13];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [12] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [12] <= _0585_[12];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [11] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [11] <= _0585_[11];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [10] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [10] <= _0585_[10];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [9] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [9] <= _0585_[9];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [8] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [8] <= _0585_[8];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [7] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [7] <= _0585_[7];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [6] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [6] <= _0585_[6];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [5] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [5] <= _0585_[5];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [4] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [4] <= _0585_[4];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [3] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [3] <= _0585_[3];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [2] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [2] <= _0585_[2];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [1] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [1] <= _0585_[1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [0] <= 1'h0;
    else if (_0240_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [0] <= _0585_[0];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [31] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [31] <= _0583_[31];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [30] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [30] <= _0583_[30];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [29] <= 1'h1;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [29] <= _0583_[29];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [28] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [28] <= _0583_[28];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [27] <= 1'h1;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [27] <= _0583_[27];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [26] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [26] <= _0583_[26];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [24] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [24] <= _0583_[24];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [23] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [23] <= _0583_[23];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [21] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [21] <= _0583_[21];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [20] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [20] <= _0583_[20];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [19] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [19] <= _0583_[19];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [18] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [18] <= _0583_[18];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [17] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [17] <= _0583_[17];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [16] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [16] <= _0583_[16];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [15] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [15] <= _0583_[15];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [14] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [14] <= _0583_[14];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [13] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [13] <= _0583_[13];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [12] <= 1'h1;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [12] <= _0583_[12];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [11] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [11] <= _0583_[11];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [10] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [10] <= _0583_[10];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [9] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [9] <= _0583_[9];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [8] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [8] <= _0583_[8];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [7] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [7] <= _0583_[7];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [6] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [6] <= _0583_[6];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [5] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [5] <= _0583_[5];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [4] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [4] <= _0583_[4];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [3] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [3] <= _0583_[3];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [2] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [2] <= _0583_[2];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [1] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [1] <= _0583_[1];
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [0] <= 1'h0;
    else if (_0241_) \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [0] <= _0583_[0];
  reg \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[0] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[0]  <= 1'h1;
    else if (_0242_) \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[0]  <= \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [0];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [0] = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q_reg[0] ;
  reg \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[67] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[67]  <= 1'h0;
    else if (_1469_) \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[67]  <= \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.trigger_match_if ;
  assign \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [67] = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o_reg[67] ;
  reg [5:0] _2107_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) _2107_ <= 6'h06;
    else if (_0227_) _2107_ <= { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_o [1:0], \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.pma_cfg [1], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n  };
  assign { \cv32e40x_core_inst.if_stage_i.instruction_obi_i.obi_a_req_q [7:5], \cv32e40x_core_inst.if_stage_i.instruction_obi_i.obi_a_req_q [3:2], \cv32e40x_core_inst.if_stage_i.instruction_obi_i.obi_a_req_q [0] } = _2107_;
  reg \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[121] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[121]  <= 1'h0;
    else if (_1471_) \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[121]  <= \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [67];
  assign \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [121] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o_reg[121] ;
  reg \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[126] ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[126]  <= 1'h0;
    else if (_0730_) \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[126]  <= \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [121];
  assign \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [126] = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o_reg[126] ;
  assign _0132_[0] = | { _1605_, _1603_, _0308_, _0133_, _0134_ };
  assign _0132_[1] = | { _0136_, _0137_ };
  assign _1595_ = | \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_cause_q ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_cause_q  <= 3'h1;
    else \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_cause_q  <= _0132_;
  assign _0133_ = { _1604_, _1514_, _1504_, \cv32e40x_core_inst.controller_i.controller_fsm_i.etrigger_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.trigger_match_in_wb  } == 5'h18;
  assign _0134_ = { _1604_, _1514_, \cv32e40x_core_inst.controller_i.controller_fsm_i.etrigger_in_wb  } == 3'h4;
  assign _0136_ = { _1604_, _1514_, \cv32e40x_core_inst.controller_i.controller_fsm_i.etrigger_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.trigger_match_in_wb  } == 4'hd;
  assign _0137_ = { _1604_, \cv32e40x_core_inst.controller_i.controller_fsm_i.etrigger_in_wb  } == 2'h3;
  assign _0132_[2] = { _1604_, _1514_, _1504_, \cv32e40x_core_inst.controller_i.controller_fsm_i.etrigger_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.trigger_match_in_wb  } == 5'h1c;
  assign _0138_ = | { \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_ready_i , _1471_ };
  assign _0139_ = { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_valid_ex_i , \cv32e40x_core_inst.load_store_unit_i.ctrl_update  } != 2'h2;
  assign _0140_ = | { _1563_, \cv32e40x_core_inst.wb_stage_i.lsu_valid_i  };
  assign _0141_ = { \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_wr_in_wb_flush_i , _1604_, _1525_, _1582_, _1581_, _1580_, _1514_, \cv32e40x_core_inst.controller_i.controller_fsm_i.dret_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_taken_ex , \cv32e40x_core_inst.controller_i.controller_fsm_i.jump_taken_id , \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_flush_ack_q  } != 12'h400;
  assign _0142_ = { _0356_, \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_wr_in_wb_flush_i , _1604_, _1525_, _1582_, _1581_, _1580_, _1514_, \cv32e40x_core_inst.controller_i.controller_fsm_i.dret_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_taken_ex , \cv32e40x_core_inst.controller_i.controller_fsm_i.jump_taken_id , \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_flush_ack_q  } != 13'h1500;
  assign _0143_ = { \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_wr_in_wb_flush_i , _1604_, _1525_, _1581_, _1580_, _1514_, \cv32e40x_core_inst.controller_i.controller_fsm_i.dret_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_flush_ack_q  } != 9'h081;
  assign _0144_ = { \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_wr_in_wb_flush_i , _1604_, _1525_, _1581_, _1580_, _1514_, \cv32e40x_core_inst.controller_i.controller_fsm_i.dret_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  } != 8'hc0;
  assign _0145_ = { _1604_, _1525_, _1581_, _1580_, _1514_, \cv32e40x_core_inst.controller_i.controller_fsm_i.dret_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  } != 7'h42;
  assign _0146_ = { _1604_, _1525_, _1581_, _1580_, _1514_, \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  } != 6'h28;
  assign _0147_ = { _1604_, _1525_, _1580_, _1514_, \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  } != 5'h14;
  assign _0148_ = { _1604_, _1525_, _1514_, \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  } != 4'h9;
  assign _0149_ = { _1604_, _1525_, _1514_ } != 3'h5;
  assign _0150_ = { _0135_, _1525_ } != 2'h2;
  assign _0151_ = | { \cv32e40x_core_inst.controller_i.controller_fsm_i.fence_req_set , \cv32e40x_core_inst.controller_i.controller_fsm_i.fence_req_clr  };
  assign _0152_ = | { _1528_, _1527_ };
  assign _0153_ = | { _1469_, \cv32e40x_core_inst.controller_i.controller_fsm_i.id_ready_i  };
  assign _0154_ = ~ \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_tbljmp_ptr_q ;
  assign _0155_ = | { _0730_, \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i  };
  assign _0156_ = | { _1316_, _1317_ };
  assign _0157_ = { _1312_, _1316_ } != 2'h1;
  assign _0158_ = { _1315_, \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_one_txn_pend_n  } != 2'h2;
  assign _0159_ = | { _1315_, _1316_, _1317_ };
  assign _0160_ = { _1332_, \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_one_txn_pend_n  } != 2'h2;
  assign _0161_ = | { _1332_, _1333_, _1335_ };
  assign _0162_ = { _1327_, _1333_ } != 2'h1;
  assign _0163_ = { _1298_, \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_one_txn_pend_n  } != 2'h2;
  assign _0164_ = | { _1298_, _1299_, _1301_ };
  assign _0165_ = { _1293_, _1299_ } != 2'h1;
  assign _0166_ = | { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_valid_gated , \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  };
  assign _0167_ = { _1195_, \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_valid_gated , \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.aligned_q , \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  } != 4'he;
  assign _0168_ = | { _1206_, \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  };
  assign _0169_ = | { _1138_, \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  };
  assign _0170_ = | { _1209_, \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  };
  assign _0171_ = | { _1221_, \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16] };
  assign _0172_ = { _1138_, \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.aligned_is_compressed , \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q [1], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  } != 4'hc;
  assign _0173_ = { _1128_, \cv32e40x_core_inst.if_stage_i.mpu_i.core_one_txn_pend_n  } != 2'h2;
  assign _0174_ = | { _1128_, _1129_, _1131_ };
  assign _0175_ = { _1123_, _1129_ } != 2'h1;
  assign _0176_ = | { _1069_, \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16] };
  assign _0177_ = { _1069_, _1070_, \cv32e40x_core_inst.if_stage_i.seq_last  } != 3'h4;
  assign _0178_ = { _1069_, _1090_, \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_move_s2a , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_move_a2s , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_store , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_load , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_tbljmp_o  } != 7'h60;
  assign _0179_ = { _1069_, _1090_, \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_move_a2s , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_store , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_load , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_tbljmp_o  } != 6'h31;
  assign _0180_ = ~ _0308_;
  assign _0181_ = { _1604_, _1580_, _1514_, \cv32e40x_core_inst.controller_i.controller_fsm_i.etrigger_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  } != 5'h10;
  assign _0182_ = { _1604_, _1514_, \cv32e40x_core_inst.controller_i.controller_fsm_i.etrigger_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  } != 4'h9;
  assign _0183_ = { \cv32e40x_core_inst.sleep_unit_i.fetch_enable_q , _1605_ } != 2'h1;
  assign _0184_ = { _1604_, _1581_, _1580_, _1514_, \cv32e40x_core_inst.controller_i.controller_fsm_i.dret_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  } != 6'h20;
  assign _0185_ = { _1604_, _1581_, _1580_, _1514_, \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  } != 5'h18;
  assign _0186_ = { _1604_, _1580_, _1514_, \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  } != 4'hc;
  assign _0187_ = { _1604_, _1514_, \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  } != 3'h5;
  assign _0188_ = { _1604_, _1514_ } != 2'h3;
  assign _0189_ = ~ _0258_;
  assign _0190_ = | { \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [0], \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_increment [0] };
  assign _0191_ = | { \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [0], \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [0], \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_increment [0] };
  assign _0192_ = { \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [0], \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [0] } != 2'h1;
  assign _0193_ = | { \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [2], \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_increment [2] };
  assign _0194_ = | { \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [2], \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [2], \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_increment [2] };
  assign _0195_ = { \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [2], \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [2] } != 2'h1;
  assign _0196_ = | { \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [3], \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_increment [3] };
  assign _0197_ = | { \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [3], \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [3], \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_increment [3] };
  assign _0198_ = { \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [3], \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [3] } != 2'h1;
  assign _0199_ = { _1069_, _1065_, _0281_ } != 3'h5;
  assign _0200_ = { _0521_, \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [39:38] } != 3'h2;
  assign _0284_ = ~ \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i ;
  assign _0285_ = ~ \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [173];
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.bus_trans_ready_i  = ~ \cv32e40x_core_inst.if_stage_i.instruction_obi_i.state_q ;
  assign _0286_ = ~ \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [0];
  assign _0287_ = ~ \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [2];
  assign _0288_ = ~ \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [3];
  assign _0289_ = ~ \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16];
  assign _0290_ = ~ _0458_;
  assign _0291_ = ~ \cv32e40x_core_inst.cs_registers_i.csr_mtvec_init_i ;
  assign _0201_ = & { _1471_, \cv32e40x_core_inst.controller_i.controller_fsm_i.sys_en_id_i  };
  assign _0202_ = & { _1471_, \cv32e40x_core_inst.id_stage_i.lsu_en  };
  assign _0203_ = & { _1471_, \cv32e40x_core_inst.controller_i.controller_fsm_i.alu_en_id_i  };
  assign _0204_ = & { _1589_, _1471_ };
  assign _0205_ = & { _1587_, _1471_ };
  assign _0206_ = & { _1588_, _1471_ };
  assign _0207_ = & { \cv32e40x_core_inst.id_stage_i.decoder_i.rf_we_o , _1471_ };
  assign _0208_ = & { _1471_, \cv32e40x_core_inst.id_stage_i.csr_en  };
  assign _0209_ = & { _0146_, _0143_, _0142_, _0141_, _0149_, _0150_, _0148_, _0147_, _0145_, _0144_ };
  assign _0210_ = & { _0154_, _1469_, \cv32e40x_core_inst.if_stage_i.instr_compressed  };
  assign _0211_ = & { _1652_, _0154_, _1469_ };
  assign _0212_ = & { _0284_, _1469_ };
  assign _0213_ = & { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i , _1469_ };
  assign _0214_ = & { _0154_, _1469_ };
  assign _0215_ = & { _0730_, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [176] };
  assign _0216_ = & { _0730_, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [120] };
  assign _0217_ = & { _0730_, _0285_, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [120] };
  assign _0218_ = & { _0730_, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [162] };
  assign _0219_ = & { _0157_, _0156_ };
  assign _0220_ = & { _0159_, _0158_, _0157_ };
  assign _0221_ = & { _0162_, _0161_, _0160_ };
  assign _0222_ = & { _0163_, _0165_, _0164_ };
  assign _0223_ = & { _0167_, _0166_ };
  assign _0224_ = & { _0172_, _0169_ };
  assign _0225_ = & { _0175_, _0174_, _0173_ };
  assign _0226_ = & { _0177_, _0176_ };
  assign _0227_ = & { \cv32e40x_core_inst.if_stage_i.mpu_i.bus_trans_ready_i , _1465_ };
  assign _0228_ = & { _0180_, _0181_, _0182_, _0183_ };
  assign _0229_ = & { _0186_, _0185_, _0188_, _0184_, _0189_, _0187_ };
  assign _0230_ = & { \cv32e40x_core_inst.cs_registers_i.mhpmcounter_we [1], _0190_, _0286_ };
  assign _0231_ = & { \cv32e40x_core_inst.cs_registers_i.mhpmcounter_we [0], _0191_, _0192_ };
  assign _0232_ = & { \cv32e40x_core_inst.cs_registers_i.mhpmcounter_we [5], _0193_, _0287_ };
  assign _0233_ = & { \cv32e40x_core_inst.cs_registers_i.mhpmcounter_we [4], _0195_, _0194_ };
  assign _0234_ = & { \cv32e40x_core_inst.cs_registers_i.mhpmcounter_we [7], _0196_, _0288_ };
  assign _0235_ = & { \cv32e40x_core_inst.cs_registers_i.mhpmcounter_we [6], _0197_, _0198_ };
  assign _0236_ = & { _0199_, _0179_, _0178_, _0176_ };
  assign _0237_ = & { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_valid_gated , _0289_ };
  assign _0238_ = & { \cv32e40x_core_inst.cs_registers_i.mstatus_we , _0200_ };
  assign _0239_ = & { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.wr_en_i , _0713_ };
  assign _0240_ = & { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata2_we_int , \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.tdata2_we_i  };
  assign _0241_ = & { _0652_, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata1_we_int  };
  assign _0242_ = & { _0290_, _0291_, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i  };
  assign _0243_ = | { _0957_, _0958_ };
  assign _0244_ = | { _0959_, _0960_, _0961_ };
  assign _0245_ = | { _0959_, _0960_ };
  assign _0246_ = | { _0961_, _0962_, _0963_, _0964_ };
  assign _0247_ = | { _0948_, _0949_, _0950_[3:2], _0950_[0], _0952_ };
  assign _0248_ = | { _0972_, _0973_, _0974_ };
  assign _0249_ = | { _0948_, _0952_ };
  assign _0250_ = | { _0948_, _0950_ };
  assign _0251_ = | { _1118_, _1119_, _1127_[1], _1130_[1] };
  assign _0252_ = | { _1291_, _1292_, _1297_[1], _1300_[1] };
  assign _0253_ = | { _1252_, _1249_ };
  assign _0254_ = | { _1322_, _1323_, _1331_[1], _1334_[1] };
  assign _0255_ = | { _1621_, _1618_ };
  assign _0259_ = | { _0539_, _0540_, _0541_, _0542_, _0554_, _0555_ };
  assign _0260_ = | { _1315_, _1317_ };
  assign _0262_ = | { _0878_, _0877_ };
  assign _0263_ = | { _0885_, _0884_, _0855_ };
  assign _0264_ = | { _0892_, _0863_ };
  assign _0266_ = | { _0902_, _0901_, _0900_, _0899_, _0898_, _0897_, _0896_, _0895_, _0894_, _0893_ };
  assign _0265_ = | { _0904_, _0903_, _0892_, _0863_, _0857_, _0856_ };
  assign _0267_ = | { _0883_, _0877_ };
  assign _0261_ = | { _0883_, _0878_, _0877_ };
  assign _0268_ = | { _0904_, _0863_, _0858_, _0857_, _0856_, _0829_ };
  assign _0269_ = | { _0539_, _0541_, _0554_ };
  assign _0270_ = | { _0540_, _0542_, _0555_ };
  assign _0271_ = | { _0416_, _0520_ };
  assign _0272_ = | { _0416_, _0417_, _0418_ };
  assign _0274_ = | { _1094_, _1096_, _1098_, _1099_ };
  assign _0273_ = | { _1093_, _1097_ };
  assign _0275_ = | { _1093_, _1094_, _1095_, _1096_, _1097_, _1098_, _1099_ };
  assign _0276_ = | { _0891_, _0890_, _0887_, _0886_ };
  assign _0278_ = | { _0539_, _0540_, _0541_, _0542_, _0543_, _0544_, _0545_, _0546_, _0547_, _0548_, _0549_, _0550_, _0551_, _0552_, _0553_, _0554_, _0555_, _0556_, _0557_, _0558_, _0559_, _0560_, _0562_, _0563_, _0564_, _0565_, _0566_, _0567_, _0568_, _0569_ };
  assign _0256_ = | { _1605_, _1604_, _1603_ };
  assign _0258_ = | { _1605_, _0308_ };
  assign _0257_ = | { _1605_, _1604_, _0308_ };
  assign _0277_ = | { _0832_, _0831_ };
  assign _0279_ = | { _1663_, _1654_ };
  assign _0280_ = | { _1661_, _1656_ };
  assign _0281_ = | { _1098_, _1099_ };
  assign _0282_ = | { _1103_, _1104_ };
  assign _0283_ = | { _1605_, _1604_, _1603_, _0308_ };
  assign _0135_ = | { _1605_, _1603_, _0308_ };
  assign _0292_ = ! \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193];
  assign _0293_ = \cv32e40x_core_inst.load_store_unit_i.lsu_size_q  == 2'h2;
  assign _0295_ = \cv32e40x_core_inst.load_store_unit_i.rdata_offset_q  == 2'h3;
  assign _0296_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [167:163] == 5'h02;
  assign _0297_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [167:163] == 5'h03;
  assign _0298_ = \cv32e40x_core_inst.load_store_unit_i.a_ext.lsu_atomic_q  == 2'h2;
  assign _0301_ = \cv32e40x_core_inst.load_store_unit_i.cnt_q  == 2'h1;
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_one_txn_pend_n  = \cv32e40x_core_inst.load_store_unit_i.next_cnt  == 2'h1;
  assign _0300_ = ! \cv32e40x_core_inst.load_store_unit_i.cnt_q ;
  assign _0302_ = ! { 1'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [0] };
  assign _0304_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.mpu_status_wb_i  == 2'h2;
  assign _0305_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.mpu_status_wb_i  == 2'h1;
  assign _0306_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.align_status_wb_i  == 2'h2;
  assign _0307_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193] == 4'hc;
  assign _0315_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192];
  assign _0317_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [119:115] == \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178];
  assign _0319_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178];
  assign _0316_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [119:115] == \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173];
  assign _0318_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173];
  assign \cv32e40x_core_inst.controller_i.bypass_i.rf_we_ex  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [120] && \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [42];
  assign \cv32e40x_core_inst.controller_i.bypass_i.rf_we_wb  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [247] && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [53];
  assign \cv32e40x_core_inst.controller_i.bypass_i.lsu_en_wb  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [158] && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [53];
  assign \cv32e40x_core_inst.controller_i.bypass_i.sys_mret_unqual_id  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [2] && \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [190];
  assign \cv32e40x_core_inst.controller_i.bypass_i.jmpr_unqual_id  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [51] && \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [190];
  assign \cv32e40x_core_inst.controller_i.bypass_i.tbljmp_unqual_id  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [151] && \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [190];
  assign _0320_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [162] && \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [156];
  assign _0321_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [176] && \cv32e40x_core_inst.controller_i.bypass_i.csr_hz_i [26];
  assign \cv32e40x_core_inst.controller_i.bypass_i.csr_impl_write_in_ex  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [42] && _0349_;
  assign _0322_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [49] && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [43];
  assign _0323_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [206] && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [0];
  assign \cv32e40x_core_inst.controller_i.bypass_i.csr_impl_write_in_wb  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [53] && _0352_;
  assign \cv32e40x_core_inst.controller_i.bypass_i.csr_write_in_ex  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [42] && _0353_;
  assign \cv32e40x_core_inst.controller_i.bypass_i.csr_write_in_wb  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [53] && _0354_;
  assign _0324_ = \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_F9A70  && \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_1C271 ;
  assign \cv32e40x_core_inst.controller_i.bypass_i.csr_expl_hz_ex  = _0324_ && _0315_;
  assign _0325_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [162] && _0355_;
  assign \cv32e40x_core_inst.controller_i.bypass_i.sv2v_tmp_E5A17  = _0325_ && \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [42];
  assign \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_ex_hz [0] = \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_ex_jalr_match  && \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [25];
  assign _0326_ = _0317_ && _0368_;
  assign \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_ex_hz [1] = _0326_ && \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [26];
  assign \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_wb_hz [0] = \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_wb_jalr_match  && \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [25];
  assign _0327_ = _0319_ && _0368_;
  assign \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_wb_hz [1] = _0327_ && \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [26];
  assign \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_ex_jalr_match  = _0316_ && _0367_;
  assign \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_wb_jalr_match  = _0318_ && _0367_;
  assign _0328_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [173] && \cv32e40x_core_inst.controller_i.bypass_i.rf_we_ex ;
  assign _0329_ = _0328_ && _0369_;
  assign _0330_ = _0346_ && \cv32e40x_core_inst.controller_i.bypass_i.rf_we_wb ;
  assign _0331_ = _0330_ && _0370_;
  assign _0332_ = \cv32e40x_core_inst.controller_i.bypass_i.rf_we_wb  && \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_wb_jalr_match ;
  assign _0333_ = _0332_ && \cv32e40x_core_inst.controller_i.bypass_i.lsu_en_wb ;
  assign _0334_ = \cv32e40x_core_inst.controller_i.bypass_i.rf_we_ex  && \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_ex_jalr_match ;
  assign _0335_ = \cv32e40x_core_inst.controller_i.bypass_i.jmpr_unqual_id  && _0361_;
  assign _0336_ = \cv32e40x_core_inst.controller_i.bypass_i.csr_impl_rd_unqual_id  && \cv32e40x_core_inst.controller_i.bypass_i.csr_write_in_ex_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_F9A70  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [176] && \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [42];
  assign _0337_ = \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_F9A70  && \cv32e40x_core_inst.controller_i.bypass_i.csr_impl_write_in_wb ;
  assign _0338_ = \cv32e40x_core_inst.controller_i.bypass_i.csr_counter_read_i  && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [53];
  assign _0339_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [42] && \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [173];
  assign _0340_ = \cv32e40x_core_inst.controller_i.bypass_i.csr_irq_enable_write_i  && _0339_;
  assign _0341_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [173] && _0365_;
  assign _0342_ = _0341_ && \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [42];
  assign _0343_ = _0339_ && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [158];
  assign _0344_ = _0343_ && _0366_;
  assign _0345_ = _0344_ && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [53];
  assign _0346_ = ! \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i ;
  assign \cv32e40x_core_inst.controller_i.bypass_i.csr_impl_rd_unqual_id  = \cv32e40x_core_inst.controller_i.bypass_i.sys_mret_unqual_id  || \cv32e40x_core_inst.controller_i.bypass_i.tbljmp_unqual_id ;
  assign _0347_ = _0320_ || \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [46];
  assign _0348_ = _0347_ || \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [45];
  assign _0349_ = _0348_ || _0321_;
  assign _0350_ = _0322_ || \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [57];
  assign _0351_ = _0350_ || \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [56];
  assign _0352_ = _0351_ || _0323_;
  assign _0353_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [176] || \cv32e40x_core_inst.controller_i.bypass_i.csr_impl_write_in_ex ;
  assign _0354_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [206] || \cv32e40x_core_inst.controller_i.bypass_i.csr_impl_write_in_wb ;
  assign \cv32e40x_core_inst.controller_i.bypass_i.csr_write_in_ex_wb  = \cv32e40x_core_inst.controller_i.bypass_i.csr_write_in_ex  || \cv32e40x_core_inst.controller_i.bypass_i.csr_write_in_wb ;
  assign _0355_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [155] || \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [154];
  assign _0356_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [157] || _0364_;
  assign _0357_ = _0356_ || \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [67];
  assign _0358_ = _0357_ || \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [153];
  assign _0359_ = _0358_ || \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [152];
  assign _0360_ = _0329_ || _0331_;
  assign _0361_ = _0333_ || _0334_;
  assign _0362_ = _0337_ || \cv32e40x_core_inst.controller_i.bypass_i.csr_expl_hz_ex ;
  assign _0363_ = _0342_ || _0345_;
  assign _0364_ = | \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [156:155];
  assign _0365_ = | \cv32e40x_core_inst.controller_i.bypass_i.lsu_atomic_ex_i ;
  assign _0366_ = | \cv32e40x_core_inst.load_store_unit_i.a_ext.lsu_atomic_q ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [0] = _0363_ ? \cv32e40x_core_inst.controller_i.bypass_i.lsu_bus_busy_i  : 1'h0;
  assign _0314_ = \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_wb_jalr_match  ? 1'h1 : 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.ctrl_byp_i [13] = \cv32e40x_core_inst.controller_i.bypass_i.rf_we_wb  ? _0314_ : 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.ctrl_byp_i [17:16] = \cv32e40x_core_inst.controller_i.bypass_i.rf_we_ex  ? _0312_ : _0309_[3:2];
  assign _0312_ = \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_ex_hz [0] ? 2'h1 : _0309_[3:2];
  assign _0313_ = \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_ex_hz [1] ? 2'h1 : _0309_[1:0];
  assign \cv32e40x_core_inst.id_stage_i.ctrl_byp_i [15:14] = \cv32e40x_core_inst.controller_i.bypass_i.rf_we_ex  ? _0313_ : _0309_[1:0];
  assign _0309_[3:2] = \cv32e40x_core_inst.controller_i.bypass_i.rf_we_wb  ? _0310_ : 2'h0;
  assign _0310_ = \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_wb_hz [0] ? 2'h2 : 2'h0;
  assign _0311_ = \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_wb_hz [1] ? 2'h2 : 2'h0;
  assign _0309_[1:0] = \cv32e40x_core_inst.controller_i.bypass_i.rf_we_wb  ? _0311_ : 2'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [1] = _0340_ ? 1'h1 : 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [5] = _0338_ ? 1'h1 : 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [9] = _0362_ ? 1'h1 : 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [10] = _0336_ ? 1'h1 : 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [12] = _0335_ ? 1'h1 : 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [11] = _0360_ ? 1'h1 : 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.deassert_we_i  = _0359_ ? 1'h1 : 1'h0;
  assign _0368_ = | \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178];
  assign _0367_ = | \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173];
  assign _0369_ = | \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_ex_hz ;
  assign _0370_ = | \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_wb_hz ;
  assign _0408_ = _0410_ + 32'd1;
  assign _0409_ = _0411_ + 32'd1;
  assign _0410_ = { 21'h000000, \cv32e40x_core_inst.cs_registers_i.csr_raddr [4:0], 6'h00 } + 32'd31;
  assign _0411_ = { 21'h000000, \cv32e40x_core_inst.cs_registers_i.csr_raddr [4:0], 6'h00 } + 32'd63;
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_increment [63:0] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_q [63:0] + 32'd1;
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_increment [191:128] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_q [191:128] + 32'd1;
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_increment [255:192] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_q [255:192] + 32'd1;
  assign _0412_ = { 912'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, \cv32e40x_core_inst.cs_registers_i.mhpmevent_q [111:96], 96'h000000000000000000000000 } & _0516_;
  assign _0413_ = _0517_ & \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [241:210];
  assign \cv32e40x_core_inst.cs_registers_i.mcountinhibit_we  = \cv32e40x_core_inst.cs_registers_i.csr_we_int  & _0420_;
  assign \cv32e40x_core_inst.cs_registers_i.mhpmevent_we  = \cv32e40x_core_inst.cs_registers_i.csr_we_int  & _0510_;
  assign _0414_ = { \cv32e40x_core_inst.cs_registers_i.hpm_events [15:6], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_31573 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_06A0A , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C451 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C46A7 , \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated , 1'h1 } & \cv32e40x_core_inst.cs_registers_i.mhpmevent_q [111:96];
  assign _0415_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr [11:10] == 2'h3;
  assign _0416_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [205:204] == 2'h1;
  assign _0417_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [205:204] == 2'h2;
  assign _0418_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [205:204] == 2'h3;
  assign _0419_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h017;
  assign _0420_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h320;
  assign _0421_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h323;
  assign _0422_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h324;
  assign _0423_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h325;
  assign _0424_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h326;
  assign _0425_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h327;
  assign _0426_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h328;
  assign _0427_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h329;
  assign _0428_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h32a;
  assign _0429_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h32b;
  assign _0430_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h32c;
  assign _0431_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h32d;
  assign _0432_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h32e;
  assign _0433_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h32f;
  assign _0434_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h330;
  assign _0435_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h331;
  assign _0436_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h332;
  assign _0437_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h333;
  assign _0438_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h334;
  assign _0439_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h335;
  assign _0440_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h336;
  assign _0441_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h337;
  assign _0442_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h338;
  assign _0443_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h339;
  assign _0444_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h33a;
  assign _0445_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h33b;
  assign _0446_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h33c;
  assign _0447_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h33d;
  assign _0448_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h33e;
  assign _0449_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h33f;
  assign _0450_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'hb00;
  assign _0451_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'hb02;
  assign _0452_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'hb03;
  assign _0453_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'hb80;
  assign _0454_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'hb82;
  assign _0455_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'hb83;
  assign _0456_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [53] && _0468_;
  assign \cv32e40x_core_inst.cs_registers_i.instr_valid  = _0456_ && _0469_;
  assign \cv32e40x_core_inst.cs_registers_i.csr_en_gated  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [206] && \cv32e40x_core_inst.cs_registers_i.instr_valid ;
  assign _0457_ = _0511_ && \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [176];
  assign \cv32e40x_core_inst.cs_registers_i.illegal_csr_write  = _0457_ && _0415_;
  assign _0458_ = _0512_ && _0513_;
  assign _0459_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [206] && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [53];
  assign \cv32e40x_core_inst.cs_registers_i.csr_wr_in_wb  = _0459_ && _0481_;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_wr_in_wb_flush_i  = \cv32e40x_core_inst.cs_registers_i.csr_wr_in_wb  && _0419_;
  assign \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_1C271  = _0459_ && _0514_;
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [0] = \cv32e40x_core_inst.cs_registers_i.csr_we_int  && _0450_;
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [2] = \cv32e40x_core_inst.cs_registers_i.csr_we_int  && _0451_;
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [3] = \cv32e40x_core_inst.cs_registers_i.csr_we_int  && _0452_;
  assign _0460_ = _0470_ && \cv32e40x_core_inst.cs_registers_i.csr_we_int ;
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [0] = _0460_ && _0453_;
  assign _0461_ = _0471_ && \cv32e40x_core_inst.cs_registers_i.csr_we_int ;
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [2] = _0461_ && _0454_;
  assign _0462_ = _0472_ && \cv32e40x_core_inst.cs_registers_i.csr_we_int ;
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [3] = _0462_ && _0455_;
  assign _0463_ = _0470_ && _0473_;
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_increment [0] = _0463_ && _0474_;
  assign _0464_ = _0471_ && _0475_;
  assign _0465_ = _0464_ && _0476_;
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_increment [2] = _0465_ && \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated ;
  assign _0466_ = _0472_ && _0477_;
  assign _0467_ = _0466_ && _0478_;
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_increment [3] = _0467_ && _0570_;
  assign _0469_ = ! \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [18];
  assign _0470_ = ! \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [0];
  assign _0471_ = ! \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [2];
  assign _0472_ = ! \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [3];
  assign _0473_ = ! \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [0];
  assign _0474_ = ! \cv32e40x_core_inst.cs_registers_i.mcountinhibit_q [0];
  assign _0475_ = ! \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [2];
  assign _0476_ = ! \cv32e40x_core_inst.cs_registers_i.mcountinhibit_q [2];
  assign _0477_ = ! \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [3];
  assign _0478_ = ! \cv32e40x_core_inst.cs_registers_i.mcountinhibit_q [3];
  assign _0479_ = \cv32e40x_core_inst.cs_registers_i.illegal_csr_write  || \cv32e40x_core_inst.cs_registers_i.illegal_csr_read ;
  assign _0480_ = _0416_ || _0417_;
  assign _0481_ = _0480_ || _0418_;
  assign _0482_ = \cv32e40x_core_inst.cs_registers_i.mie_we  || \cv32e40x_core_inst.cs_registers_i.mstatus_we ;
  assign \cv32e40x_core_inst.controller_i.bypass_i.csr_irq_enable_write_i  = _0482_ || \cv32e40x_core_inst.cs_registers_i.priv_lvl_we ;
  assign _0483_ = _0421_ || _0422_;
  assign _0484_ = _0483_ || _0423_;
  assign _0485_ = _0484_ || _0424_;
  assign _0486_ = _0485_ || _0425_;
  assign _0487_ = _0486_ || _0426_;
  assign _0488_ = _0487_ || _0427_;
  assign _0489_ = _0488_ || _0428_;
  assign _0490_ = _0489_ || _0429_;
  assign _0491_ = _0490_ || _0430_;
  assign _0492_ = _0491_ || _0431_;
  assign _0493_ = _0492_ || _0432_;
  assign _0494_ = _0493_ || _0433_;
  assign _0495_ = _0494_ || _0434_;
  assign _0496_ = _0495_ || _0435_;
  assign _0497_ = _0496_ || _0436_;
  assign _0498_ = _0497_ || _0437_;
  assign _0499_ = _0498_ || _0438_;
  assign _0500_ = _0499_ || _0439_;
  assign _0501_ = _0500_ || _0440_;
  assign _0502_ = _0501_ || _0441_;
  assign _0503_ = _0502_ || _0442_;
  assign _0504_ = _0503_ || _0443_;
  assign _0505_ = _0504_ || _0444_;
  assign _0506_ = _0505_ || _0445_;
  assign _0507_ = _0506_ || _0446_;
  assign _0508_ = _0507_ || _0447_;
  assign _0509_ = _0508_ || _0448_;
  assign _0510_ = _0509_ || _0449_;
  assign _0511_ = | \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [175:174];
  assign _0512_ = | \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [1:0];
  assign _0513_ = \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [1:0] != 2'h1;
  assign _0514_ = | \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [205:204];
  assign _0515_ = - $signed({ 23'h000000, \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [196:192], 5'h00 });
  assign _0516_ = ~ _0571_;
  assign _0517_ = ~ \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [191:160];
  assign _0518_ = _0412_ | _0572_;
  assign _0519_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [191:160] | \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [241:210];
  assign _0395_ = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_increment [3] ? \cv32e40x_core_inst.cs_registers_i.mhpmcounter_increment [255:192] : 64'hxxxxxxxxxxxxxxxx;
  assign _0399_ = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_increment [3] ? 2'h3 : 2'h0;
  assign _0386_[1] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [3] ? 1'h1 : _0399_[1];
  assign _0382_[31:0] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [3] ? 32'hxxxxxxxx : _0395_[31:0];
  assign _0382_[63:32] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [3] ? \cv32e40x_core_inst.cs_registers_i.csr_wdata_int  : _0395_[63:32];
  assign _0386_[0] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [3] ? 1'h0 : _0399_[0];
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_we [7] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [3] ? 1'h0 : _0386_[1];
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_we [6] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [3] ? 1'h1 : _0386_[0];
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_n [223:192] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [3] ? \cv32e40x_core_inst.cs_registers_i.csr_wdata_int  : _0382_[31:0];
  assign _0394_ = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_increment [2] ? \cv32e40x_core_inst.cs_registers_i.mhpmcounter_increment [191:128] : 64'hxxxxxxxxxxxxxxxx;
  assign _0398_ = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_increment [2] ? 2'h3 : 2'h0;
  assign _0385_[1] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [2] ? 1'h1 : _0398_[1];
  assign _0381_[31:0] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [2] ? 32'hxxxxxxxx : _0394_[31:0];
  assign _0381_[63:32] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [2] ? \cv32e40x_core_inst.cs_registers_i.csr_wdata_int  : _0394_[63:32];
  assign _0385_[0] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [2] ? 1'h0 : _0398_[0];
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_we [5] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [2] ? 1'h0 : _0385_[1];
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_we [4] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [2] ? 1'h1 : _0385_[0];
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_n [159:128] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [2] ? \cv32e40x_core_inst.cs_registers_i.csr_wdata_int  : _0381_[31:0];
  assign _0396_ = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_increment [0] ? \cv32e40x_core_inst.cs_registers_i.mhpmcounter_increment [63:0] : 64'hxxxxxxxxxxxxxxxx;
  assign _0397_ = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_increment [0] ? 2'h3 : 2'h0;
  assign _0384_[1] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [0] ? 1'h1 : _0397_[1];
  assign _0383_[31:0] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [0] ? 32'hxxxxxxxx : _0396_[31:0];
  assign _0383_[63:32] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [0] ? \cv32e40x_core_inst.cs_registers_i.csr_wdata_int  : _0396_[63:32];
  assign _0384_[0] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_upper [0] ? 1'h0 : _0397_[0];
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_we [1] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [0] ? 1'h0 : _0384_[1];
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_we [0] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [0] ? 1'h1 : _0384_[0];
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_n [31:0] = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_lower [0] ? \cv32e40x_core_inst.cs_registers_i.csr_wdata_int  : _0383_[31:0];
  assign \cv32e40x_core_inst.cs_registers_i.mcountinhibit_n  = \cv32e40x_core_inst.cs_registers_i.mcountinhibit_we  ? { 28'h0000000, \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [3:2], 1'h0, \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [0] } : { 28'h0000000, \cv32e40x_core_inst.cs_registers_i.mcountinhibit_q [3:2], 1'h0, \cv32e40x_core_inst.cs_registers_i.mcountinhibit_q [0] };
  function [31:0] _2544_;
    input [31:0] a;
    input [95:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _2544_ = b[31:0];
      3'b?1?:
        _2544_ = b[63:32];
      3'b1??:
        _2544_ = b[95:64];
      default:
        _2544_ = a;
    endcase
  endfunction
  assign _0375_ = _2544_(32'hxxxxxxxx, { _0519_, _0413_, \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [191:160] }, { _0417_, _0418_, _0271_ });
  assign _0520_ = ! \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [205:204];
  function [0:0] _2546_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _2546_ = b[0:0];
      2'b1?:
        _2546_ = b[1:1];
      default:
        _2546_ = a;
    endcase
  endfunction
  assign _0376_ = _2546_(1'hx, 2'h2, { _0272_, _0520_ });
  assign \cv32e40x_core_inst.cs_registers_i.csr_we_int  = \cv32e40x_core_inst.cs_registers_i.csr_en_gated  ? _0376_ : 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.csr_wdata_int  = \cv32e40x_core_inst.cs_registers_i.csr_en_gated  ? _0375_ : \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [191:160];
  assign _0521_ = | \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [41:40];
  assign _0522_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [39] ? 1'hx : \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [7];
  assign _0523_ = _0521_ ? 1'h1 : _0522_;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.wr_data_i [7] = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [38] ? _0388_[7] : _0523_;
  assign _0524_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [39] ? 1'hx : \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [3];
  assign _0525_ = _0521_ ? \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [7] : _0524_;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.wr_data_i [3] = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [38] ? _0388_[3] : _0525_;
  assign _0388_[7] = \cv32e40x_core_inst.dbg_ack  ? \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [7] : \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [3];
  assign _0388_[3] = \cv32e40x_core_inst.dbg_ack  ? \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [3] : 1'h0;
  assign _0406_ = \cv32e40x_core_inst.dbg_ack  ? _0378_ : 1'h1;
  assign _0407_ = \cv32e40x_core_inst.dbg_ack  ? \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [31] : \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [73];
  assign _0405_ = \cv32e40x_core_inst.dbg_ack  ? \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [10:0] : \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [52:42];
  assign _0404_ = \cv32e40x_core_inst.dbg_ack  ? _0374_ : 1'h1;
  assign _0403_ = \cv32e40x_core_inst.dbg_ack  ? _0373_ : 1'h1;
  assign _0379_ = \cv32e40x_core_inst.dbg_ack  ? { \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [31:1], 1'h0 } : \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [105:74];
  assign _0526_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [39] ? 1'h1 : 1'h0;
  assign _0527_ = _0521_ ? 1'h1 : _0526_;
  assign \cv32e40x_core_inst.cs_registers_i.priv_lvl_we  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [38] ? 1'h1 : _0527_;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_en_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [38] ? _0406_ : _0378_;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_data_i [31] = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [38] ? _0407_ : \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [31];
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_data_i [10:0] = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [38] ? _0405_ : \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [10:0];
  assign _0528_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [39] ? 1'h1 : _0374_;
  assign _0529_ = _0521_ ? 1'h1 : _0528_;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_we  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [38] ? _0404_ : _0529_;
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [38] ? _0403_ : _0373_;
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [38] ? _0379_ : { \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [31:1], 1'h0 };
  assign _0402_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  ? 1'h1 : 1'h0;
  assign _0530_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h7a2;
  assign _0531_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h7a1;
  assign _0377_ = _0419_ ? 1'h1 : 1'h0;
  assign _0400_ = _0532_ ? 1'h1 : 1'h0;
  assign _0532_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h304;
  assign _0401_ = _0533_ ? 1'h1 : \cv32e40x_core_inst.cs_registers_i.csr_mtvec_init_i ;
  assign _0533_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h305;
  assign _0393_ = _0534_ ? 1'h1 : 1'h0;
  assign _0534_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h342;
  assign _0389_ = _0535_ ? 1'h1 : 1'h0;
  assign _0535_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h300;
  assign _0387_ = _0536_ ? 1'h1 : 1'h0;
  assign _0536_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h340;
  assign _0391_ = _0530_ ? _0402_ : 1'h0;
  assign _0390_ = _0531_ ? _0402_ : 1'h0;
  assign _0392_ = _0537_ ? 1'h1 : 1'h0;
  assign _0537_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h7a0;
  assign _0380_ = _0538_ ? 1'h1 : 1'h0;
  assign _0538_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] == 12'h341;
  assign \cv32e40x_core_inst.cs_registers_i.mie_we  = \cv32e40x_core_inst.cs_registers_i.csr_we_int  ? _0400_ : 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i  = \cv32e40x_core_inst.cs_registers_i.csr_we_int  ? _0401_ : \cv32e40x_core_inst.cs_registers_i.csr_mtvec_init_i ;
  assign _0378_ = \cv32e40x_core_inst.cs_registers_i.csr_we_int  ? _0393_ : 1'h0;
  assign _0374_ = \cv32e40x_core_inst.cs_registers_i.csr_we_int  ? _0389_ : 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i  = \cv32e40x_core_inst.cs_registers_i.csr_we_int  ? _0377_ : 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i  = \cv32e40x_core_inst.cs_registers_i.csr_we_int  ? _0387_ : 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.tdata2_we_i  = \cv32e40x_core_inst.cs_registers_i.csr_we_int  ? _0391_ : 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.tdata1_we_i  = \cv32e40x_core_inst.cs_registers_i.csr_we_int  ? _0390_ : 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.wr_en_i  = \cv32e40x_core_inst.cs_registers_i.csr_we_int  ? _0392_ : 1'h0;
  assign _0373_ = \cv32e40x_core_inst.cs_registers_i.csr_we_int  ? _0380_ : 1'h0;
  function [31:0] _2605_;
    input [31:0] a;
    input [575:0] b;
    input [17:0] s;
    casez (s) // synopsys parallel_case
      18'b?????????????????1:
        _2605_ = b[31:0];
      18'b????????????????1?:
        _2605_ = b[63:32];
      18'b???????????????1??:
        _2605_ = b[95:64];
      18'b??????????????1???:
        _2605_ = b[127:96];
      18'b?????????????1????:
        _2605_ = b[159:128];
      18'b????????????1?????:
        _2605_ = b[191:160];
      18'b???????????1??????:
        _2605_ = b[223:192];
      18'b??????????1???????:
        _2605_ = b[255:224];
      18'b?????????1????????:
        _2605_ = b[287:256];
      18'b????????1?????????:
        _2605_ = b[319:288];
      18'b???????1??????????:
        _2605_ = b[351:320];
      18'b??????1???????????:
        _2605_ = b[383:352];
      18'b?????1????????????:
        _2605_ = b[415:384];
      18'b????1?????????????:
        _2605_ = b[447:416];
      18'b???1??????????????:
        _2605_ = b[479:448];
      18'b??1???????????????:
        _2605_ = b[511:480];
      18'b?1????????????????:
        _2605_ = b[543:512];
      18'b1?????????????????:
        _2605_ = b[575:544];
      default:
        _2605_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.ex_stage_i.csr_rdata_i  = _2605_(32'd0, { \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [31:6], 30'h00000018, \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [7], 3'h0, \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [3], 35'h040800105, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [31:16], 4'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [11], 3'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [7], 3'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [3], 3'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [31:7], 6'h00, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [0], 28'h0000000, \cv32e40x_core_inst.cs_registers_i.mcountinhibit_q [3:2], 1'h0, \cv32e40x_core_inst.cs_registers_i.mcountinhibit_q [0], _0573_, \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q , \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [31:1], 1'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [31], 20'h00000, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [10:0], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q , \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q , \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q , 32'h01008064, _0371_, _0372_, 64'h0000060200000014 }, { _0549_, _0566_, _0565_, _0564_, _0563_, _0562_, _0561_, _0559_, _0558_, _0557_, _0548_, _0547_, _0546_, _0545_, _0270_, _0269_, _0553_, _0552_ });
  assign _0550_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hf14;
  assign _0551_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hf13;
  assign _0552_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hf12;
  assign _0553_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hf11;
  assign \cv32e40x_core_inst.cs_registers_i.illegal_csr_read  = _0278_ ? 1'h0 : 1'h1;
  assign _0567_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hf15;
  assign _0539_[25] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc9c;
  assign _0539_[26] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc9d;
  assign _0539_[27] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc9e;
  assign _0554_[20] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb95;
  assign _0554_[21] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb96;
  assign _0554_[22] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb97;
  assign _0554_[23] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb98;
  assign _0540_[14] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc11;
  assign _0540_[15] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc12;
  assign _0540_[16] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc13;
  assign _0540_[17] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc14;
  assign _0540_[18] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc15;
  assign _0540_[19] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc16;
  assign _0540_[20] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc17;
  assign _0540_[21] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc18;
  assign _0540_[22] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc19;
  assign _0540_[23] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc1a;
  assign _0540_[24] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc1b;
  assign _0540_[25] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc1c;
  assign _0540_[26] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc1d;
  assign _0540_[27] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc1e;
  assign _0540_[28] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc1f;
  assign _0541_[0] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc80;
  assign _0541_[1] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc82;
  assign _0542_[0] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc00;
  assign _0542_[1] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc02;
  assign _0555_[0] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb00;
  assign _0555_[1] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb02;
  assign _0555_[10] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb0b;
  assign _0555_[11] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb0c;
  assign _0555_[12] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb0d;
  assign _0555_[13] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb0e;
  assign _0555_[14] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb0f;
  assign _0555_[15] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb10;
  assign _0555_[16] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb11;
  assign _0555_[2] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb03;
  assign _0555_[3] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb04;
  assign _0555_[4] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb05;
  assign _0555_[5] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb06;
  assign _0555_[6] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb07;
  assign _0555_[7] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb08;
  assign _0555_[8] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb09;
  assign _0555_[9] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb0a;
  assign _0543_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc81;
  assign _0544_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc01;
  assign _0545_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h7a4;
  assign _0546_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h7a2;
  assign _0547_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h7a1;
  assign _0556_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h344;
  assign _0568_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h343;
  assign _0557_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h342;
  assign _0558_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h341;
  assign _0559_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h340;
  assign _0561_ = | _0560_;
  assign _0560_[0] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h323;
  assign _0560_[1] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h324;
  assign _0560_[10] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h32d;
  assign _0560_[11] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h32e;
  assign _0560_[12] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h32f;
  assign _0560_[13] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h330;
  assign _0560_[14] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h331;
  assign _0560_[15] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h332;
  assign _0560_[16] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h333;
  assign _0560_[17] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h334;
  assign _0560_[18] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h335;
  assign _0560_[19] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h336;
  assign _0560_[2] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h325;
  assign _0560_[20] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h337;
  assign _0560_[21] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h338;
  assign _0560_[22] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h339;
  assign _0560_[23] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h33a;
  assign _0560_[24] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h33b;
  assign _0560_[25] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h33c;
  assign _0560_[26] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h33d;
  assign _0560_[27] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h33e;
  assign _0560_[28] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h33f;
  assign _0560_[3] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h326;
  assign _0560_[4] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h327;
  assign _0560_[5] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h328;
  assign _0560_[6] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h329;
  assign _0560_[7] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h32a;
  assign _0560_[8] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h32b;
  assign _0560_[9] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h32c;
  assign _0562_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h320;
  assign _0569_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h310;
  assign _0563_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h305;
  assign _0564_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h304;
  assign _0565_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h301;
  assign _0566_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h300;
  assign _0549_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h017;
  assign \cv32e40x_core_inst.controller_i.bypass_i.csr_hz_i [26] = _0548_ ? 1'h1 : 1'h0;
  assign _0548_ = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'h7a0;
  assign \cv32e40x_core_inst.controller_i.bypass_i.csr_counter_read_i  = _0259_ ? 1'h1 : 1'h0;
  assign _0539_[0] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc83;
  assign _0539_[1] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc84;
  assign _0539_[10] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc8d;
  assign _0539_[11] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc8e;
  assign _0539_[12] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc8f;
  assign _0539_[13] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc90;
  assign _0539_[14] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc91;
  assign _0539_[15] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc92;
  assign _0539_[16] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc93;
  assign _0539_[17] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc94;
  assign _0539_[18] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc95;
  assign _0539_[19] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc96;
  assign _0539_[2] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc85;
  assign _0539_[20] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc97;
  assign _0539_[21] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc98;
  assign _0539_[22] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc99;
  assign _0539_[23] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc9a;
  assign _0539_[24] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc9b;
  assign _0539_[28] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc9f;
  assign _0539_[3] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc86;
  assign _0539_[4] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc87;
  assign _0539_[5] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc88;
  assign _0539_[6] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc89;
  assign _0539_[7] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc8a;
  assign _0539_[8] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc8b;
  assign _0539_[9] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc8c;
  assign _0554_[0] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb80;
  assign _0554_[1] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb82;
  assign _0554_[10] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb8b;
  assign _0554_[11] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb8c;
  assign _0554_[12] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb8d;
  assign _0554_[13] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb8e;
  assign _0554_[14] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb8f;
  assign _0554_[15] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb90;
  assign _0554_[16] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb91;
  assign _0554_[17] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb92;
  assign _0554_[18] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb93;
  assign _0554_[19] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb94;
  assign _0554_[2] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb83;
  assign _0554_[24] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb99;
  assign _0554_[25] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb9a;
  assign _0554_[26] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb9b;
  assign _0554_[27] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb9c;
  assign _0554_[28] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb9d;
  assign _0554_[29] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb9e;
  assign _0554_[3] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb84;
  assign _0554_[30] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb9f;
  assign _0554_[4] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb85;
  assign _0554_[5] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb86;
  assign _0554_[6] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb87;
  assign _0554_[7] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb88;
  assign _0554_[8] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb89;
  assign _0554_[9] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb8a;
  assign _0540_[0] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc03;
  assign _0540_[1] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc04;
  assign _0540_[10] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc0d;
  assign _0540_[11] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc0e;
  assign _0540_[12] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc0f;
  assign _0540_[13] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc10;
  assign _0540_[2] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc05;
  assign _0540_[3] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc06;
  assign _0540_[4] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc07;
  assign _0540_[5] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc08;
  assign _0540_[6] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc09;
  assign _0540_[7] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc0a;
  assign _0540_[8] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc0b;
  assign _0540_[9] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hc0c;
  assign _0555_[17] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb12;
  assign _0555_[18] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb13;
  assign _0555_[19] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb14;
  assign _0555_[20] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb15;
  assign _0555_[21] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb16;
  assign _0555_[22] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb17;
  assign _0555_[23] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb18;
  assign _0555_[24] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb19;
  assign _0555_[25] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb1a;
  assign _0555_[26] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb1b;
  assign _0555_[27] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb1c;
  assign _0555_[28] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb1d;
  assign _0555_[29] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb1e;
  assign _0555_[30] = \cv32e40x_core_inst.cs_registers_i.csr_raddr  == 12'hb1f;
  assign \cv32e40x_core_inst.cs_registers_i.all_counters_disabled  = & { \cv32e40x_core_inst.cs_registers_i.mcountinhibit_n [3:2], \cv32e40x_core_inst.cs_registers_i.mcountinhibit_n [0] };
  assign _0570_ = | _0414_;
  assign _0571_ = $signed(_0515_) < 0 ? 32'd4294967295 << - _0515_ : 32'd4294967295 >> _0515_;
  assign _0572_ = $signed(_0515_) < 0 ? \cv32e40x_core_inst.cs_registers_i.csr_wdata_int  << - _0515_ : \cv32e40x_core_inst.cs_registers_i.csr_wdata_int  >> _0515_;
  wire [1023:0] _4636_ = { 912'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, \cv32e40x_core_inst.cs_registers_i.mhpmevent_q [111:96], 96'h000000000000000000000000 };
  assign _0573_ = _4636_[$signed({ 22'h000000, \cv32e40x_core_inst.cs_registers_i.csr_raddr [4:0], 5'h00 }) +: 32];
  wire [2047:0] _4637_ = { 1792'h0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, \cv32e40x_core_inst.cs_registers_i.mhpmcounter_q [255:128], 64'h0000000000000000, \cv32e40x_core_inst.cs_registers_i.mhpmcounter_q [63:0] };
  assign _0371_ = _4637_[$signed(_0574_) +: 32];
  wire [2047:0] _4638_ = { 1792'h0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, \cv32e40x_core_inst.cs_registers_i.mhpmcounter_q [255:128], 64'h0000000000000000, \cv32e40x_core_inst.cs_registers_i.mhpmcounter_q [63:0] };
  assign _0372_ = _4638_[$signed(_0575_) +: 32];
  assign _0574_ = _0408_ - 32'd32;
  assign _0575_ = _0409_ - 32'd32;
  assign \cv32e40x_core_inst.cs_registers_i.csr_raddr  = \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_F9A70  ? \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [291:280] : 12'h000;
  assign \cv32e40x_core_inst.ex_stage_i.csr_illegal_i  = \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_F9A70  ? _0479_ : 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [31:7] = \cv32e40x_core_inst.cs_registers_i.csr_mtvec_init_i  ? 25'h0000000 : \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [31:7];
  assign _0594_ = \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [31:28] == 4'h2;
  assign _0595_ = \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [31:28] == 4'h6;
  assign _0596_ = \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [31:28] == 4'h5;
  assign _0598_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [31:28] == 4'hf;
  assign _0601_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q  == \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q ;
  assign _0603_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i  == 2'h3;
  assign _0604_ = ! \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i ;
  assign _0605_ = ! \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [1:0];
  assign _0606_ = 2'h1 == \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [1:0];
  assign _0607_ = 2'h2 == \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [1:0];
  assign _0608_ = 2'h3 == \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [1:0];
  assign _0600_ = ! \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [10:7];
  assign _0609_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i [31:2] == \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [31:2];
  assign _0602_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [10:7] == 4'h2;
  assign _0610_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [41:40] == 2'h3;
  assign _0611_ = ! \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [41:40];
  assign _0612_ = \cv32e40x_core_inst.controller_i.bypass_i.lsu_atomic_ex_i  == 2'h3;
  assign _0599_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [31:28] == 4'h2;
  assign _0597_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [31:28] == 4'h6;
  assign _0613_ = ! \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb ;
  assign _0614_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h001;
  assign _0615_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h002;
  assign _0616_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h003;
  assign _0617_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h004;
  assign _0618_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h005;
  assign _0619_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h006;
  assign _0620_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h007;
  assign _0621_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h008;
  assign _0622_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h009;
  assign _0623_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h00a;
  assign _0624_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h00b;
  assign _0625_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h00c;
  assign _0626_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h00d;
  assign _0627_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h00e;
  assign _0628_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h00f;
  assign _0629_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h010;
  assign _0630_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h011;
  assign _0631_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h012;
  assign _0632_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h013;
  assign _0633_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h014;
  assign _0634_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h015;
  assign _0635_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h016;
  assign _0636_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h017;
  assign _0637_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h018;
  assign _0638_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h019;
  assign _0639_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h01a;
  assign _0640_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h01b;
  assign _0641_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h01c;
  assign _0642_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h01d;
  assign _0643_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h01e;
  assign _0644_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  == 11'h01f;
  assign _0303_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [51:50] == 2'h3;
  assign _0645_ = ! \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [51:50];
  assign _0646_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [31:28] == 4'h5;
  assign _0593_ = ! \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q ;
  assign _0647_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q  >= \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q ;
  assign _0648_ = { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i [31:2], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_addr_high_lsb  } >= \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q ;
  assign _0649_ = _0716_ && _0717_;
  assign _0650_ = _0649_ && _0718_;
  assign _0651_ = _0719_ && _0720_;
  assign _0652_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.tdata1_we_i  && _0593_;
  assign _0653_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [6] && _0603_;
  assign _0654_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [3] && _0604_;
  assign _0655_ = _0710_ && \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [2];
  assign _0656_ = _0655_ && \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.priv_lvl_match_en_if ;
  assign _0657_ = _0656_ && \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_interruptible ;
  assign _0658_ = _0657_ && _0707_;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.trigger_match_if  = _0658_ && \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.if_addr_match ;
  assign _0659_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i [0] && _0605_;
  assign _0660_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i [1] && _0606_;
  assign _0661_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i [2] && _0607_;
  assign _0662_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i [3] && _0608_;
  assign _0663_ = _0609_ && _0722_;
  assign _0664_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [6] && _0610_;
  assign _0665_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [3] && _0611_;
  assign _0666_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [0] && _0711_;
  assign _0667_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [1] && \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172];
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_addr_match_en  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_valid_ex_i  && _0712_;
  assign _0668_ = _0710_ && \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.priv_lvl_match_en_ex ;
  assign _0669_ = _0668_ && \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_addr_match_en ;
  assign _0670_ = _0669_ && \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_addr_match ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.trigger_match_ex  = _0670_ && \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_interruptible ;
  assign _0671_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [0] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [0] = _0671_ && _0613_;
  assign _0672_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [1] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [1] = _0672_ && _0614_;
  assign _0673_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [2] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [2] = _0673_ && _0615_;
  assign _0674_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [3] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [3] = _0674_ && _0616_;
  assign _0675_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [4] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [4] = _0675_ && _0617_;
  assign _0676_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [5] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [5] = _0676_ && _0618_;
  assign _0677_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [6] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [6] = _0677_ && _0619_;
  assign _0678_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [7] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [7] = _0678_ && _0620_;
  assign _0679_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [8] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [8] = _0679_ && _0621_;
  assign _0680_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [9] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [9] = _0680_ && _0622_;
  assign _0681_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [10] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [10] = _0681_ && _0623_;
  assign _0682_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [11] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [11] = _0682_ && _0624_;
  assign _0683_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [12] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [12] = _0683_ && _0625_;
  assign _0684_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [13] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [13] = _0684_ && _0626_;
  assign _0685_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [14] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [14] = _0685_ && _0627_;
  assign _0686_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [15] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [15] = _0686_ && _0628_;
  assign _0687_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [16] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [16] = _0687_ && _0629_;
  assign _0688_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [17] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [17] = _0688_ && _0630_;
  assign _0689_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [18] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [18] = _0689_ && _0631_;
  assign _0690_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [19] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [19] = _0690_ && _0632_;
  assign _0691_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [20] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [20] = _0691_ && _0633_;
  assign _0692_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [21] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [21] = _0692_ && _0634_;
  assign _0693_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [22] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [22] = _0693_ && _0635_;
  assign _0694_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [23] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [23] = _0694_ && _0636_;
  assign _0695_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [24] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [24] = _0695_ && _0637_;
  assign _0696_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [25] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [25] = _0696_ && _0638_;
  assign _0697_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [26] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [26] = _0697_ && _0639_;
  assign _0698_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [27] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [27] = _0698_ && _0640_;
  assign _0699_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [28] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [28] = _0699_ && _0641_;
  assign _0700_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [29] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [29] = _0700_ && _0642_;
  assign _0701_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [30] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [30] = _0701_ && _0643_;
  assign _0702_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [31] && \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] [31] = _0702_ && _0644_;
  assign _0703_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [9] && _0303_;
  assign _0704_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [6] && _0645_;
  assign _0705_ = _0646_ && \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.priv_lvl_match_en_wb ;
  assign _0706_ = _0705_ && _0723_;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.etrigger_wb_i  = _0706_ && \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_interruptible ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata2_we_int  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.tdata2_we_i  && _0593_;
  assign _0707_ = ! \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.load_access  = ! \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_interruptible  = ! \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q ;
  assign _0708_ = _0598_ || _0599_;
  assign _0709_ = _0708_ || _0597_;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.priv_lvl_match_en_if  = _0653_ || _0654_;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.priv_lvl_match_en_ex  = _0664_ || _0665_;
  assign _0711_ = \cv32e40x_core_inst.load_store_unit_i.mpu_i.load_access  || _0612_;
  assign _0712_ = _0666_ || _0667_;
  assign _0710_ = _0599_ || _0597_;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.priv_lvl_match_en_wb  = _0703_ || _0704_;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata1_we_int  = _0652_ || \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata1_we_hit ;
  assign _0713_ = \cv32e40x_core_inst.cs_registers_i.csr_wdata_int  < 32'd1;
  assign _0714_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q  < \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q ;
  assign _0715_ = { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i [31:2], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_addr_low_lsb  } < \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q ;
  assign _0716_ = | \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [10:7];
  assign _0717_ = \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [10:7] != 4'h2;
  assign _0718_ = \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [10:7] != 4'h3;
  assign _0719_ = | { \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [25], \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [22] };
  assign _0720_ = { \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [25], \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [22] } != 2'h1;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_byte_addr_match[0] [3] = _0662_ ? 1'h1 : 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_byte_addr_match[0] [2] = _0661_ ? 1'h1 : 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_byte_addr_match[0] [1] = _0660_ ? 1'h1 : 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_byte_addr_match[0] [0] = _0659_ ? 1'h1 : 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_addr_low_lsb  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i [0] ? 2'h0 : _0587_;
  assign _0587_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i [1] ? 2'h1 : _0582_;
  assign _0582_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i [2] ? 2'h2 : _0579_;
  assign _0579_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i [3] ? 2'h3 : 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_addr_high_lsb  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i [3] ? 2'h3 : _0586_;
  assign _0586_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i [2] ? 2'h2 : _0581_;
  assign _0581_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i [1] ? 2'h1 : 2'h0;
  assign _0585_ = _0709_ ? \cv32e40x_core_inst.cs_registers_i.csr_wdata_int  : { 7'h00, \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [24], 12'h000, \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [11], 3'h0, \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [7:1], 1'h0 };
  assign _0589_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [112] ? 1'h1 : 1'h0;
  assign _0577_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [112] ? 1'h1 : _0580_[22];
  assign _0578_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [112] ? 1'h0 : _0580_[25];
  assign _0576_ = _0597_ ? _0578_ : _0580_[25];
  assign _0592_ = _0597_ ? _0577_ : _0580_[22];
  assign _0584_ = _0597_ ? _0589_ : 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.wr_data_i [25] = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [111] ? _0576_ : _0580_[25];
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.wr_data_i [22] = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [111] ? _0592_ : _0580_[22];
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata1_we_hit  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [111] ? _0584_ : 1'h0;
  assign _0591_ = _0721_ ? 32'd4160749568 : { 22'h160000, \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [9], 9'h001 };
  assign _0590_ = _0596_ ? _0591_ : 32'd4160749568;
  assign _0588_ = _0595_ ? { 6'h1a, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.mcontrol6_hit_resolved[0] [1], 2'h0, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.mcontrol6_hit_resolved[0] [0], 11'h002, _0724_, \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [6], 3'h0, \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [2:0] } : _0590_;
  assign _0583_ = _0594_ ? { 21'h050002, _0724_, \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [6], 3'h0, \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [2:0] } : _0588_;
  assign { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.wr_data_i [31:26], _0580_[25], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.wr_data_i [24:23], _0580_[22], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.wr_data_i [21:0] } = _0652_ ? _0583_ : \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q ;
  assign _0721_ = | { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [31:25], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [23:12], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [10:8], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q [0] };
  assign _0722_ = | \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_byte_addr_match[0] ;
  assign _0723_ = | \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.exception_match[0] ;
  assign _0724_ = _0650_ ? 4'h0 : \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [10:7];
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.mcontrol6_hit_resolved[0]  = _0651_ ? { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [25], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q [22] } : { \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [25], \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [22] };
  assign _0725_ = _0602_ ? _0647_ : _0714_;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.if_addr_match  = _0600_ ? _0601_ : _0725_;
  assign _0726_ = _0602_ ? _0648_ : _0715_;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_addr_match  = _0600_ ? _0663_ : _0726_;
  assign _0728_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [42] && _0738_;
  assign \cv32e40x_core_inst.ex_stage_i.instr_valid  = _0728_ && _0739_;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_valid_ex_i  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [173] && \cv32e40x_core_inst.ex_stage_i.instr_valid ;
  assign \cv32e40x_core_inst.ex_stage_i.csr_is_illegal  = \cv32e40x_core_inst.ex_stage_i.csr_illegal_i  && \cv32e40x_core_inst.ex_stage_i.instr_valid ;
  assign \cv32e40x_core_inst.ex_stage_i.forced_nop  = _0742_ && \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [42];
  assign _0729_ = \cv32e40x_core_inst.ex_stage_i.lsu_last_op_i  && \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [1];
  assign _0730_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_valid_i  && \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i ;
  assign _0731_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [350] && \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [352];
  assign _0732_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [351] && \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [352];
  assign _0733_ = _0732_ && \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_decision_ex_i ;
  assign _0734_ = \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i  && \cv32e40x_core_inst.ex_stage_i.lsu_ready_i ;
  assign _0735_ = _0734_ && \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i ;
  assign _0736_ = _0735_ && _0739_;
  assign _0737_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [173] && \cv32e40x_core_inst.ex_stage_i.lsu_valid_i ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_valid_i  = _0750_ && \cv32e40x_core_inst.ex_stage_i.instr_valid ;
  assign _0738_ = ! \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [14];
  assign _0739_ = ! \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [19];
  assign _0740_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [153] || \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [50];
  assign _0741_ = _0740_ || _0751_;
  assign _0742_ = _0741_ || \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [121];
  assign _0743_ = \cv32e40x_core_inst.ex_stage_i.csr_is_illegal  || \cv32e40x_core_inst.ex_stage_i.lsu_split_i ;
  assign _0744_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [153] || \cv32e40x_core_inst.ex_stage_i.csr_is_illegal ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_ready_i  = \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [14] || _0736_;
  assign _0745_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [352] || \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [176];
  assign _0746_ = _0745_ || \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [162];
  assign _0747_ = _0746_ || _0737_;
  assign _0748_ = _0747_ || \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [46];
  assign _0749_ = _0748_ || \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [45];
  assign _0750_ = _0749_ || \cv32e40x_core_inst.ex_stage_i.forced_nop ;
  assign _0751_ = | \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [49:48];
  assign _0752_ = \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i  ? 1'h0 : 1'hx;
  assign _0727_[53] = _0730_ ? 1'h1 : _0752_;
  assign _0753_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [176] ? \cv32e40x_core_inst.ex_stage_i.csr_rdata_i  : \cv32e40x_core_inst.ex_stage_i.alu_result ;
  assign \cv32e40x_core_inst.ex_stage_i.rf_wdata_o  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [352] ? \cv32e40x_core_inst.ex_stage_i.alu_result  : _0753_;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.last_op_ex_i  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [173] ? _0729_ : \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [1];
  assign _0754_ = _0743_ ? 1'h0 : \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [120];
  assign _0755_ = \cv32e40x_core_inst.ex_stage_i.csr_illegal_i  ? 1'h0 : \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [176];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.adder_result_expanded  = { 1'h0, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312], 1'h1 } + { 1'h0, \cv32e40x_core_inst.ex_stage_i.alu_i.adder_in_b [32:1], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [347] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.result_shnadd  = _0806_ + \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [311:280];
  assign _0756_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343] & \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [347];
  assign _0757_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [311] & \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [347];
  assign _0758_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312] & \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [311:280];
  assign _0759_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312] & _0767_;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.is_equal  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312] == \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [311:280];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.is_greater  = $signed({ _0756_, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312] }) > $signed({ _0757_, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [311:280] });
  assign _0763_ = ! \cv32e40x_core_inst.ex_stage_i.alu_i.is_equal ;
  assign _0764_ = ! _0765_;
  assign _0765_ = \cv32e40x_core_inst.ex_stage_i.alu_i.is_greater  || \cv32e40x_core_inst.ex_stage_i.alu_i.is_equal ;
  assign _0766_ = - { 1'h0, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [284:280] };
  assign _0767_ = ~ \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [311:280];
  assign _0768_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312] | \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [311:280];
  assign _0769_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312] | _0767_;
  function [31:0] _3057_;
    input [31:0] a;
    input [607:0] b;
    input [18:0] s;
    casez (s) // synopsys parallel_case
      19'b??????????????????1:
        _3057_ = b[31:0];
      19'b?????????????????1?:
        _3057_ = b[63:32];
      19'b????????????????1??:
        _3057_ = b[95:64];
      19'b???????????????1???:
        _3057_ = b[127:96];
      19'b??????????????1????:
        _3057_ = b[159:128];
      19'b?????????????1?????:
        _3057_ = b[191:160];
      19'b????????????1??????:
        _3057_ = b[223:192];
      19'b???????????1???????:
        _3057_ = b[255:224];
      19'b??????????1????????:
        _3057_ = b[287:256];
      19'b?????????1?????????:
        _3057_ = b[319:288];
      19'b????????1??????????:
        _3057_ = b[351:320];
      19'b???????1???????????:
        _3057_ = b[383:352];
      19'b??????1????????????:
        _3057_ = b[415:384];
      19'b?????1?????????????:
        _3057_ = b[447:416];
      19'b????1??????????????:
        _3057_ = b[479:448];
      19'b???1???????????????:
        _3057_ = b[511:480];
      19'b??1????????????????:
        _3057_ = b[543:512];
      19'b?1?????????????????:
        _3057_ = b[575:544];
      19'b1??????????????????:
        _3057_ = b[607:576];
      default:
        _3057_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.ex_stage_i.alu_result  = _3057_(32'd0, { _0758_, _0768_, _0814_, _0759_, _0769_, _0815_, \cv32e40x_core_inst.ex_stage_i.alu_i.adder_result_expanded [32:1], \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_tmp [31:0], 31'h00000000, _0764_, \cv32e40x_core_inst.ex_stage_i.alu_i.result_shnadd , 26'h0000000, \cv32e40x_core_inst.ex_stage_i.alu_i.div_clz_result_o , 26'h0000000, \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.result_o , \cv32e40x_core_inst.ex_stage_i.alu_i.min_minu_result , \cv32e40x_core_inst.ex_stage_i.alu_i.max_maxu_result , _0805_, _0805_, _0805_, _0805_, _0805_, _0805_, _0805_, _0805_, _0804_, _0804_, _0804_, _0804_, _0804_, _0804_, _0804_, _0804_, _0803_, _0803_, _0803_, _0803_, _0803_, _0803_, _0803_, _0803_, _0802_, _0802_, _0802_, _0802_, _0802_, _0802_, _0802_, _0802_, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319:312], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327:320], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [335:328], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:336], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319:312], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327:312], 16'h0000, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327:312] }, { _0795_, _0794_, _0793_, _0792_, _0791_, _0790_, _0789_, _0787_, _0785_, _0783_, _0781_, _0779_, _0778_, _0776_, _0774_, _0773_, _0772_, _0771_, _0770_ });
  assign _0770_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h15;
  assign _0771_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h14;
  assign _0772_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h12;
  assign _0773_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h34;
  assign _0774_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h32;
  assign _0776_ = | _0775_;
  assign _0775_[0] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h3e;
  assign _0775_[1] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h37;
  assign _0778_ = | _0777_;
  assign _0777_[0] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h3c;
  assign _0777_[1] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h35;
  assign _0779_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h23;
  assign _0781_ = | { _0780_[0], _0762_ };
  assign _0780_[0] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h20;
  assign _0762_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h28;
  assign _0783_ = | { _0782_[2], _0761_, _0760_ };
  assign _0760_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h22;
  assign _0761_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h24;
  assign _0782_[2] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h26;
  assign _0785_ = | _0784_;
  assign _0784_[0] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h1a;
  assign _0784_[1] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h13;
  assign _0787_ = | _0786_;
  assign _0786_[0] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h01;
  assign _0786_[1] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h05;
  assign _0786_[5] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h31;
  assign _0786_[6] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h29;
  assign _0786_[7] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h39;
  assign _0786_[8] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h3d;
  assign _0789_ = | _0788_;
  assign _0788_[0] = ! \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344];
  assign _0788_[1] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h08;
  assign _0790_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h2c;
  assign _0791_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h2e;
  assign _0792_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h2f;
  assign _0793_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h04;
  assign _0794_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h06;
  assign _0795_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h07;
  function [0:0] _3096_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _3096_ = b[0:0];
      3'b?1?:
        _3096_ = b[1:1];
      3'b1??:
        _3096_ = b[2:2];
      default:
        _3096_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_decision_ex_i  = _3096_(\cv32e40x_core_inst.ex_stage_i.alu_i.is_equal , { _0763_, _0765_, _0764_ }, { _0800_, _0799_, _0797_ });
  assign _0797_ = | _0796_;
  assign _0796_[0] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h1c;
  assign _0796_[1] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h16;
  assign _0799_ = | _0798_;
  assign _0798_[0] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h1d;
  assign _0798_[1] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h17;
  assign _0800_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h11;
  function [31:0] _3104_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3104_ = b[31:0];
      2'b1?:
        _3104_ = b[63:32];
      default:
        _3104_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_bb  = _3104_(32'd0, { \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312] }, { _0786_[2], _0801_ });
  assign _0801_ = | _0786_[4:3];
  assign _0786_[3] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h21;
  assign _0786_[4] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h25;
  assign _0786_[2] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344] == 6'h0d;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_shamt  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [346] ? _0766_ : { 1'h0, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [284:280] };
  assign _0802_ = | \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319:312];
  assign _0803_ = | \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327:320];
  assign _0804_ = | \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [335:328];
  assign _0805_ = | \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:336];
  assign _0806_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312] << _0813_;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.adder_in_b [32:1] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [347] ? _0767_ : \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [311:280];
  assign _0807_ = \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_shamt [5] ? { \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312], \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_bb  } : { \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_bb , \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312] };
  assign _0808_ = \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_shamt [4] ? { _0807_[47:0], _0807_[63:48] } : _0807_;
  assign _0809_ = \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_shamt [3] ? { _0808_[55:0], _0808_[63:56] } : _0808_;
  assign _0810_ = \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_shamt [2] ? { _0809_[59:0], _0809_[63:60] } : _0809_;
  assign _0811_ = \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_shamt [1] ? { _0810_[61:0], _0810_[63:62] } : _0810_;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_tmp  = \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_shamt [0] ? { _0811_[62:0], _0811_[63] } : _0811_;
  assign _0812_ = _0761_ ? 32'd2 : 32'd3;
  assign _0813_ = _0760_ ? 32'd1 : _0812_;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.min_minu_result  = \cv32e40x_core_inst.ex_stage_i.alu_i.is_greater  ? \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [311:280] : \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.max_maxu_result  = \cv32e40x_core_inst.ex_stage_i.alu_i.is_greater  ? \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312] : \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [311:280];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i  = _0762_ ? \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312] : { \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [312], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [313], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [314], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [315], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [316], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [317], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [318], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [320], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [321], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [322], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [323], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [324], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [325], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [326], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [328], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [329], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [330], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [331], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [332], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [333], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [334], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [335], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [336], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [337], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [338], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [339], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [340], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [341], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [342], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.div_clz_result_o  = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [0] ? { 1'h0, \cv32e40x_core_inst.ex_stage_i.alu_i.ff1_result  } : 6'h20;
  assign _0814_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312] ^ \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [311:280];
  assign _0815_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312] ^ _0767_;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [11:6] = { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [312] } + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [313] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [17:12] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [11:6] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [314] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [23:18] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [17:12] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [315] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [29:24] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [23:18] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [316] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [35:30] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [29:24] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [317] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [41:36] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [35:30] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [318] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [47:42] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [41:36] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [53:48] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [47:42] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [320] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [59:54] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [53:48] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [321] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [65:60] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [59:54] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [322] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [71:66] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [65:60] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [323] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [77:72] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [71:66] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [324] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [83:78] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [77:72] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [325] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [89:84] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [83:78] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [326] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [95:90] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [89:84] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [101:96] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [95:90] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [328] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [107:102] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [101:96] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [329] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [113:108] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [107:102] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [330] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [119:114] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [113:108] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [331] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [125:120] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [119:114] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [332] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [131:126] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [125:120] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [333] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [137:132] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [131:126] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [334] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [143:138] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [137:132] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [335] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [149:144] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [143:138] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [336] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [155:150] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [149:144] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [337] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [161:156] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [155:150] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [338] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [167:162] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [161:156] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [339] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [173:168] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [167:162] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [340] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [179:174] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [173:168] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [341] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [185:180] = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [179:174] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [342] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.result_o  = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [185:180] + { 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [0] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [1] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [2];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [1] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [3] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [4];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [2] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [5] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [6];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [3] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [7] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [8];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [4] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [9] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [10];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [5] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [11] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [12];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [6] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [13] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [14];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [7] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [15] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [16];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [8] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [17] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [18];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [9] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [19] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [20];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [10] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [21] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [22];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [11] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [23] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [24];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [12] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [25] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [26];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [13] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [27] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [28];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [14] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [29] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [30];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [15] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [0] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [1];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [16] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [2] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [3];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [17] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [4] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [5];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [18] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [6] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [7];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [19] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [8] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [9];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [20] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [10] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [11];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [21] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [12] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [13];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [22] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [14] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [15];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [23] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [16] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [17];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [24] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [18] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [19];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [25] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [20] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [21];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [26] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [22] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [23];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [27] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [24] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [25];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [28] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [26] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [27];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [29] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [28] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [29];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [30] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [30] | \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [31];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff1_result  = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [1] ? \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [9:5] : \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [14:10];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [9:5] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [3] ? \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [19:15] : \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [24:20];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [14:10] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [5] ? \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [29:25] : \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [34:30];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [19:15] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [7] ? \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [39:35] : \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [44:40];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [24:20] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [9] ? \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [49:45] : \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [54:50];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [29:25] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [11] ? \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [59:55] : \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [64:60];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [34:30] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [13] ? \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [69:65] : \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [74:70];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [39:35] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [15] ? \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [79:75] : \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [84:80];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [44:40] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [17] ? \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [89:85] : \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [94:90];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [49:45] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [19] ? \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [99:95] : \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [104:100];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [54:50] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [21] ? \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [109:105] : \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [114:110];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [59:55] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [23] ? \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [119:115] : \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [124:120];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [64:60] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [25] ? \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [129:125] : \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [134:130];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [69:65] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [27] ? \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [139:135] : \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [144:140];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [74:70] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [29] ? \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [149:145] : \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [154:150];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [79:75] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [0] ? 5'h00 : 5'h01;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [84:80] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [2] ? 5'h02 : 5'h03;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [89:85] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [4] ? 5'h04 : 5'h05;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [94:90] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [6] ? 5'h06 : 5'h07;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [99:95] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [8] ? 5'h08 : 5'h09;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [104:100] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [10] ? 5'h0a : 5'h0b;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [109:105] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [12] ? 5'h0c : 5'h0d;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [114:110] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [14] ? 5'h0e : 5'h0f;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [119:115] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [16] ? 5'h10 : 5'h11;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [124:120] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [18] ? 5'h12 : 5'h13;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [129:125] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [20] ? 5'h14 : 5'h15;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [134:130] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [22] ? 5'h16 : 5'h17;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [139:135] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [24] ? 5'h18 : 5'h19;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [144:140] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [26] ? 5'h1a : 5'h1b;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [149:145] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [28] ? 5'h1c : 5'h1d;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [154:150] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i [30] ? 5'h1e : 5'h1f;
  assign _0816_ = { \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [31:6], 6'h00 } + { 22'h000000, \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:170], 2'h0 };
  assign _0817_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [149:118] + { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:170], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [178], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [188:179], 1'h0 };
  assign _0818_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [149:118] + { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [165], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [188:183], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [169:166], 1'h0 };
  assign _0819_ = \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.jalr_fw_i  + { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:178] };
  function [31:0] _3227_;
    input [31:0] a;
    input [127:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _3227_ = b[31:0];
      4'b??1?:
        _3227_ = b[63:32];
      4'b?1??:
        _3227_ = b[95:64];
      4'b1???:
        _3227_ = b[127:96];
      default:
        _3227_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.bch_target  = _3227_(32'hxxxxxxxx, { _0816_, _0817_, _0818_, _0819_ }, { _0823_, _0822_, _0821_, _0820_ });
  assign _0820_ = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [35:34] == 2'h2;
  assign _0821_ = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [35:34] == 2'h3;
  assign _0822_ = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [35:34] == 2'h1;
  assign _0823_ = ! \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [35:34];
  assign _0824_ = \cv32e40x_core_inst.id_stage_i.decoder_i.deassert_we_i  || \cv32e40x_core_inst.id_stage_i.decoder_i.tbljmp_first_i ;
  assign _0825_ = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [8] ? 55'h027d4400000100 : { \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [54:9], 1'h0, \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [7:0] };
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_a_ctrl [8] ? _0825_ : { \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_a_ctrl [54:9], 1'h0, \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_a_ctrl [7:0] };
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [101] ? 55'h027d4400000100 : \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl_int ;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_a_ctrl  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [101] ? 55'h027d4400000100 : \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_a_ctrl_int ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.alu_en_id_i  = \cv32e40x_core_inst.id_stage_i.decoder_i.deassert_we_i  ? 1'h0 : \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [54];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sys_en_id_i  = \cv32e40x_core_inst.id_stage_i.decoder_i.deassert_we_i  ? 1'h0 : \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [9];
  assign \cv32e40x_core_inst.id_stage_i.lsu_en  = \cv32e40x_core_inst.id_stage_i.decoder_i.deassert_we_i  ? 1'h0 : \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [20];
  assign \cv32e40x_core_inst.id_stage_i.csr_en  = \cv32e40x_core_inst.id_stage_i.decoder_i.deassert_we_i  ? 1'h0 : \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [23];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.rf_we_o  = _0824_ ? 1'h0 : \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [24];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.illegal_insn_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.deassert_we_i  ? 1'h0 : \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [8];
  assign _0829_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172:170] == 3'h2;
  assign _0830_ = | \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178];
  function [13:0] _3245_;
    input [13:0] a;
    input [27:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3245_ = b[13:0];
      2'b1?:
        _3245_ = b[27:14];
      default:
        _3245_ = a;
    endcase
  endfunction
  assign _0827_[54:41] = _3245_(14'h013e, { _0828_[54:41], 14'h0132 }, { _0833_, _0277_ });
  function [1:0] _3246_;
    input [1:0] a;
    input [3:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3246_ = b[1:0];
      2'b1?:
        _3246_ = b[3:2];
      default:
        _3246_ = a;
    endcase
  endfunction
  assign _0827_[40:39] = _3246_(2'h2, { _0828_[40:39], 2'h0 }, { _0833_, _0277_ });
  function [0:0] _3247_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3247_ = b[0:0];
      2'b1?:
        _3247_ = b[1:1];
      default:
        _3247_ = a;
    endcase
  endfunction
  assign _0827_[26] = _3247_(1'h0, { _0828_[26], 1'h1 }, { _0833_, _0277_ });
  assign _0827_[38:27] = _0833_ ? _0828_[38:27] : 12'h880;
  function [0:0] _3249_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3249_ = b[0:0];
      2'b1?:
        _3249_ = b[1:1];
      default:
        _3249_ = a;
    endcase
  endfunction
  assign _0827_[19] = _3249_(1'h0, { _0828_[19], 1'h1 }, { _0833_, _0277_ });
  function [5:0] _3250_;
    input [5:0] a;
    input [11:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3250_ = b[5:0];
      2'b1?:
        _3250_ = b[11:6];
      default:
        _3250_ = a;
    endcase
  endfunction
  assign _0827_[25:20] = _3250_(6'h00, { _0828_[25:20], 6'h31 }, { _0833_, _0277_ });
  function [18:0] _3251_;
    input [18:0] a;
    input [37:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3251_ = b[18:0];
      2'b1?:
        _3251_ = b[37:19];
      default:
        _3251_ = a;
    endcase
  endfunction
  assign _0827_[18:0] = _3251_(19'h00100, { _0828_[18:0], 4'hb, \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:185], 10'h000 }, { _0833_, _0277_ });
  assign _0831_[0] = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:185] == 5'h01;
  assign _0831_[1] = ! \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:185];
  assign _0831_[2] = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:185] == 5'h04;
  assign _0831_[3] = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:185] == 5'h0c;
  assign _0831_[4] = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:185] == 5'h08;
  assign _0831_[5] = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:185] == 5'h10;
  assign _0831_[6] = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:185] == 5'h14;
  assign _0831_[7] = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:185] == 5'h18;
  assign _0831_[8] = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:185] == 5'h1c;
  assign _0832_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:185] == 5'h03;
  assign _0828_ = _0830_ ? 55'h027d4400000100 : { 40'h04ca88062b, \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:185], 10'h000 };
  assign _0833_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:185] == 5'h02;
  assign _0826_ = _0829_ ? _0827_ : 55'h027d4400000100;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_a_ctrl_int  = _0834_ ? _0826_ : 55'h027d4400000100;
  assign _0834_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [164:158] == 7'h2f;
  assign _0859_ = ! \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:183];
  assign _0860_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:183] == 7'h20;
  assign _0861_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:188] == 2'h3;
  assign _0862_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:188] == 2'h2;
  assign _0864_ = ! { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [169:165] };
  assign _0866_ = ! \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172];
  assign _0867_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172] || _0855_;
  assign _0868_ = _0856_ || _0857_;
  assign _0869_ = _0868_ || _0858_;
  assign _0870_ = _0861_ || _0862_;
  assign _0871_ = | \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172:170];
  assign _0872_ = | \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:183];
  function [0:0] _3279_;
    input [0:0] a;
    input [8:0] b;
    input [8:0] s;
    casez (s) // synopsys parallel_case
      9'b????????1:
        _3279_ = b[0:0];
      9'b???????1?:
        _3279_ = b[1:1];
      9'b??????1??:
        _3279_ = b[2:2];
      9'b?????1???:
        _3279_ = b[3:3];
      9'b????1????:
        _3279_ = b[4:4];
      9'b???1?????:
        _3279_ = b[5:5];
      9'b??1??????:
        _3279_ = b[6:6];
      9'b?1???????:
        _3279_ = b[7:7];
      9'b1????????:
        _3279_ = b[8:8];
      default:
        _3279_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl_int [54] = _3279_(1'h0, { _0847_[54], _0848_[54], _0849_[54], _0850_[54], 1'h1, _0851_[54], _0835_[54], _0838_[54], _0839_[54] }, { _0882_, _0881_, _0880_, _0879_, _0261_, _0876_, _0875_, _0874_, _0873_ });
  assign _0846_[20:0] = _0263_ ? 21'h000000 : 21'h000100;
  function [1:0] _3281_;
    input [1:0] a;
    input [5:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _3281_ = b[1:0];
      3'b?1?:
        _3281_ = b[3:2];
      3'b1??:
        _3281_ = b[5:4];
      default:
        _3281_ = a;
    endcase
  endfunction
  assign _0846_[22:21] = _3281_(2'h0, { 2'h1, _0906_, _0907_ }, { _0885_, _0884_, _0855_ });
  assign _0845_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172] ? 2'h2 : 2'h0;
  assign _0844_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172] ? 1'h0 : 1'h1;
  function [47:0] _3284_;
    input [47:0] a;
    input [143:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _3284_ = b[47:0];
      3'b?1?:
        _3284_ = b[95:48];
      3'b1??:
        _3284_ = b[143:96];
      default:
        _3284_ = a;
    endcase
  endfunction
  assign _0841_[54:7] = _3284_(48'h04fa88000002, { _0842_[54:7], _0843_[54:8], _0402_, 48'h04fa88000004 }, { _0889_, _0888_, _0276_ });
  function [0:0] _3285_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3285_ = b[0:0];
      2'b1?:
        _3285_ = b[1:1];
      default:
        _3285_ = a;
    endcase
  endfunction
  assign _0841_[5] = _3285_(1'h0, { 1'h1, _0842_[5] }, { _0891_, _0889_ });
  assign _0891_ = ! \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:178];
  function [0:0] _3287_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3287_ = b[0:0];
      2'b1?:
        _3287_ = b[1:1];
      default:
        _3287_ = a;
    endcase
  endfunction
  assign _0841_[6] = _3287_(1'h0, { 1'h1, _0842_[6] }, { _0890_, _0889_ });
  assign _0890_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:178] == 12'h001;
  assign _0841_[4:2] = _0889_ ? _0842_[4:2] : 3'h0;
  assign _0842_[2] = \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  ? 1'h0 : 1'h1;
  assign _0841_[1] = _0887_ ? _0842_[2] : 1'h0;
  assign _0887_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:178] == 12'h105;
  assign _0843_[54:8] = \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  ? 47'h027d44000002 : 47'h027d44000001;
  assign _0841_[0] = _0886_ ? _0842_[2] : 1'h0;
  assign _0886_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:178] == 12'h8c0;
  assign _0888_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:178] == 12'h7b2;
  assign _0842_[54:3] = \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  ? 52'h04fa880000020 : 52'h04fa880000040;
  assign _0889_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:178] == 12'h302;
  assign _0840_ = _0864_ ? _0841_ : 55'h027d4400000100;
  assign _0839_ = _0863_ ? _0840_ : _0846_;
  function [0:0] _3301_;
    input [0:0] a;
    input [6:0] b;
    input [6:0] s;
    casez (s) // synopsys parallel_case
      7'b??????1:
        _3301_ = b[0:0];
      7'b?????1?:
        _3301_ = b[1:1];
      7'b????1??:
        _3301_ = b[2:2];
      7'b???1???:
        _3301_ = b[3:3];
      7'b??1????:
        _3301_ = b[4:4];
      7'b?1?????:
        _3301_ = b[5:5];
      7'b1??????:
        _3301_ = b[6:6];
      default:
        _3301_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl_int [53] = _3301_(1'h0, { _0848_[53], _0849_[53], _0850_[53], _0851_[53], _0835_[53], _0838_[53], _0839_[53] }, { _0881_, _0880_, _0879_, _0876_, _0875_, _0874_, _0873_ });
  assign _0838_[4] = _0863_ ? 1'h1 : 1'h0;
  assign _0838_[3] = _0892_ ? 1'h1 : 1'h0;
  function [0:0] _3304_;
    input [0:0] a;
    input [8:0] b;
    input [8:0] s;
    casez (s) // synopsys parallel_case
      9'b????????1:
        _3304_ = b[0:0];
      9'b???????1?:
        _3304_ = b[1:1];
      9'b??????1??:
        _3304_ = b[2:2];
      9'b?????1???:
        _3304_ = b[3:3];
      9'b????1????:
        _3304_ = b[4:4];
      9'b???1?????:
        _3304_ = b[5:5];
      9'b??1??????:
        _3304_ = b[6:6];
      9'b?1???????:
        _3304_ = b[7:7];
      9'b1????????:
        _3304_ = b[8:8];
      default:
        _3304_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl_int [52] = _3304_(1'h0, { 1'h1, _0847_[54], _0848_[52], _0849_[52], _0850_[52], _0851_[52], _0835_[52], _0838_[52], _0839_[52] }, { _0883_, _0882_, _0881_, _0880_, _0879_, _0876_, _0875_, _0874_, _0873_ });
  assign _0837_[44:0] = _0266_ ? { 18'h02880, _0836_, 26'h3000000 } : 45'h1d4400000100;
  function [5:0] _3306_;
    input [5:0] a;
    input [53:0] b;
    input [8:0] s;
    casez (s) // synopsys parallel_case
      9'b????????1:
        _3306_ = b[5:0];
      9'b???????1?:
        _3306_ = b[11:6];
      9'b??????1??:
        _3306_ = b[17:12];
      9'b?????1???:
        _3306_ = b[23:18];
      9'b????1????:
        _3306_ = b[29:24];
      9'b???1?????:
        _3306_ = b[35:30];
      9'b??1??????:
        _3306_ = b[41:36];
      9'b?1???????:
        _3306_ = b[47:42];
      9'b1????????:
        _3306_ = b[53:48];
      default:
        _3306_ = a;
    endcase
  endfunction
  assign _0837_[50:45] = _3306_(6'h13, 54'h0021a1061c114d, { _0902_, _0901_, _0900_, _0898_, _0897_, _0896_, _0895_, _0894_, _0893_ });
  assign _0836_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [186] ? 1'h0 : 1'h1;
  assign _0835_ = _0870_ ? 55'h027d4400000100 : _0837_;
  function [0:0] _3309_;
    input [0:0] a;
    input [7:0] b;
    input [7:0] s;
    casez (s) // synopsys parallel_case
      8'b???????1:
        _3309_ = b[0:0];
      8'b??????1?:
        _3309_ = b[1:1];
      8'b?????1??:
        _3309_ = b[2:2];
      8'b????1???:
        _3309_ = b[3:3];
      8'b???1????:
        _3309_ = b[4:4];
      8'b??1?????:
        _3309_ = b[5:5];
      8'b?1??????:
        _3309_ = b[6:6];
      8'b1???????:
        _3309_ = b[7:7];
      default:
        _3309_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl_int [51] = _3309_(1'h0, { _0847_[54], _0848_[51], _0849_[51], _0850_[51], _0851_[51], _0835_[51], _0838_[51], _0839_[51] }, { _0882_, _0881_, _0880_, _0879_, _0876_, _0875_, _0874_, _0873_ });
  assign _0854_[44:0] = _0860_ ? 45'h034403000000 : 45'h1d4400000100;
  assign _0854_[50:45] = _0860_ ? 6'h0d : 6'h13;
  assign _0853_[54:51] = _0859_ ? 4'h8 : _0854_[54:51];
  assign _0853_[44:0] = _0859_ ? 45'h034403000000 : _0854_[44:0];
  assign _0853_[50:45] = _0859_ ? 6'h05 : _0854_[50:45];
  function [3:0] _3315_;
    input [3:0] a;
    input [11:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _3315_ = b[3:0];
      3'b?1?:
        _3315_ = b[7:4];
      3'b1??:
        _3315_ = b[11:8];
      default:
        _3315_ = a;
    endcase
  endfunction
  assign _0851_[54:51] = _3315_(4'hx, { 4'h8, _0852_[54:51], _0853_[54:51] }, { _0268_, _0892_, _0903_ });
  function [5:0] _3316_;
    input [5:0] a;
    input [47:0] b;
    input [7:0] s;
    casez (s) // synopsys parallel_case
      8'b???????1:
        _3316_ = b[5:0];
      8'b??????1?:
        _3316_ = b[11:6];
      8'b?????1??:
        _3316_ = b[17:12];
      8'b????1???:
        _3316_ = b[23:18];
      8'b???1????:
        _3316_ = b[29:24];
      8'b??1?????:
        _3316_ = b[35:30];
      8'b?1??????:
        _3316_ = b[41:36];
      8'b1???????:
        _3316_ = b[47:42];
      default:
        _3316_ = a;
    endcase
  endfunction
  assign _0851_[50:45] = _3316_(6'hxx, { 36'h01a4c4187, _0852_[50:45], _0853_[50:45] }, { _0863_, _0829_, _0858_, _0904_, _0857_, _0856_, _0892_, _0903_ });
  assign _0852_ = _0872_ ? 55'h027d4400000100 : 55'h40234403000000;
  function [44:0] _3318_;
    input [44:0] a;
    input [134:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _3318_ = b[44:0];
      3'b?1?:
        _3318_ = b[89:45];
      3'b1??:
        _3318_ = b[134:90];
      default:
        _3318_ = a;
    endcase
  endfunction
  assign _0851_[44:0] = _3318_(45'hxxxxxxxxxxxx, { 45'h034403000000, _0852_[44:0], _0853_[44:0] }, { _0268_, _0892_, _0903_ });
  assign _0858_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172:170] == 3'h3;
  function [5:0] _3320_;
    input [5:0] a;
    input [53:0] b;
    input [8:0] s;
    casez (s) // synopsys parallel_case
      9'b????????1:
        _3320_ = b[5:0];
      9'b???????1?:
        _3320_ = b[11:6];
      9'b??????1??:
        _3320_ = b[17:12];
      9'b?????1???:
        _3320_ = b[23:18];
      9'b????1????:
        _3320_ = b[29:24];
      9'b???1?????:
        _3320_ = b[35:30];
      9'b??1??????:
        _3320_ = b[41:36];
      9'b?1???????:
        _3320_ = b[47:42];
      9'b1????????:
        _3320_ = b[53:48];
      default:
        _3320_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl_int [50:45] = _3320_(6'h13, { _0847_[50:45], _0848_[50:45], _0849_[50:45], _0850_[50:45], 6'h00, _0851_[50:45], _0835_[50:45], _0838_[50:45], _0839_[50:45] }, { _0882_, _0881_, _0880_, _0879_, _0261_, _0876_, _0875_, _0874_, _0873_ });
  function [23:0] _3321_;
    input [23:0] a;
    input [215:0] b;
    input [8:0] s;
    casez (s) // synopsys parallel_case
      9'b????????1:
        _3321_ = b[23:0];
      9'b???????1?:
        _3321_ = b[47:24];
      9'b??????1??:
        _3321_ = b[71:48];
      9'b?????1???:
        _3321_ = b[95:72];
      9'b????1????:
        _3321_ = b[119:96];
      9'b???1?????:
        _3321_ = b[143:120];
      9'b??1??????:
        _3321_ = b[167:144];
      9'b?1???????:
        _3321_ = b[191:168];
      9'b1????????:
        _3321_ = b[215:192];
      default:
        _3321_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl_int [23:0] = _3321_(24'h000100, { _0847_[23:0], _0848_[23:0], _0849_[23:0], _0850_[23:0], 24'h000000, _0851_[23:0], _0835_[23:0], _0838_[23:3], 3'h0, _0839_[23:0] }, { _0882_, _0881_, _0880_, _0879_, _0261_, _0876_, _0875_, _0874_, _0873_ });
  function [1:0] _3322_;
    input [1:0] a;
    input [19:0] b;
    input [9:0] s;
    casez (s) // synopsys parallel_case
      10'b?????????1:
        _3322_ = b[1:0];
      10'b????????1?:
        _3322_ = b[3:2];
      10'b???????1??:
        _3322_ = b[5:4];
      10'b??????1???:
        _3322_ = b[7:6];
      10'b?????1????:
        _3322_ = b[9:8];
      10'b????1?????:
        _3322_ = b[11:10];
      10'b???1??????:
        _3322_ = b[13:12];
      10'b??1???????:
        _3322_ = b[15:14];
      10'b?1????????:
        _3322_ = b[17:16];
      10'b1?????????:
        _3322_ = b[19:18];
      default:
        _3322_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl_int [44:43] = _3322_(2'h3, { _0847_[44:43], _0848_[44:43], _0849_[44:43], _0850_[44:43], 4'h9, _0851_[44:43], _0835_[44:43], _0838_[44:43], _0839_[44:43] }, { _0882_, _0881_, _0880_, _0879_, _0878_, _0267_, _0876_, _0875_, _0874_, _0873_ });
  function [0:0] _3323_;
    input [0:0] a;
    input [6:0] b;
    input [6:0] s;
    casez (s) // synopsys parallel_case
      7'b??????1:
        _3323_ = b[0:0];
      7'b?????1?:
        _3323_ = b[1:1];
      7'b????1??:
        _3323_ = b[2:2];
      7'b???1???:
        _3323_ = b[3:3];
      7'b??1????:
        _3323_ = b[4:4];
      7'b?1?????:
        _3323_ = b[5:5];
      7'b1??????:
        _3323_ = b[6:6];
      default:
        _3323_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl_int [38] = _3323_(1'h1, { _0848_[38], _0849_[38], _0850_[38], _0851_[38], _0835_[38], _0838_[38], _0839_[38] }, { _0881_, _0880_, _0879_, _0876_, _0875_, _0874_, _0873_ });
  assign _0848_[44:0] = _0265_ ? 45'h00cc06000000 : 45'h1d4400000100;
  function [5:0] _3325_;
    input [5:0] a;
    input [35:0] b;
    input [5:0] s;
    casez (s) // synopsys parallel_case
      6'b?????1:
        _3325_ = b[5:0];
      6'b????1?:
        _3325_ = b[11:6];
      6'b???1??:
        _3325_ = b[17:12];
      6'b??1???:
        _3325_ = b[23:18];
      6'b?1????:
        _3325_ = b[29:24];
      6'b1?????:
        _3325_ = b[35:30];
      default:
        _3325_ = a;
    endcase
  endfunction
  assign _0848_[50:45] = _3325_(6'h13, 36'h41171d597, { _0863_, _0892_, _0904_, _0903_, _0857_, _0856_ });
  function [0:0] _3326_;
    input [0:0] a;
    input [6:0] b;
    input [6:0] s;
    casez (s) // synopsys parallel_case
      7'b??????1:
        _3326_ = b[0:0];
      7'b?????1?:
        _3326_ = b[1:1];
      7'b????1??:
        _3326_ = b[2:2];
      7'b???1???:
        _3326_ = b[3:3];
      7'b??1????:
        _3326_ = b[4:4];
      7'b?1?????:
        _3326_ = b[5:5];
      7'b1??????:
        _3326_ = b[6:6];
      default:
        _3326_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl_int [26] = _3326_(1'h0, { _0848_[26], _0849_[26], _0850_[26], _0851_[26], _0835_[26], _0838_[26], _0839_[26] }, { _0881_, _0880_, _0879_, _0876_, _0875_, _0874_, _0873_ });
  assign _0847_[35:34] = _0871_ ? 2'h1 : 2'h2;
  assign _0847_[44:43] = _0871_ ? 2'h3 : 2'h1;
  assign _0847_[42:41] = _0871_ ? 2'h2 : 2'h1;
  assign _0847_[54] = _0871_ ? 1'h0 : 1'h1;
  assign _0847_[50:45] = _0871_ ? 6'h13 : 6'h00;
  assign _0847_[37:36] = _0871_ ? 2'h0 : 2'h3;
  assign _0847_[23:0] = _0871_ ? 24'h000100 : 24'h000000;
  function [0:0] _3334_;
    input [0:0] a;
    input [7:0] b;
    input [7:0] s;
    casez (s) // synopsys parallel_case
      8'b???????1:
        _3334_ = b[0:0];
      8'b??????1?:
        _3334_ = b[1:1];
      8'b?????1??:
        _3334_ = b[2:2];
      8'b????1???:
        _3334_ = b[3:3];
      8'b???1????:
        _3334_ = b[4:4];
      8'b??1?????:
        _3334_ = b[5:5];
      8'b?1??????:
        _3334_ = b[6:6];
      8'b1???????:
        _3334_ = b[7:7];
      default:
        _3334_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl_int [25] = _3334_(1'h0, { _0847_[54], _0848_[25], _0849_[25], _0850_[25], _0851_[25], _0835_[25], _0838_[25], _0839_[25] }, { _0882_, _0881_, _0880_, _0879_, _0876_, _0875_, _0874_, _0873_ });
  assign _0837_[54:51] = _0266_ ? 4'h8 : 4'h0;
  assign _0893_ = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [188:183], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172:170] } == 9'h105;
  assign _0894_ = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [188:183], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172:170] } == 9'h005;
  assign _0895_ = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [188:183], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172:170] } == 9'h001;
  assign _0896_ = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [188:183], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172:170] } == 9'h007;
  assign _0897_ = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [188:183], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172:170] } == 9'h006;
  assign _0898_ = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [188:183], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172:170] } == 9'h004;
  assign _0899_ = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [188:183], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172:170] } == 9'h003;
  assign _0900_ = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [188:183], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172:170] } == 9'h002;
  assign _0901_ = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [188:183], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172:170] } == 9'h100;
  assign _0902_ = ! { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [188:183], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172:170] };
  assign _0854_[54:51] = _0860_ ? 4'h8 : 4'h0;
  assign _0849_ = _0867_ ? 55'h027d4400000100 : { 36'h04c4a80c3, \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [171:170], 17'h00000 };
  assign _0848_[54:51] = _0265_ ? 4'hc : 4'h0;
  assign _0856_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172:170] == 3'h7;
  assign _0857_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172:170] == 3'h6;
  assign _0903_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172:170] == 3'h5;
  assign _0904_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172:170] == 3'h4;
  assign _0850_ = _0869_ ? 55'h027d4400000100 : { 36'h04c688062, \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [171:170], _0866_, 16'h0000 };
  function [0:0] _3354_;
    input [0:0] a;
    input [8:0] b;
    input [8:0] s;
    casez (s) // synopsys parallel_case
      9'b????????1:
        _3354_ = b[0:0];
      9'b???????1?:
        _3354_ = b[1:1];
      9'b??????1??:
        _3354_ = b[2:2];
      9'b?????1???:
        _3354_ = b[3:3];
      9'b????1????:
        _3354_ = b[4:4];
      9'b???1?????:
        _3354_ = b[5:5];
      9'b??1??????:
        _3354_ = b[6:6];
      9'b?1???????:
        _3354_ = b[7:7];
      9'b1????????:
        _3354_ = b[8:8];
      default:
        _3354_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl_int [24] = _3354_(1'h0, { _0847_[54], _0848_[24], _0849_[24], _0850_[24], 1'h1, _0851_[24], _0835_[24], _0838_[24], _0839_[24] }, { _0882_, _0881_, _0880_, _0879_, _0261_, _0876_, _0875_, _0874_, _0873_ });
  function [1:0] _3355_;
    input [1:0] a;
    input [13:0] b;
    input [6:0] s;
    casez (s) // synopsys parallel_case
      7'b??????1:
        _3355_ = b[1:0];
      7'b?????1?:
        _3355_ = b[3:2];
      7'b????1??:
        _3355_ = b[5:4];
      7'b???1???:
        _3355_ = b[7:6];
      7'b??1????:
        _3355_ = b[9:8];
      7'b?1?????:
        _3355_ = b[11:10];
      7'b1??????:
        _3355_ = b[13:12];
      default:
        _3355_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl_int [40:39] = _3355_(2'h2, { _0848_[40:39], _0849_[40:39], _0850_[40:39], _0851_[40:39], _0835_[40:39], _0838_[40:39], _0839_[40:39] }, { _0881_, _0880_, _0879_, _0876_, _0875_, _0874_, _0873_ });
  function [1:0] _3356_;
    input [1:0] a;
    input [17:0] b;
    input [8:0] s;
    casez (s) // synopsys parallel_case
      9'b????????1:
        _3356_ = b[1:0];
      9'b???????1?:
        _3356_ = b[3:2];
      9'b??????1??:
        _3356_ = b[5:4];
      9'b?????1???:
        _3356_ = b[7:6];
      9'b????1????:
        _3356_ = b[9:8];
      9'b???1?????:
        _3356_ = b[11:10];
      9'b??1??????:
        _3356_ = b[13:12];
      9'b?1???????:
        _3356_ = b[15:14];
      9'b1????????:
        _3356_ = b[17:16];
      default:
        _3356_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl_int [35:34] = _3356_(2'h1, { _0905_, _0847_[35:34], _0848_[35:34], _0849_[35:34], _0850_[35:34], _0851_[35:34], _0835_[35:34], _0838_[35:34], _0839_[35:34] }, { _0883_, _0882_, _0881_, _0880_, _0879_, _0876_, _0875_, _0874_, _0873_ });
  assign _0838_[54:5] = _0264_ ? 50'h013ea20000010 : 50'h013ea20000008;
  assign _0892_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172:170] == 3'h1;
  assign _0863_ = ! \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [172:170];
  assign _0846_[54:23] = _0263_ ? { 10'h013, _0845_, 17'h0c100, _0844_, 2'h3 } : 32'd83527680;
  assign _0855_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [171:170] == 2'h3;
  assign _0884_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [171:170] == 2'h2;
  assign _0885_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [171:170] == 2'h1;
  function [6:0] _3364_;
    input [6:0] a;
    input [48:0] b;
    input [6:0] s;
    casez (s) // synopsys parallel_case
      7'b??????1:
        _3364_ = b[6:0];
      7'b?????1?:
        _3364_ = b[13:7];
      7'b????1??:
        _3364_ = b[20:14];
      7'b???1???:
        _3364_ = b[27:21];
      7'b??1????:
        _3364_ = b[34:28];
      7'b?1?????:
        _3364_ = b[41:35];
      7'b1??????:
        _3364_ = b[48:42];
      default:
        _3364_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl_int [33:27] = _3364_(7'h00, { _0848_[33:27], _0849_[33:27], _0850_[33:27], _0851_[33:27], _0835_[33:27], _0838_[33:27], _0839_[33:27] }, { _0881_, _0880_, _0879_, _0876_, _0875_, _0874_, _0873_ });
  function [1:0] _3365_;
    input [1:0] a;
    input [19:0] b;
    input [9:0] s;
    casez (s) // synopsys parallel_case
      10'b?????????1:
        _3365_ = b[1:0];
      10'b????????1?:
        _3365_ = b[3:2];
      10'b???????1??:
        _3365_ = b[5:4];
      10'b??????1???:
        _3365_ = b[7:6];
      10'b?????1????:
        _3365_ = b[9:8];
      10'b????1?????:
        _3365_ = b[11:10];
      10'b???1??????:
        _3365_ = b[13:12];
      10'b??1???????:
        _3365_ = b[15:14];
      10'b?1????????:
        _3365_ = b[17:16];
      10'b1?????????:
        _3365_ = b[19:18];
      default:
        _3365_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl_int [37:36] = _3365_(2'h0, { 2'h3, _0847_[37:36], _0848_[37:36], _0849_[37:36], _0850_[37:36], 2'h2, _0851_[37:36], _0835_[37:36], _0838_[37:36], _0839_[37:36] }, { _0883_, _0882_, _0881_, _0880_, _0879_, _0262_, _0876_, _0875_, _0874_, _0873_ });
  assign _0882_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [164:158] == 7'h67;
  assign _0883_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [164:158] == 7'h6f;
  function [1:0] _3368_;
    input [1:0] a;
    input [17:0] b;
    input [8:0] s;
    casez (s) // synopsys parallel_case
      9'b????????1:
        _3368_ = b[1:0];
      9'b???????1?:
        _3368_ = b[3:2];
      9'b??????1??:
        _3368_ = b[5:4];
      9'b?????1???:
        _3368_ = b[7:6];
      9'b????1????:
        _3368_ = b[9:8];
      9'b???1?????:
        _3368_ = b[11:10];
      9'b??1??????:
        _3368_ = b[13:12];
      9'b?1???????:
        _3368_ = b[15:14];
      9'b1????????:
        _3368_ = b[17:16];
      default:
        _3368_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl_int [42:41] = _3368_(2'h2, { _0847_[42:41], _0848_[42:41], _0849_[42:41], _0850_[42:41], 2'h1, _0851_[42:41], _0835_[42:41], _0838_[42:41], _0839_[42:41] }, { _0882_, _0881_, _0880_, _0879_, _0261_, _0876_, _0875_, _0874_, _0873_ });
  assign _0873_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [164:158] == 7'h73;
  assign _0874_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [164:158] == 7'h0f;
  assign _0875_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [164:158] == 7'h33;
  assign _0876_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [164:158] == 7'h13;
  assign _0877_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [164:158] == 7'h17;
  assign _0878_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [164:158] == 7'h37;
  assign _0879_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [164:158] == 7'h03;
  assign _0880_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [164:158] == 7'h23;
  assign _0881_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [164:158] == 7'h63;
  assign _0905_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [151] ? 2'h0 : 2'h1;
  assign _0906_ = _0865_ ? 2'h0 : 2'h2;
  assign _0907_ = _0865_ ? 2'h0 : 2'h3;
  assign _0938_ = ! \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15:8];
  assign _0939_ = ! \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:10];
  assign _0940_ = ! { \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:5] };
  assign _0941_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:10] == 5'h02;
  assign _0942_ = ! \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:5];
  assign _0943_ = ! \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9];
  assign _0944_ = ! \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [18];
  assign _0945_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [4:3] != 2'h3;
  assign _0946_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [18:16] == 3'h4;
  assign _0924_ = _0939_ ? 32'd1048691 : { 12'h000, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:10], 15'h00e7 };
  assign _0923_ = _0942_ ? _0924_ : { 7'h00, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:5], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:10], 3'h0, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:10], 7'h33 };
  assign _0916_ = _0939_ ? 1'h1 : 1'h0;
  assign _0922_ = _0939_ ? { 7'h00, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:5], 8'h00, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:10], 7'h33 } : { 12'h000, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:10], 15'h0067 };
  assign _0919_ = _0942_ ? _0916_ : 1'h0;
  assign _0921_ = _0942_ ? _0922_ : { 7'h00, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:5], 8'h00, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:10], 7'h33 };
  assign _0918_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15] ? 1'h0 : _0919_;
  assign _0920_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15] ? _0923_ : _0921_;
  assign _0948_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [18:16] == 3'h2;
  assign _0949_ = ! \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [18:16];
  function [0:0] _3400_;
    input [0:0] a;
    input [4:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        _3400_ = b[0:0];
      5'b???1?:
        _3400_ = b[1:1];
      5'b??1??:
        _3400_ = b[2:2];
      5'b?1???:
        _3400_ = b[3:3];
      5'b1????:
        _3400_ = b[4:4];
      default:
        _3400_ = a;
    endcase
  endfunction
  assign _0915_ = _3400_(1'hx, { _0909_, _0916_, _0918_, 2'h1 }, { _0949_, _0948_, _0946_, _0952_, _0951_ });
  assign _0951_ = | _0950_;
  assign _0950_[0] = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [18:16] == 3'h1;
  assign _0950_[1] = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [18:16] == 3'h3;
  assign _0950_[3] = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [18:16] == 3'h7;
  assign _0952_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [18:16] == 3'h6;
  function [31:0] _3406_;
    input [31:0] a;
    input [127:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _3406_ = b[31:0];
      4'b??1?:
        _3406_ = b[63:32];
      4'b?1??:
        _3406_ = b[95:64];
      4'b1???:
        _3406_ = b[127:96];
      default:
        _3406_ = a;
    endcase
  endfunction
  assign _0917_ = _3406_(32'hxxxxxxxx, { 7'h00, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:5], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:10], 3'h1, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:10], 7'h13, _0920_, 4'h0, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [11:10], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:5], 8'h12, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:12], 13'h0230, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [6:5], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:7], 10'h012, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:10], 7'h03 }, { _0949_, _0946_, _0952_, _0250_ });
  assign _0953_ = { \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:8] } == 3'h7;
  assign _0954_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:13] == 2'h3;
  assign _0955_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [4:3] == 2'h1;
  function [31:0] _3410_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3410_ = b[31:0];
      2'b1?:
        _3410_ = b[63:32];
      default:
        _3410_ = a;
    endcase
  endfunction
  assign _0914_ = _3410_({ 9'h001, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [7:5], 2'h1, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 5'h1d, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 7'h33 }, { 14'h03fd, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 5'h1d, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 21'h04fffd, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 5'h11, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 7'h13 }, { _0958_, _0957_ });
  assign _0957_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [7:5] == 3'h5;
  assign _0912_ = _0243_ ? 1'h0 : 1'h1;
  assign _0959_ = { \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:8] } == 3'h6;
  function [31:0] _3414_;
    input [31:0] a;
    input [159:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        _3414_ = b[31:0];
      5'b???1?:
        _3414_ = b[63:32];
      5'b??1??:
        _3414_ = b[95:64];
      5'b?1???:
        _3414_ = b[127:96];
      5'b1????:
        _3414_ = b[159:128];
      default:
        _3414_ = a;
    endcase
  endfunction
  assign _0913_ = _3414_(32'hxxxxxxxx, { 9'h081, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [7:5], 2'h1, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 5'h01, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 16'h6601, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [7:5], 2'h1, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 5'h11, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 16'h6601, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [7:5], 2'h1, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 5'h19, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 7'h33, _0914_, 9'h001, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [7:5], 2'h1, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 5'h1d, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 7'h33 }, { _0964_, _0963_, _0962_, _0953_, _0244_ });
  assign _0960_[0] = { \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:8] } == 3'h4;
  assign _0960_[1] = { \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:8] } == 3'h5;
  assign _0961_ = { \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:8] } == 3'h3;
  assign _0962_ = { \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:8] } == 3'h2;
  assign _0963_ = { \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:8] } == 3'h1;
  assign _0964_ = ! { \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:8] };
  function [0:0] _3421_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _3421_ = b[0:0];
      3'b?1?:
        _3421_ = b[1:1];
      3'b1??:
        _3421_ = b[2:2];
      default:
        _3421_ = a;
    endcase
  endfunction
  assign _0911_ = _3421_(1'hx, { 1'h0, _0912_, 1'h1 }, { _0246_, _0953_, _0245_ });
  assign _0966_ = | _0965_;
  assign _0965_[0] = ! \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:13];
  assign _0965_[1] = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:13] == 2'h1;
  assign _0909_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15] ? 1'h1 : 1'h0;
  function [0:0] _3426_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _3426_ = b[0:0];
      3'b?1?:
        _3426_ = b[1:1];
      3'b1??:
        _3426_ = b[2:2];
      default:
        _3426_ = a;
    endcase
  endfunction
  assign _0908_ = _3426_(1'hx, { _0909_, 1'h0, _0911_ }, { _0966_, _0967_, _0954_ });
  assign _0967_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:13] == 2'h2;
  function [31:0] _3428_;
    input [31:0] a;
    input [95:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _3428_ = b[31:0];
      3'b?1?:
        _3428_ = b[63:32];
      3'b1??:
        _3428_ = b[95:64];
      default:
        _3428_ = a;
    endcase
  endfunction
  assign _0910_ = _3428_(32'hxxxxxxxx, { 1'h0, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [13], 5'h00, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:5], 2'h1, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 5'h15, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 7'h13, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:5], 2'h1, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 5'h1d, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 7'h13, _0913_ }, { _0966_, _0967_, _0954_ });
  assign _0937_ = _0941_ ? { \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [7:6], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [8], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [5], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9], 24'h010113 } : { \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:5], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:10], 7'h37 };
  assign _0936_ = _0940_ ? 1'h1 : 1'h0;
  assign _0935_ = _0940_ ? { \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:5], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:10], 7'h37 } : _0937_;
  function [31:0] _3432_;
    input [31:0] a;
    input [191:0] b;
    input [5:0] s;
    casez (s) // synopsys parallel_case
      6'b?????1:
        _3432_ = b[31:0];
      6'b????1?:
        _3432_ = b[63:32];
      6'b???1??:
        _3432_ = b[95:64];
      6'b??1???:
        _3432_ = b[127:96];
      6'b?1????:
        _3432_ = b[159:128];
      6'b1?????:
        _3432_ = b[191:160];
      default:
        _3432_ = a;
    endcase
  endfunction
  assign _0932_ = _3432_(32'hxxxxxxxx, { \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:5], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:10], 3'h0, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:10], 7'h13, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [11], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [13:12], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [10], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [5], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [8:6], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], 4'h0, _0944_, 7'h6f, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:5], 8'h00, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:10], 7'h13, _0935_, _0910_, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:8], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [5], 7'h01, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 2'h0, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [16], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:13], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [7:6], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], 7'h63 }, { _0949_, _0969_, _0948_, _0950_[1], _0946_, _0968_ });
  assign _0968_ = | { _0950_[3], _0952_ };
  assign _0969_ = | { _0950_[2], _0950_[0] };
  function [0:0] _3435_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _3435_ = b[0:0];
      3'b?1?:
        _3435_ = b[1:1];
      3'b1??:
        _3435_ = b[2:2];
      default:
        _3435_ = a;
    endcase
  endfunction
  assign _0934_ = _3435_(1'hx, { _0936_, _0908_, 1'h0 }, { _0950_[1], _0946_, _0247_ });
  assign _0933_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9] ? 1'h1 : 1'h0;
  assign _0971_ = ! \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [4:3];
  function [31:0] _3438_;
    input [31:0] a;
    input [95:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _3438_ = b[31:0];
      3'b?1?:
        _3438_ = b[63:32];
      3'b1??:
        _3438_ = b[95:64];
      default:
        _3438_ = a;
    endcase
  endfunction
  assign _0930_ = _3438_({ 9'h001, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [7:5], 2'h1, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 6'h08, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [8], 8'h23 }, { 10'h000, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [8], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9], 2'h1, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 5'h11, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [7:5], 17'h00c00, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [8], 3'h1, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], _0943_, 4'h5, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [7:5], 16'h0601, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [7:5], 2'h1, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 6'h00, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [8], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9], 7'h23 }, { _0974_, _0973_, _0972_ });
  assign _0972_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15:13] == 3'h2;
  assign _0973_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15:13] == 3'h1;
  function [0:0] _3441_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3441_ = b[0:0];
      2'b1?:
        _3441_ = b[1:1];
      default:
        _3441_ = a;
    endcase
  endfunction
  assign _0931_ = _3441_(1'h1, { 1'h0, _0933_ }, { _0248_, _0970_ });
  assign _0929_ = _0938_ ? 1'h1 : 1'h0;
  function [0:0] _3443_;
    input [0:0] a;
    input [3:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _3443_ = b[0:0];
      4'b??1?:
        _3443_ = b[1:1];
      4'b?1??:
        _3443_ = b[2:2];
      4'b1???:
        _3443_ = b[3:3];
      default:
        _3443_ = a;
    endcase
  endfunction
  assign _0927_ = _3443_(1'hx, { _0929_, 1'h0, _0931_, 1'h1 }, { _0949_, _0249_, _0946_, _0951_ });
  function [31:0] _3444_;
    input [31:0] a;
    input [127:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _3444_ = b[31:0];
      4'b??1?:
        _3444_ = b[63:32];
      4'b?1??:
        _3444_ = b[95:64];
      4'b1???:
        _3444_ = b[127:96];
      default:
        _3444_ = a;
    endcase
  endfunction
  assign _0928_ = _3444_(32'hxxxxxxxx, { 2'h0, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [13:10], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15:14], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [8], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9], 12'h041, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [7:5], 12'h260, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [8], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15], 2'h1, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [7:5], 2'h1, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 3'h2, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [14:13], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9], 9'h023, _0930_, 5'h00, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [8], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15:13], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9], 4'h1, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10], 5'h09, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [7:5], 7'h03 }, { _0949_, _0952_, _0946_, _0250_ });
  function [0:0] _3445_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _3445_ = b[0:0];
      3'b?1?:
        _3445_ = b[1:1];
      3'b1??:
        _3445_ = b[2:2];
      default:
        _3445_ = a;
    endcase
  endfunction
  assign _0925_ = _3445_(1'h0, { _0927_, _0934_, _0915_ }, { _0971_, _0955_, _0947_ });
  function [31:0] _3446_;
    input [31:0] a;
    input [95:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _3446_ = b[31:0];
      3'b?1?:
        _3446_ = b[63:32];
      3'b1??:
        _3446_ = b[95:64];
      default:
        _3446_ = a;
    endcase
  endfunction
  assign _0926_ = _3446_(\cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [34:3], { _0928_, _0932_, _0917_ }, { _0971_, _0955_, _0947_ });
  assign \cv32e40x_core_inst.if_stage_i.instr_compressed  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i  ? 1'h0 : _0945_;
  assign \cv32e40x_core_inst.if_stage_i.illegal_c_insn  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i  ? 1'h0 : _0925_;
  assign \cv32e40x_core_inst.if_stage_i.instr_decompressed [34:3] = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i  ? \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [34:3] : _0926_;
  assign _1056_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr_cnt_q  + 1'h1;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_tmp_43B39  = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_get_stack_adj_base$func$preprocessed.v:9548$2276.$result  + { 6'h00, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [6:5], 4'h0 };
  assign _1057_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr_cnt_q  + 12'h001;
  assign _1058_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr_cnt_q  + 5'h01;
  assign _0947_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [4:3] == 2'h2;
  assign _0950_[2] = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [18:16] == 3'h5;
  assign _1059_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:8] == 2'h3;
  assign _1060_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:8] == 2'h1;
  assign _1061_ = ! \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:11];
  assign _1062_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:11] == 2'h2;
  assign _1063_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_pushpop_reg_length$func$preprocessed.v:9522$2275.$result  == 4'h1;
  assign _1064_ = ! \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10];
  assign _1065_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr_cnt_q  == _1113_;
  assign _1066_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_instr  == 4'h4;
  assign _1067_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_instr  == 4'h3;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.pushpop_legal_rlist  = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [10:7] > 4'h3;
  assign _1068_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_pushpop_reg_length$func$preprocessed.v:9522$2275.$result  > 32'd1;
  assign _1069_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.valid_o  && \cv32e40x_core_inst.controller_i.controller_fsm_i.id_ready_i ;
  assign _1070_ = _1075_ && _1076_;
  assign _1071_ = _1081_ && \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.valid_i ;
  assign _1072_ = _1071_ && _1077_;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.valid_o  = _1072_ && _1078_;
  assign _1073_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.id_ready_i  && _1077_;
  assign _1074_ = _1079_ && _1077_;
  assign _1075_ = ! \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_tbljmp_o ;
  assign _1076_ = ! \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_tbljmp_ptr_q ;
  assign _1077_ = ! \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.halt_i ;
  assign _1078_ = ! \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16];
  assign _1079_ = ! \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.valid_o ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i  = _1080_ || \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_tbljmp_ptr_q ;
  assign _1081_ = _1084_ || \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_tbljmp_ptr_q ;
  assign _1082_ = _1074_ || \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16];
  assign _1083_ = _1073_ || \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16];
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.dmove_legal_dest  = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10] != \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [7:5];
  assign _1084_ = | \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_instr ;
  assign _1085_ = | \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_tmp_0F807 [4:2];
  assign _1086_ = | \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:11];
  assign _1087_ = | \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [7:6];
  assign _1088_ = - { _1057_[9:0], 2'h0 };
  assign _1089_ = - \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_tmp_43B39 ;
  assign _1037_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_store  ? _1044_ : _1052_;
  assign _1031_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_store  ? _1039_ : _1050_;
  assign _1010_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_store  ? 1'h0 : _1021_;
  assign _1027_ = _1068_ ? 4'h2 : 4'h5;
  assign _1020_ = _1068_ ? { \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.decode [16:5], 8'h12, _0996_, 7'h03 } : { \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.decode [16:5], 20'h12083 };
  assign _1017_ = _1063_ ? 4'h4 : _1027_;
  assign _1009_ = _1063_ ? { \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.decode [16:5], 8'h12, _0996_, 7'h03 } : _1020_;
  assign _1005_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_load  ? _1017_ : _1037_;
  assign _0997_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_load  ? _1009_ : _1031_;
  assign _0998_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_load  ? 1'h0 : _1010_;
  function [0:0] _3504_;
    input [0:0] a;
    input [3:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _3504_ = b[0:0];
      4'b??1?:
        _3504_ = b[1:1];
      4'b?1??:
        _3504_ = b[2:2];
      4'b1???:
        _3504_ = b[3:3];
      default:
        _3504_ = a;
    endcase
  endfunction
  assign _0995_ = _3504_(1'h1, { _0998_, _1040_, 1'h0, _1073_ }, { _1090_, _1095_, _0274_, _0273_ });
  assign _1093_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_state_q  == 4'h7;
  assign _1094_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_state_q  == 4'h6;
  function [3:0] _3507_;
    input [3:0] a;
    input [19:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        _3507_ = b[3:0];
      5'b???1?:
        _3507_ = b[7:4];
      5'b??1??:
        _3507_ = b[11:8];
      5'b?1???:
        _3507_ = b[15:12];
      5'b1????:
        _3507_ = b[19:16];
      default:
        _3507_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_state_n  = _3507_(4'h0, { _1005_, _0984_, 4'h5, _0989_, 4'h7 }, { _1090_, _0281_, _1096_, _1095_, _1094_ });
  function [31:0] _3508_;
    input [31:0] a;
    input [255:0] b;
    input [7:0] s;
    casez (s) // synopsys parallel_case
      8'b???????1:
        _3508_ = b[31:0];
      8'b??????1?:
        _3508_ = b[63:32];
      8'b?????1??:
        _3508_ = b[95:64];
      8'b????1???:
        _3508_ = b[127:96];
      8'b???1????:
        _3508_ = b[159:128];
      8'b??1?????:
        _3508_ = b[191:160];
      8'b?1??????:
        _3508_ = b[223:192];
      8'b1???????:
        _3508_ = b[255:224];
      default:
        _3508_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.if_stage_i.seq_instr [34:3] = _3508_(\cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [34:3], { _0997_, \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.decode [16:10], _0996_, 8'h12, \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.decode [9:5], 7'h23, \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.decode [16:5], 8'h12, _0996_, 7'h03, _0985_, _0987_, _0990_, 64'h0000051300008067 }, { _1090_, _1099_, _1098_, _1097_, _1096_, _1095_, _1094_, _1093_ });
  function [0:0] _3509_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3509_ = b[0:0];
      2'b1?:
        _3509_ = b[1:1];
      default:
        _3509_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_last_fsm  = _3509_(1'h0, { _1000_, 1'h1 }, { _1095_, _0273_ });
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_first_fsm  = _0275_ ? 1'h0 : 1'h1;
  function [11:0] _3511_;
    input [11:0] a;
    input [23:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3511_ = b[11:0];
      2'b1?:
        _3511_ = b[23:12];
      default:
        _3511_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.decode [16:5] = _3511_(12'h000, { _1088_, _1111_ }, { _1102_, _1101_ });
  assign _1101_ = | { _1066_, _1067_, _1100_[0] };
  assign _1100_[0] = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_instr  == 4'h2;
  assign _1102_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_instr  == 4'h1;
  assign _0980_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.pushpop_legal_rlist  ? 1'h1 : 1'h0;
  assign _1103_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15:13] == 3'h7;
  assign _0994_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.pushpop_legal_rlist  ? 4'h3 : 4'h0;
  assign _0979_ = _1062_ ? _0980_ : 1'h0;
  assign _0993_ = _1062_ ? _0994_ : 4'h0;
  assign _0991_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.pushpop_legal_rlist  ? 4'h4 : 4'h0;
  assign _1036_ = _1061_ ? _0980_ : _0979_;
  assign _0988_ = _1061_ ? _0991_ : _0993_;
  assign _1104_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15:13] == 3'h6;
  assign _0986_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.pushpop_legal_rlist  ? 4'h2 : 4'h0;
  assign _0983_ = _1062_ ? _0986_ : 4'h0;
  assign _0978_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.pushpop_legal_rlist  ? 4'h1 : 4'h0;
  assign _1038_ = _1061_ ? _0980_ : 1'h0;
  assign _1054_ = _1061_ ? _0978_ : _0983_;
  assign _1033_ = _1061_ ? 1'h0 : _0979_;
  assign _1048_ = _1060_ ? 1'h1 : 1'h0;
  assign _0970_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15:13] == 3'h3;
  assign _1051_ = _1060_ ? 4'h6 : 4'h0;
  assign _1043_ = _1059_ ? 1'h1 : 1'h0;
  assign _1047_ = _1059_ ? 4'h5 : _1051_;
  assign _1042_ = _1059_ ? 1'h0 : _1048_;
  assign _1035_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.dmove_legal_dest  ? _1043_ : 1'h0;
  assign _1034_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.dmove_legal_dest  ? _1042_ : 1'h0;
  assign _1041_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.dmove_legal_dest  ? _1047_ : 4'h0;
  assign _0974_ = ! \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [15:13];
  function [3:0] _3540_;
    input [3:0] a;
    input [15:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _3540_ = b[3:0];
      4'b??1?:
        _3540_ = b[7:4];
      4'b?1??:
        _3540_ = b[11:8];
      4'b1???:
        _3540_ = b[15:12];
      default:
        _3540_ = a;
    endcase
  endfunction
  assign _1022_ = _3540_(4'h0, { 4'h7, _1041_, _1054_, _0988_ }, { _0974_, _0970_, _1104_, _1103_ });
  assign _1029_ = _0974_ ? 1'h1 : 1'h0;
  assign _1025_ = _0970_ ? _1035_ : 1'h0;
  assign _1024_ = _0970_ ? _1034_ : 1'h0;
  assign _1028_ = _1104_ ? _1038_ : 1'h0;
  function [0:0] _3545_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3545_ = b[0:0];
      2'b1?:
        _3545_ = b[1:1];
      default:
        _3545_ = a;
    endcase
  endfunction
  assign _1023_ = _3545_(1'h0, { _1033_, _1036_ }, { _1104_, _1103_ });
  assign _1026_ = _0282_ ? _1036_ : 1'h0;
  assign _1015_ = _0950_[2] ? _1025_ : 1'h0;
  assign _1014_ = _0950_[2] ? _1024_ : 1'h0;
  assign _1018_ = _0950_[2] ? _1028_ : 1'h0;
  assign _1013_ = _0950_[2] ? _1023_ : 1'h0;
  assign _1011_ = _0950_[2] ? _1022_ : 4'h0;
  assign _1016_ = _0950_[2] ? _1026_ : 1'h0;
  assign _1019_ = _0950_[2] ? _1029_ : 1'h0;
  assign _1003_ = _0947_ ? _1015_ : 1'h0;
  assign _1002_ = _0947_ ? _1014_ : 1'h0;
  assign _1006_ = _0947_ ? _1018_ : 1'h0;
  assign _1001_ = _0947_ ? _1013_ : 1'h0;
  assign _0999_ = _0947_ ? _1011_ : 4'h0;
  assign _1004_ = _0947_ ? _1016_ : 1'h0;
  assign _1007_ = _0947_ ? _1019_ : 1'h0;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_move_s2a  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i  ? 1'h0 : _1003_;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_move_a2s  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i  ? 1'h0 : _1002_;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_store  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i  ? 1'h0 : _1006_;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_load  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i  ? 1'h0 : _1001_;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_instr  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i  ? 4'h0 : _0999_;
  assign \cv32e40x_core_inst.if_stage_i.seq_pushpop  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i  ? 1'h0 : _1004_;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_tbljmp_o  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i  ? 1'h0 : _1007_;
  assign _1105_ = \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16] ? 4'h0 : 4'hx;
  assign _0976_ = _1069_ ? \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_state_n  : _1105_;
  assign _1106_ = _1070_ ? _1056_ : 4'hx;
  assign _1107_ = \cv32e40x_core_inst.if_stage_i.seq_last  ? 4'h0 : _1106_;
  assign _0975_ = _1069_ ? _1107_ : _1105_;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.ready_fsm  = _1082_ ? 1'h1 : _0995_;
  assign _0992_ = _1067_ ? 4'h7 : 4'h0;
  assign _1095_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_state_q  == 4'h5;
  assign _1046_ = _1067_ ? 1'h0 : _1073_;
  assign _1012_ = _1067_ ? 1'h0 : 1'h1;
  assign _0989_ = _1066_ ? 4'h6 : _0992_;
  assign _1040_ = _1066_ ? 1'h0 : _1046_;
  assign _1000_ = _1066_ ? 1'h0 : _1012_;
  assign _0990_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_load  ? { \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_tmp_43B39 , 20'h10113 } : { _1089_, 20'h10113 };
  assign _0987_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_load  ? { \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.decode [16:5], 20'h12083 } : { \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.decode [16:10], 13'h0112, \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.decode [9:5], 7'h23 };
  assign _1096_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_state_q  == 4'h4;
  assign _1008_ = _1108_ ? { _1087_, 1'h1, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [7:5] } : { _1087_, 1'h0, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [7:5] };
  assign _1108_ = | { _0956_, _0958_ };
  assign _0958_ = ! \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [7:5];
  assign _0956_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [7:5] == 3'h1;
  assign _1097_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_state_q  == 4'h3;
  assign _0985_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_move_a2s  ? { 20'h00058, _1008_, 7'h13 } : { 12'h000, _1008_, 15'h0593 };
  assign _0984_ = _1065_ ? 4'h4 : 4'hx;
  assign _1098_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_state_q  == 4'h2;
  assign _0996_ = _1092_ ? { _1085_, 1'h1, \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_tmp_0F807 [3:1] } : { _1085_, \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_tmp_0F807 [4:1] };
  assign _1092_ = | _1091_;
  assign _1091_[0] = ! \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_tmp_0F807 ;
  assign _1091_[1] = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_tmp_0F807  == 5'h01;
  assign _1099_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_state_q  == 4'h1;
  assign _1030_ = _1110_ ? { _1086_, 1'h1, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10] } : { _1086_, 1'h0, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10] };
  assign _1110_ = | { _1064_, _1109_[1] };
  assign _1109_[1] = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:10] == 3'h1;
  assign _1090_ = ! \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_state_q ;
  assign _0981_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_move_s2a  ? 4'h3 : 4'hx;
  assign _0982_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_move_s2a  ? { 12'h000, _1030_, 15'h0513 } : \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [34:3];
  assign _0977_ = _1064_ ? { 15'h0000, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [9:5], 12'h06f } : { 12'h000, \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [12:5], 12'h0ef };
  assign _1032_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_tbljmp_o  ? _1073_ : 1'h0;
  assign _1053_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_tbljmp_o  ? _0977_ : _0982_;
  assign _1055_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_tbljmp_o  ? 4'hx : _0981_;
  assign _1052_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_move_a2s  ? 4'h3 : _1055_;
  assign _1050_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_move_a2s  ? { 20'h00050, _1030_, 7'h13 } : _1053_;
  assign _1021_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_move_a2s  ? 1'h0 : _1032_;
  assign _1049_ = _1068_ ? 4'h1 : 4'h5;
  assign _1045_ = _1068_ ? { 7'h7f, _0996_, 20'h12e23 } : 32'd4262538787;
  assign _1044_ = _1063_ ? 4'h4 : _1049_;
  assign _1039_ = _1063_ ? { 7'h7f, _0996_, 20'h12e23 } : _1045_;
  assign _1111_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_tmp_43B39  - { 5'h00, _1058_, 2'h0 };
  assign _1112_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_pushpop_reg_length$func$preprocessed.v:9522$2275.$result  - \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr_cnt_q ;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_tmp_0F807  = _1112_ - 4'h1;
  assign _1113_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_pushpop_reg_length$func$preprocessed.v:9522$2275.$result  - 32'd1;
  assign \cv32e40x_core_inst.if_stage_i.seq_last  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_tbljmp_ptr_q  ? 1'h1 : \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_last_fsm ;
  assign \cv32e40x_core_inst.if_stage_i.seq_first  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_tbljmp_ptr_q  ? 1'h0 : \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_first_fsm ;
  assign \cv32e40x_core_inst.if_stage_i.seq_ready  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_tbljmp_ptr_q  ? _1083_ : \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.ready_fsm ;
  assign _1118_ = \cv32e40x_core_inst.if_stage_i.mpu_i.state_q  == 3'h2;
  assign _1119_ = \cv32e40x_core_inst.if_stage_i.mpu_i.state_q  == 3'h1;
  assign _1120_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_o  >= 32'd4026531840;
  assign _1121_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_o  <= 32'd4026548223;
  assign _1122_ = _1120_ && _1121_;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_debug_region  = _1122_ && \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n ;
  assign _1123_ = \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_err  && \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_valid_i ;
  assign \cv32e40x_core_inst.if_stage_i.bus_trans_valid  = \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_valid_i  && _1125_;
  assign _1124_ = \cv32e40x_core_inst.if_stage_i.mpu_i.bus_trans_ready_i  && _1126_;
  assign _1125_ = ! \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_block_bus ;
  assign _1126_ = ! \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_block_core ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_count_down  = instr_rvalid_i || \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_err_trans_valid ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_ready_i  = _1124_ || \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_err_trans_ready ;
  assign _1117_ = \cv32e40x_core_inst.if_stage_i.mpu_i.core_one_txn_pend_n  ? _1132_ : 3'hx;
  assign _1128_ = | { _1118_, _1127_[1] };
  assign _1127_[1] = \cv32e40x_core_inst.if_stage_i.mpu_i.state_q  == 3'h4;
  assign _1129_ = ! \cv32e40x_core_inst.if_stage_i.mpu_i.state_q ;
  assign _1115_ = _1123_ ? _1116_ : 3'hx;
  assign _1114_ = _1123_ ? 1'h1 : 1'h0;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_err_trans_ready  = _1129_ ? _1114_ : 1'h0;
  function [0:0] _3641_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3641_ = b[0:0];
      2'b1?:
        _3641_ = b[1:1];
      default:
        _3641_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_block_bus  = _3641_(1'h0, { _1114_, 1'h1 }, { _1129_, _0251_ });
  assign _1131_ = | { _1119_, _1130_[1] };
  assign _1130_[1] = \cv32e40x_core_inst.if_stage_i.mpu_i.state_q  == 3'h3;
  function [2:0] _3644_;
    input [2:0] a;
    input [8:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _3644_ = b[2:0];
      3'b?1?:
        _3644_ = b[5:3];
      3'b1??:
        _3644_ = b[8:6];
      default:
        _3644_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.state_n  = _3644_(3'hx, { _1115_, _1117_, 3'h0 }, { _1129_, _1128_, _1131_ });
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_status  = _1131_ ? _1133_ : 2'h0;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_err_trans_valid  = _1131_ ? 1'h1 : 1'h0;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_block_core  = _0251_ ? 1'h1 : 1'h0;
  assign _1116_ = \cv32e40x_core_inst.if_stage_i.mpu_i.core_one_txn_pend_n  ? 3'h1 : 3'h2;
  assign _1132_ = _1118_ ? 3'h1 : 3'h3;
  assign _1133_ = _1119_ ? 2'h1 : 2'h2;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.pma_cfg  = \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_debug_region  ? 68'h00000000000000008 : 68'h00000000000000009;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_err  = \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.pma_cfg [3] ? 1'h0 : 1'h1;
  assign _1174_ = _1179_ + 32'd1;
  assign _1176_ = _1182_ + 32'd1;
  assign _1177_ = _1183_ + 32'd1;
  assign _1175_ = _1181_ + 32'd1;
  assign _1179_ = _1226_ + 32'd34;
  assign _1182_ = _1227_ + 32'd18;
  assign _1183_ = _1227_ + 32'd1;
  assign _1184_ = _1227_ + 32'd2;
  assign _1181_ = _1226_ + 32'd1;
  assign _1180_ = _1226_ + 32'd2;
  assign _1185_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.wptr  + 2'h1;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_incr  = { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q [31:2], 2'h0 } + 32'd4;
  assign _1186_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.rptr  + 2'h1;
  assign _1187_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_cnt_q  + \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.n_pushed_ins ;
  assign _1188_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_cnt_q  + 1'h1;
  assign _1189_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid_q  & _1237_;
  assign _1190_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid_int  & _1238_;
  assign _1191_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_q  & _1239_;
  assign _1192_ = ! _1270_;
  assign _1193_ = _1270_ == 32'd1;
  assign _1194_ = ! \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_cnt_q ;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.core_one_txn_pend_n  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_cnt_n  == 2'h1;
  assign _1195_ = instr_rdata_i[1:0] == 2'h3;
  assign _1196_ = instr_rdata_i[17:16] == 2'h3;
  assign _1197_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193] == 4'hd;
  assign _1198_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193] == 4'h1;
  assign _1199_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.n_flush_q  > 32'd0;
  assign _1200_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [200] && _1223_;
  assign _1201_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ptr_fetch_accepted_q  && _1210_;
  assign _1202_ = _1200_ && _1211_;
  assign _1203_ = _1193_ && _1194_;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_valid_i  = _1202_ && _1216_;
  assign _1204_ = _1253_ && \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_valid_gated ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.unaligned_is_compressed  = _1229_ && _0707_;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.aligned_is_compressed  = _1230_ && _0707_;
  assign _1205_ = _1212_ && _1213_;
  assign _1206_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_count_down  && _1199_;
  assign _1207_ = \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [198] && _1197_;
  assign _1208_ = \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [198] && _1198_;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_count_up  = \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_valid_i  && \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_ready_i ;
  assign _1209_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_count_up  && \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_ptr_access_i ;
  assign _1138_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.valid_i  && \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_ready_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_ptr_access_i  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  && _1222_;
  assign _1210_ = ! \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i ;
  assign _1211_ = ! _1201_;
  assign _1212_ = ! \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q [1];
  assign _1213_ = ! \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.aligned_is_compressed ;
  assign _1214_ = ! \cv32e40x_core_inst.if_stage_i.branch_addr_n [1];
  assign _1215_ = _1192_ || _1203_;
  assign _1216_ = _1215_ || \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i ;
  assign \cv32e40x_core_inst.sleep_unit_i.if_busy_i  = _1228_ || \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_valid_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid_unaligned_uncompressed  = _1254_ || _1204_;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid  = _1253_ || \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_valid_gated ;
  assign _1217_ = _1231_ || _1232_;
  assign _1218_ = _1264_ || _1162_;
  assign _1219_ = _1232_ || _1233_;
  assign _1080_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_clic_ptr_q  || \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_mret_ptr_q ;
  assign _1220_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q [1] || _1205_;
  assign _1221_ = _1138_ || \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_valid_gated ;
  assign _1222_ = \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [198] || \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [197];
  assign _1223_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_cnt_q  < 32'd2;
  assign _1224_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.wptr  < 32'd2;
  assign _1225_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.rptr  < 32'd2;
  assign _1227_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.rptr2  * 32'd35;
  assign _1226_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.rptr  * 32'd35;
  assign _1178_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.wptr  * 32'd35;
  assign _1228_ = | \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_cnt_q ;
  assign _1229_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr [17:16] != 2'h3;
  assign _1230_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr [1:0] != 2'h3;
  assign _1231_ = | _1263_;
  assign _1232_ = | _1261_;
  assign _1233_ = | \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_status ;
  assign _1234_ = - $signed({ 1'h0, \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.wptr  });
  assign _1235_ = - $signed({ 1'h0, \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.rptr  });
  assign _1236_ = - $signed({ 1'h0, _1178_ });
  assign _1237_ = ~ _1255_;
  assign _1238_ = ~ _1256_;
  assign _1239_ = ~ _1258_;
  assign _1240_ = _1189_ | _1255_;
  assign _1241_ = _1190_ | _1257_;
  assign _1242_ = _1191_ | _1259_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_cnt_q  <= 3'h0;
    else \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_cnt_q  <= \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_cnt_n ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_cnt_q  <= 2'h0;
    else \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_cnt_q  <= \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_cnt_n ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.pop_q  <= 1'h0;
    else \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.pop_q  <= _1138_;
  assign _1243_ = _1138_ ? \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_n  : 32'hxxxxxxxx;
  assign _1134_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  ? { \cv32e40x_core_inst.if_stage_i.branch_addr_n [31:1], 1'h0 } : _1243_;
  assign _1244_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_valid_gated  ? \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.wptr_n  : 2'hx;
  assign _1142_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  ? 2'h0 : _1244_;
  assign _1245_ = _1138_ ? \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.rptr_n  : 2'hx;
  assign _1140_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  ? 2'h0 : _1245_;
  assign _1246_ = _1221_ ? \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid_n  : 3'hx;
  assign _1141_ = \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16] ? 3'h0 : _1246_;
  assign _1247_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  ? 1'h0 : 1'hx;
  assign _1139_ = _1209_ ? 1'h1 : _1247_;
  assign _1248_ = _1138_ ? 1'h0 : 1'hx;
  assign _1137_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  ? \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [197] : _1248_;
  assign _1136_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  ? _1208_ : _1248_;
  assign _1135_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  ? _1207_ : _1248_;
  assign _1151_ = _1206_ ? _1274_ : 2'hx;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.n_flush_n  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  ? \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.n_flush_branch  : _1151_;
  assign _1173_ = _1196_ ? 2'h0 : 2'h1;
  assign _1172_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.complete_q  ? _1173_ : _1170_;
  assign _1167_ = _1196_ ? 1'h0 : 1'h1;
  assign _1170_ = _1196_ ? 2'h1 : 2'h2;
  assign _1166_ = _1195_ ? 2'h1 : _1170_;
  assign _1163_ = _1195_ ? 1'hx : _1167_;
  assign _1161_ = _1195_ ? 1'h1 : _1167_;
  assign _1156_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.aligned_q  ? _1163_ : _1167_;
  assign _1155_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.aligned_q  ? _1161_ : _1167_;
  assign _1159_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.aligned_q  ? _1166_ : _1172_;
  assign _1146_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_valid_gated  ? _1156_ : 1'hx;
  assign _1144_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_valid_gated  ? _1155_ : 1'hx;
  assign _1152_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_valid_gated  ? _1159_ : 2'h0;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.complete_n  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  ? \cv32e40x_core_inst.if_stage_i.branch_addr_n [1] : _1146_;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.aligned_n  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  ? _1214_ : _1144_;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.n_pushed_ins  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  ? 2'h0 : _1152_;
  function [1:0] _3769_;
    input [1:0] a;
    input [5:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _3769_ = b[1:0];
      3'b?1?:
        _3769_ = b[3:2];
      3'b1??:
        _3769_ = b[5:4];
      default:
        _3769_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_cnt_n  = _3769_(2'hx, { _1273_, _1188_, \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_cnt_q  }, { _1251_, _1250_, _0253_ });
  assign _1249_ = { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_count_up , \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_count_down  } == 2'h3;
  assign _1250_ = { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_count_up , \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_count_down  } == 2'h2;
  assign _1251_ = { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_count_up , \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_count_down  } == 2'h1;
  assign _1252_ = ! { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_count_up , \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_count_down  };
  assign _1150_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_count_down  ? _1271_ : \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_cnt_q ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.n_flush_branch  = \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16] ? _1150_ : \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_cnt_q ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_cnt_n  = \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16] ? 3'h0 : _1272_;
  assign _1153_ = _1220_ ? _1241_ : \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid_int ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid_n  = _1138_ ? _1153_ : \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid_int ;
  assign _1154_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.aligned_is_compressed  ? 32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx10 : { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_incr [31:2], 2'h0 };
  assign _1160_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.aligned_is_compressed  ? 2'hx : \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.rptr2 ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.rptr2  = _1225_ ? _1186_ : 2'h0;
  assign _1143_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.unaligned_is_compressed  ? { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_incr [31:2], 2'h0 } : { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_incr [31:2], 2'h2 };
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.rptr_n  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q [1] ? \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.rptr2  : _1160_;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_n  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q [1] ? _1143_ : _1154_;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.wptr_n  = _1224_ ? _1185_ : 2'h0;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid_int  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_valid_gated  ? _1240_ : \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid_q ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_n  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_valid_gated  ? { instr_rdata_i, 1'h0, \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_status  } : _1265_;
  assign _1147_[34:3] = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q [1] ? \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_unaligned  : \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr ;
  assign _1164_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i  ? 1'h1 : _1168_;
  assign _1157_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid  ? _1164_ : 1'h0;
  assign _1148_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q [1] ? _1157_ : \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid ;
  assign _1168_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.unaligned_is_compressed  ? 1'h1 : \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid_unaligned_uncompressed ;
  assign _1147_[1:0] = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q [1] ? \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.mpu_status_unaligned  : \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.mpu_status ;
  assign _1147_[2] = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q [1] ? \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.bus_err_unaligned  : \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.bus_err ;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.valid_i  = \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16] ? 1'h0 : _1148_;
  assign \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i  = \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16] ? { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr , \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.bus_err , \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.mpu_status  } : _1147_;
  assign _1171_ = _1219_ ? 2'h1 : 2'h0;
  assign _1169_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.unaligned_is_compressed  ? _1261_ : _1171_;
  assign _1165_ = _1253_ ? _1169_ : \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_status ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.bus_err  = _1253_ ? _1162_ : 1'h0;
  assign _1158_ = _1217_ ? 2'h1 : 2'h0;
  assign _1145_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.unaligned_is_compressed  ? _1162_ : _1218_;
  assign _1149_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.unaligned_is_compressed  ? _1261_ : _1158_;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.mpu_status_unaligned  = _1254_ ? _1149_ : _1165_;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.bus_err_unaligned  = _1254_ ? _1145_ : \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.bus_err ;
  assign _1255_ = $signed(_1234_) < 0 ? 1'h1 << - _1234_ : 1'h1 >> _1234_;
  assign _1256_ = $signed(_1235_) < 0 ? 1'h1 << - _1235_ : 1'h1 >> _1235_;
  assign _1257_ = $signed(_1235_) < 0 ? 1'h0 << - _1235_ : 1'h0 >> _1235_;
  assign _1258_ = $signed(_1236_) < 0 ? 35'h7ffffffff << - _1236_ : 35'h7ffffffff >> _1236_;
  assign _1259_ = $signed(_1236_) < 0 ? \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_n  << - _1236_ : \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_n  >> _1236_;
  wire [104:0] _4639_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_q ;
  assign _1260_ = _4639_[$signed(_1266_) +: 32];
  wire [104:0] _4640_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_q ;
  assign _1262_ = _4640_[$signed(_1268_) +: 16];
  wire [2:0] _4641_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid_q ;
  assign _1254_ = _4641_[\cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.rptr2  +: 1];
  wire [104:0] _4642_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_q ;
  assign _1263_ = _4642_[$signed(_1269_) +: 2];
  wire [104:0] _4643_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_q ;
  assign _1264_ = _4643_[$signed(_1184_) +: 1];
  wire [2:0] _4644_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.valid_q ;
  assign _1253_ = _4644_[\cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.rptr  +: 1];
  wire [104:0] _4645_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_q ;
  assign _1261_ = _4645_[$signed(_1267_) +: 2];
  wire [104:0] _4646_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_q ;
  assign _1162_ = _4646_[$signed(_1180_) +: 1];
  wire [104:0] _4647_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_q ;
  assign _1265_ = _4647_[$signed(_1178_) +: 35];
  assign _1266_ = _1174_ - 32'd32;
  assign _1268_ = _1176_ - 32'd16;
  assign _1269_ = _1177_ - 32'd2;
  assign _1267_ = _1175_ - 32'd2;
  assign _1270_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_cnt_q  - \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.pop_q ;
  assign _1271_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_cnt_q  - 2'h1;
  assign _1272_ = _1187_ - { 1'h0, _1275_ };
  assign _1273_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_cnt_q  - 1'h1;
  assign _1274_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.n_flush_q  - 2'h1;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_valid_gated  = _1199_ ? 1'h0 : \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_count_down ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr  = _1253_ ? _1260_ : instr_rdata_i;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.mpu_status  = _1253_ ? _1261_ : \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_status ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_unaligned  = _1254_ ? { _1262_, \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr [31:16] } : { instr_rdata_i[15:0], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr [31:16] };
  assign _1275_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.pop_q  ? 2'h1 : 2'h0;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_incr  = { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_q [31:1], 1'h0 } + 32'd4;
  assign _1280_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  && _1281_;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_ready_i  = \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_valid_i  && \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_ready_i ;
  assign _1281_ = ! \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_ready_i ;
  assign _1282_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  || \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_ready_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.state_q  <= 1'h0;
    else \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.state_q  <= \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.next_state ;
  assign _1279_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_ready_i  ? 1'h0 : 1'h1;
  assign _1277_ = _1280_ ? 1'h1 : 1'h0;
  assign _1276_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  ? \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_ptr_access_i  : 1'h0;
  assign _1278_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  ? { \cv32e40x_core_inst.if_stage_i.branch_addr_n [31:1], 1'h0 } : \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_incr ;
  function [0:0] _3844_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3844_ = b[0:0];
      2'b1?:
        _3844_ = b[1:1];
      default:
        _3844_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.next_state  = _3844_(1'hx, { _1277_, _1279_ }, { _1283_, \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.state_q  });
  function [1:0] _3845_;
    input [1:0] a;
    input [3:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3845_ = b[1:0];
      2'b1?:
        _3845_ = b[3:2];
      default:
        _3845_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i  = _3845_(2'hx, { 2'h3, _1286_ }, { _1283_, \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.state_q  });
  function [0:0] _3846_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3846_ = b[0:0];
      2'b1?:
        _3846_ = b[1:1];
      default:
        _3846_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_ptr_access_i  = _3846_(1'hx, { _1276_, _1285_ }, { _1283_, \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.state_q  });
  function [31:0] _3847_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3847_ = b[31:0];
      2'b1?:
        _3847_ = b[63:32];
      default:
        _3847_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_o  = _3847_(32'hxxxxxxxx, { _1278_, _1284_ }, { _1283_, \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.state_q  });
  assign _1283_ = ~ \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.state_q ;
  assign _1284_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  ? { \cv32e40x_core_inst.if_stage_i.branch_addr_n [31:1], 1'h0 } : \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_q ;
  assign _1285_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  ? \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_ptr_access_i  : \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_ptr_access_q ;
  assign _1286_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  ? 2'h3 : \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_priv_lvl_q ;
  assign _1291_ = \cv32e40x_core_inst.load_store_unit_i.align_check_i.state_q  == 3'h2;
  assign _1292_ = \cv32e40x_core_inst.load_store_unit_i.align_check_i.state_q  == 3'h1;
  assign _1293_ = \cv32e40x_core_inst.load_store_unit_i.align_check_i.align_err  && \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_trans_valid_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.valid_i  = \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_trans_valid_i  && _1295_;
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.align_err  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168] && \cv32e40x_core_inst.load_store_unit_i.align_check_i.misaligned_access_i ;
  assign _1294_ = \cv32e40x_core_inst.load_store_unit_i.align_check_i.bus_trans_ready_i  && _1296_;
  assign _1295_ = ! \cv32e40x_core_inst.load_store_unit_i.align_check_i.align_block_bus ;
  assign _1296_ = ! \cv32e40x_core_inst.load_store_unit_i.align_check_i.align_block_core ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.bus_resp_valid_i  = \cv32e40x_core_inst.load_store_unit_i.align_check_i.bus_resp_valid_i  || \cv32e40x_core_inst.load_store_unit_i.align_check_i.align_trans_valid ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.bus_trans_ready_i  = _1294_ || \cv32e40x_core_inst.load_store_unit_i.align_check_i.align_trans_ready ;
  assign _1290_ = \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_one_txn_pend_n  ? _1304_ : 3'hx;
  assign _1298_ = | { _1291_, _1297_[1] };
  assign _1297_[1] = \cv32e40x_core_inst.load_store_unit_i.align_check_i.state_q  == 3'h4;
  assign _1289_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172] ? _1302_ : _1303_;
  assign _1299_ = ! \cv32e40x_core_inst.load_store_unit_i.align_check_i.state_q ;
  assign _1288_ = _1293_ ? _1289_ : 3'hx;
  assign _1287_ = _1293_ ? 1'h1 : 1'h0;
  function [2:0] _3869_;
    input [2:0] a;
    input [8:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _3869_ = b[2:0];
      3'b?1?:
        _3869_ = b[5:3];
      3'b1??:
        _3869_ = b[8:6];
      default:
        _3869_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.state_n  = _3869_(3'hx, { _1288_, _1290_, 3'h0 }, { _1299_, _1298_, _1301_ });
  assign _1301_ = | { _1292_, _1300_[1] };
  assign _1300_[1] = \cv32e40x_core_inst.load_store_unit_i.align_check_i.state_q  == 3'h3;
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.align_trans_ready  = _1299_ ? _1287_ : 1'h0;
  function [0:0] _3873_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3873_ = b[0:0];
      2'b1?:
        _3873_ = b[1:1];
      default:
        _3873_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.align_block_bus  = _3873_(1'h0, { _1287_, 1'h1 }, { _1299_, _0252_ });
  assign \cv32e40x_core_inst.wb_stage_i.lsu_align_status_i  = _1301_ ? _1305_ : 2'h0;
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.align_trans_valid  = _1301_ ? 1'h1 : 1'h0;
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.align_block_core  = _0252_ ? 1'h1 : 1'h0;
  assign _1302_ = \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_one_txn_pend_n  ? 3'h1 : 3'h2;
  assign _1303_ = \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_one_txn_pend_n  ? 3'h3 : 3'h4;
  assign _1304_ = _1291_ ? 3'h1 : 3'h3;
  assign _1305_ = _1292_ ? 2'h2 : 2'h1;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_trans_valid_i  = \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_trans_valid_i  && _1313_;
  assign _1311_ = \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.mpu_trans_ready_i  && _1314_;
  assign _1312_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.trigger_match_ex  && \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_trans_valid_i ;
  assign _1313_ = ! \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.wpt_block_bus ;
  assign _1314_ = ! \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.wpt_block_core ;
  assign \cv32e40x_core_inst.load_store_unit_i.count_down  = \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.mpu_resp_valid_i  || \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.wpt_trans_valid ;
  assign \cv32e40x_core_inst.load_store_unit_i.trans_ready  = _1311_ || \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.wpt_trans_ready ;
  assign _1310_ = \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_one_txn_pend_n  ? 2'h2 : 2'hx;
  assign _1315_ = \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.state_q  == 2'h1;
  assign _1316_ = ! \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.state_q ;
  assign _1306_ = _1312_ ? _1309_ : 2'hx;
  assign _1307_ = _1312_ ? 1'h1 : 1'h0;
  assign _1308_ = _1312_ ? { 31'h00000000, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.trigger_match_ex  } : 32'hxxxxxxxx;
  function [31:0] _3894_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3894_ = b[31:0];
      2'b1?:
        _3894_ = b[63:32];
      default:
        _3894_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.wpt_match_n  = _3894_(32'hxxxxxxxx, { _1308_, 32'h00000000 }, { _1316_, _1317_ });
  assign _1317_ = \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.state_q  == 2'h2;
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.wpt_trans_ready  = _1316_ ? _1307_ : 1'h0;
  function [0:0] _3897_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3897_ = b[0:0];
      2'b1?:
        _3897_ = b[1:1];
      default:
        _3897_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.wpt_block_bus  = _3897_(1'h0, { _1307_, 1'h1 }, { _1316_, _0260_ });
  function [1:0] _3898_;
    input [1:0] a;
    input [5:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _3898_ = b[1:0];
      3'b?1?:
        _3898_ = b[3:2];
      3'b1??:
        _3898_ = b[5:4];
      default:
        _3898_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.state_n  = _3898_(2'hx, { _1306_, _1310_, 2'h0 }, { _1316_, _1315_, _1317_ });
  assign \cv32e40x_core_inst.wb_stage_i.lsu_wpt_match_i  = _1317_ ? \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.wpt_match_q  : 32'd0;
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.wpt_trans_valid  = _1317_ ? 1'h1 : 1'h0;
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.wpt_block_core  = _0260_ ? 1'h1 : 1'h0;
  assign _1309_ = \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_one_txn_pend_n  ? 2'h2 : 2'h1;
  assign _1322_ = \cv32e40x_core_inst.load_store_unit_i.mpu_i.state_q  == 3'h2;
  assign _1323_ = \cv32e40x_core_inst.load_store_unit_i.mpu_i.state_q  == 3'h1;
  assign _1324_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i  >= 32'd4026531840;
  assign _1325_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i  <= 32'd4026548223;
  assign _1326_ = _1324_ && _1325_;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_trans_debug_region  = _1326_ && \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q ;
  assign _1327_ = \cv32e40x_core_inst.load_store_unit_i.mpu_i.mpu_err  && \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_trans_valid_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_trans_valid_i  = \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_trans_valid_i  && _1329_;
  assign _1328_ = \cv32e40x_core_inst.load_store_unit_i.mpu_i.bus_trans_ready_i  && _1330_;
  assign _1329_ = ! \cv32e40x_core_inst.load_store_unit_i.mpu_i.mpu_block_bus ;
  assign _1330_ = ! \cv32e40x_core_inst.load_store_unit_i.mpu_i.mpu_block_core ;
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.mpu_resp_valid_i  = \cv32e40x_core_inst.load_store_unit_i.mpu_i.bus_resp_valid_i  || \cv32e40x_core_inst.load_store_unit_i.mpu_i.mpu_err_trans_valid ;
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.mpu_trans_ready_i  = _1328_ || \cv32e40x_core_inst.load_store_unit_i.mpu_i.mpu_err_trans_ready ;
  assign _1321_ = \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_one_txn_pend_n  ? _1336_ : 3'hx;
  assign _1332_ = | { _1322_, _1331_[1] };
  assign _1331_[1] = \cv32e40x_core_inst.load_store_unit_i.mpu_i.state_q  == 3'h4;
  assign _1320_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172] ? _1303_ : _1302_;
  assign _1333_ = ! \cv32e40x_core_inst.load_store_unit_i.mpu_i.state_q ;
  assign _1319_ = _1327_ ? _1320_ : 3'hx;
  assign _1318_ = _1327_ ? 1'h1 : 1'h0;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.mpu_err_trans_ready  = _1333_ ? _1318_ : 1'h0;
  function [0:0] _3924_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3924_ = b[0:0];
      2'b1?:
        _3924_ = b[1:1];
      default:
        _3924_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.mpu_block_bus  = _3924_(1'h0, { _1318_, 1'h1 }, { _1333_, _0254_ });
  assign _1335_ = | { _1323_, _1334_[1] };
  assign _1334_[1] = \cv32e40x_core_inst.load_store_unit_i.mpu_i.state_q  == 3'h3;
  function [2:0] _3927_;
    input [2:0] a;
    input [8:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _3927_ = b[2:0];
      3'b?1?:
        _3927_ = b[5:3];
      3'b1??:
        _3927_ = b[8:6];
      default:
        _3927_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.state_n  = _3927_(3'hx, { _1319_, _1321_, 3'h0 }, { _1333_, _1332_, _1335_ });
  assign \cv32e40x_core_inst.wb_stage_i.lsu_mpu_status_i  = _1335_ ? _1337_ : 2'h0;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.mpu_err_trans_valid  = _1335_ ? 1'h1 : 1'h0;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.mpu_block_core  = _0254_ ? 1'h1 : 1'h0;
  assign _1336_ = _1322_ ? 3'h1 : 3'h3;
  assign _1337_ = _1323_ ? 2'h1 : 2'h2;
  assign _1340_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168] && _1344_;
  assign _1341_ = _1347_ && _1345_;
  assign _1342_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [43] && _1345_;
  assign _1343_ = \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cfg [2] && _1346_;
  assign \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.bufferable  = _1343_ && \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172];
  assign _1344_ = ! \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cfg [0];
  assign _1345_ = ! \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cfg [3];
  assign _1346_ = ! \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168];
  assign _1347_ = \cv32e40x_core_inst.load_store_unit_i.align_check_i.misaligned_access_i  || \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.modified_access_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cfg  = \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_trans_debug_region  ? 68'h00000000000000008 : 68'h00000000000000009;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.mpu_err  = _1342_ ? 1'h1 : _1339_;
  assign _1339_ = _1341_ ? 1'h1 : _1338_;
  assign _1338_ = _1340_ ? 1'h1 : 1'h0;
  assign _1350_ = { 29'h00000000, \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_cnt_q , 1'h0 } + 32'd1;
  assign _1351_ = { 29'h00000000, \cv32e40x_core_inst.load_store_unit_i.response_filter_i.core_cnt_q , 1'h0 } + 32'd1;
  assign _1352_ = \cv32e40x_core_inst.load_store_unit_i.response_filter_i.core_cnt_q  + 32'd1;
  assign _1353_ = \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_cnt_q  + 32'd1;
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.core_count_up  = \cv32e40x_core_inst.load_store_unit_i.align_check_i.bus_trans_ready_i  && \cv32e40x_core_inst.load_store_unit_i.response_filter_i.valid_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_count_up  = \cv32e40x_core_inst.load_store_unit_i.response_filter_i.ready_i  && \cv32e40x_core_inst.load_store_unit_i.response_filter_i.valid_o ;
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.bus_trans_ready_i  = \cv32e40x_core_inst.load_store_unit_i.response_filter_i.ready_i  && _1354_;
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.valid_o  = \cv32e40x_core_inst.load_store_unit_i.response_filter_i.valid_i  && _1354_;
  assign \cv32e40x_core_inst.load_store_unit_i.filter_resp_busy  = \cv32e40x_core_inst.controller_i.bypass_i.lsu_bus_busy_i  || \cv32e40x_core_inst.load_store_unit_i.response_filter_i.valid_i ;
  assign _1354_ = \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_cnt_q  < 32'd2;
  assign \cv32e40x_core_inst.controller_i.bypass_i.lsu_bus_busy_i  = | \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_cnt_q ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_cnt_q  <= 2'h0;
    else \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_cnt_q  <= \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_next_cnt ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.load_store_unit_i.response_filter_i.core_cnt_q  <= 2'h0;
    else \cv32e40x_core_inst.load_store_unit_i.response_filter_i.core_cnt_q  <= \cv32e40x_core_inst.load_store_unit_i.response_filter_i.core_next_cnt ;
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_next_cnt  = data_rvalid_i ? _1356_[1:0] : _1348_;
  assign _1348_ = \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_count_up  ? _1353_[1:0] : \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_cnt_q ;
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.core_next_cnt  = \cv32e40x_core_inst.load_store_unit_i.align_check_i.bus_resp_valid_i  ? _1355_[1:0] : _1349_;
  assign _1349_ = \cv32e40x_core_inst.load_store_unit_i.response_filter_i.core_count_up  ? _1352_[1:0] : \cv32e40x_core_inst.load_store_unit_i.response_filter_i.core_cnt_q ;
  wire [5:0] _4648_ = { \cv32e40x_core_inst.load_store_unit_i.response_filter_i.outstanding_q [5:2], 2'h0 };
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_resp_is_bufferable  = _4648_[$signed(_1350_) +: 1];
  wire [5:0] _4649_ = { \cv32e40x_core_inst.load_store_unit_i.response_filter_i.outstanding_q [5:2], 2'h0 };
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.core_resp_is_bufferable  = _4649_[$signed(_1351_) +: 1];
  assign _1355_ = _1349_ - 32'd1;
  assign _1356_ = _1348_ - 32'd1;
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.bus_resp_valid_i  = \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_resp_is_bufferable  ? \cv32e40x_core_inst.load_store_unit_i.response_filter_i.core_resp_is_bufferable  : data_rvalid_i;
  assign _1361_ = \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.bufferable  && \cv32e40x_core_inst.load_store_unit_i.response_filter_i.valid_o ;
  assign _1362_ = _1361_ && _1364_;
  assign _1363_ = \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.bufferable  && data_gnt_i;
  assign _1364_ = ! data_gnt_i;
  assign _1365_ = \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.bufferable  || data_gnt_i;
  assign \cv32e40x_core_inst.m_c_obi_data_if.s_req  = \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.state  || \cv32e40x_core_inst.load_store_unit_i.response_filter_i.valid_o ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.state  <= 1'h0;
    else \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.state  <= \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.next_state ;
  assign _1360_ = _1361_ ? 1'h1 : 1'h0;
  assign _1359_ = data_gnt_i ? _1360_ : 1'h0;
  assign _1358_ = data_gnt_i ? _1360_ : 1'h1;
  assign _1357_ = _1362_ ? 1'h1 : 1'h0;
  function [0:0] _3979_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3979_ = b[0:0];
      2'b1?:
        _3979_ = b[1:1];
      default:
        _3979_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.push  = _3979_(1'hx, { _1357_, _1359_ }, { _1366_, \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.state  });
  function [0:0] _3980_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _3980_ = b[0:0];
      2'b1?:
        _3980_ = b[1:1];
      default:
        _3980_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.next_state  = _3980_(1'hx, { _1357_, _1358_ }, { _1366_, \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.state  });
  assign _1366_ = ~ \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.state ;
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.ready_i  = \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.state  ? _1363_ : _1365_;
  assign { \cv32e40x_core_inst.load_store_unit_i.bus_trans [80:43], \cv32e40x_core_inst.m_c_obi_data_if.req_payload [42], \cv32e40x_core_inst.load_store_unit_i.bus_trans [41:0] } = \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.state  ? \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.trans_q  : { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i , \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168:163], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i , \cv32e40x_core_inst.load_store_unit_i.wdata , \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cfg [1], \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.bufferable , 3'h7, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  };
  assign _1367_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h01;
  assign _1368_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h02;
  assign _1369_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h03;
  assign _1370_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h04;
  assign _1371_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h05;
  assign _1372_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h06;
  assign _1373_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h07;
  assign _1374_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h08;
  assign _1375_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h09;
  assign _1376_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h0a;
  assign _1377_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h0b;
  assign _1378_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h0c;
  assign _1379_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h0d;
  assign _1380_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h0e;
  assign _1381_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h0f;
  assign _1382_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h10;
  assign _1383_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h11;
  assign _1384_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h12;
  assign _1385_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h13;
  assign _1386_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h14;
  assign _1387_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h15;
  assign _1388_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h16;
  assign _1389_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h17;
  assign _1390_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h18;
  assign _1391_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h19;
  assign _1392_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h1a;
  assign _1393_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h1b;
  assign _1394_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h1c;
  assign _1395_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h1d;
  assign _1396_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h1e;
  assign _1397_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242] == 5'h1f;
  function [31:0] _4015_;
    input [31:0] a;
    input [1023:0] b;
    input [31:0] s;
    casez (s) // synopsys parallel_case
      32'b???????????????????????????????1:
        _4015_ = b[31:0];
      32'b??????????????????????????????1?:
        _4015_ = b[63:32];
      32'b?????????????????????????????1??:
        _4015_ = b[95:64];
      32'b????????????????????????????1???:
        _4015_ = b[127:96];
      32'b???????????????????????????1????:
        _4015_ = b[159:128];
      32'b??????????????????????????1?????:
        _4015_ = b[191:160];
      32'b?????????????????????????1??????:
        _4015_ = b[223:192];
      32'b????????????????????????1???????:
        _4015_ = b[255:224];
      32'b???????????????????????1????????:
        _4015_ = b[287:256];
      32'b??????????????????????1?????????:
        _4015_ = b[319:288];
      32'b?????????????????????1??????????:
        _4015_ = b[351:320];
      32'b????????????????????1???????????:
        _4015_ = b[383:352];
      32'b???????????????????1????????????:
        _4015_ = b[415:384];
      32'b??????????????????1?????????????:
        _4015_ = b[447:416];
      32'b?????????????????1??????????????:
        _4015_ = b[479:448];
      32'b????????????????1???????????????:
        _4015_ = b[511:480];
      32'b???????????????1????????????????:
        _4015_ = b[543:512];
      32'b??????????????1?????????????????:
        _4015_ = b[575:544];
      32'b?????????????1??????????????????:
        _4015_ = b[607:576];
      32'b????????????1???????????????????:
        _4015_ = b[639:608];
      32'b???????????1????????????????????:
        _4015_ = b[671:640];
      32'b??????????1?????????????????????:
        _4015_ = b[703:672];
      32'b?????????1??????????????????????:
        _4015_ = b[735:704];
      32'b????????1???????????????????????:
        _4015_ = b[767:736];
      32'b???????1????????????????????????:
        _4015_ = b[799:768];
      32'b??????1?????????????????????????:
        _4015_ = b[831:800];
      32'b?????1??????????????????????????:
        _4015_ = b[863:832];
      32'b????1???????????????????????????:
        _4015_ = b[895:864];
      32'b???1????????????????????????????:
        _4015_ = b[927:896];
      32'b??1?????????????????????????????:
        _4015_ = b[959:928];
      32'b?1??????????????????????????????:
        _4015_ = b[991:960];
      32'b1???????????????????????????????:
        _4015_ = b[1023:992];
      default:
        _4015_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.rf_rdata_id [31:0] = _4015_(32'hxxxxxxxx, { 32'h00000000, \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[1] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[2] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[3] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[4] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[5] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[6] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[7] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[8] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[9] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[10] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[11] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[12] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[13] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[14] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[15] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[16] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[17] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[18] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[19] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[20] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[21] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[22] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[23] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[24] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[25] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[26] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[27] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[28] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[29] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[30] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[31]  }, { _1429_, _1428_, _1427_, _1426_, _1425_, _1424_, _1423_, _1422_, _1421_, _1420_, _1419_, _1418_, _1417_, _1416_, _1415_, _1414_, _1413_, _1412_, _1411_, _1410_, _1409_, _1408_, _1407_, _1406_, _1405_, _1404_, _1403_, _1402_, _1401_, _1400_, _1399_, _1398_ });
  assign _1398_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h1f;
  assign _1399_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h1e;
  assign _1400_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h1d;
  assign _1401_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h1c;
  assign _1402_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h1b;
  assign _1403_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h1a;
  assign _1404_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h19;
  assign _1405_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h18;
  assign _1406_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h17;
  assign _1407_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h16;
  assign _1408_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h15;
  assign _1409_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h14;
  assign _1410_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h13;
  assign _1411_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h12;
  assign _1412_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h11;
  assign _1413_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h10;
  assign _1414_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h0f;
  assign _1415_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h0e;
  assign _1416_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h0d;
  assign _1417_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h0c;
  assign _1418_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h0b;
  assign _1419_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h0a;
  assign _1420_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h09;
  assign _1421_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h08;
  assign _1422_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h07;
  assign _1423_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h06;
  assign _1424_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h05;
  assign _1425_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h04;
  assign _1426_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h03;
  assign _1427_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h02;
  assign _1428_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] == 5'h01;
  assign _1429_ = ! \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178];
  function [31:0] _4048_;
    input [31:0] a;
    input [1023:0] b;
    input [31:0] s;
    casez (s) // synopsys parallel_case
      32'b???????????????????????????????1:
        _4048_ = b[31:0];
      32'b??????????????????????????????1?:
        _4048_ = b[63:32];
      32'b?????????????????????????????1??:
        _4048_ = b[95:64];
      32'b????????????????????????????1???:
        _4048_ = b[127:96];
      32'b???????????????????????????1????:
        _4048_ = b[159:128];
      32'b??????????????????????????1?????:
        _4048_ = b[191:160];
      32'b?????????????????????????1??????:
        _4048_ = b[223:192];
      32'b????????????????????????1???????:
        _4048_ = b[255:224];
      32'b???????????????????????1????????:
        _4048_ = b[287:256];
      32'b??????????????????????1?????????:
        _4048_ = b[319:288];
      32'b?????????????????????1??????????:
        _4048_ = b[351:320];
      32'b????????????????????1???????????:
        _4048_ = b[383:352];
      32'b???????????????????1????????????:
        _4048_ = b[415:384];
      32'b??????????????????1?????????????:
        _4048_ = b[447:416];
      32'b?????????????????1??????????????:
        _4048_ = b[479:448];
      32'b????????????????1???????????????:
        _4048_ = b[511:480];
      32'b???????????????1????????????????:
        _4048_ = b[543:512];
      32'b??????????????1?????????????????:
        _4048_ = b[575:544];
      32'b?????????????1??????????????????:
        _4048_ = b[607:576];
      32'b????????????1???????????????????:
        _4048_ = b[639:608];
      32'b???????????1????????????????????:
        _4048_ = b[671:640];
      32'b??????????1?????????????????????:
        _4048_ = b[703:672];
      32'b?????????1??????????????????????:
        _4048_ = b[735:704];
      32'b????????1???????????????????????:
        _4048_ = b[767:736];
      32'b???????1????????????????????????:
        _4048_ = b[799:768];
      32'b??????1?????????????????????????:
        _4048_ = b[831:800];
      32'b?????1??????????????????????????:
        _4048_ = b[863:832];
      32'b????1???????????????????????????:
        _4048_ = b[895:864];
      32'b???1????????????????????????????:
        _4048_ = b[927:896];
      32'b??1?????????????????????????????:
        _4048_ = b[959:928];
      32'b?1??????????????????????????????:
        _4048_ = b[991:960];
      32'b1???????????????????????????????:
        _4048_ = b[1023:992];
      default:
        _4048_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.rf_rdata_id [63:32] = _4048_(32'hxxxxxxxx, { 32'h00000000, \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[1] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[2] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[3] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[4] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[5] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[6] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[7] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[8] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[9] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[10] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[11] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[12] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[13] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[14] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[15] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[16] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[17] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[18] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[19] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[20] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[21] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[22] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[23] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[24] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[25] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[26] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[27] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[28] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[29] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[30] , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[31]  }, { _0865_, _1460_, _1459_, _1458_, _1457_, _1456_, _1455_, _1454_, _1453_, _1452_, _1451_, _1450_, _1449_, _1448_, _1447_, _1446_, _1445_, _1444_, _1443_, _1442_, _1441_, _1440_, _1439_, _1438_, _1437_, _1436_, _1435_, _1434_, _1433_, _1432_, _1431_, _1430_ });
  assign _1430_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h1f;
  assign _1431_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h1e;
  assign _1432_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h1d;
  assign _1433_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h1c;
  assign _1434_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h1b;
  assign _1435_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h1a;
  assign _1436_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h19;
  assign _1437_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h18;
  assign _1438_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h17;
  assign _1439_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h16;
  assign _1440_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h15;
  assign _1441_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h14;
  assign _1442_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h13;
  assign _1443_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h12;
  assign _1444_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h11;
  assign _1445_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h10;
  assign _1446_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h0f;
  assign _1447_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h0e;
  assign _1448_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h0d;
  assign _1449_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h0c;
  assign _1450_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h0b;
  assign _1451_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h0a;
  assign _1452_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h09;
  assign _1453_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h08;
  assign _1454_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h07;
  assign _1455_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h06;
  assign _1456_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h05;
  assign _1457_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h04;
  assign _1458_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h03;
  assign _1459_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h02;
  assign _1460_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] == 5'h01;
  assign _0865_ = ! \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173];
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [1] = _1367_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [2] = _1368_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [3] = _1369_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [4] = _1370_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [5] = _1371_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [6] = _1372_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [7] = _1373_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [8] = _1374_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [9] = _1375_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [10] = _1376_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [11] = _1377_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [12] = _1378_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [13] = _1379_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [14] = _1380_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [15] = _1381_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [16] = _1382_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [17] = _1383_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [18] = _1384_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [19] = _1385_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [20] = _1386_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [21] = _1387_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [22] = _1388_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [23] = _1389_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [24] = _1390_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [25] = _1391_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [26] = _1392_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [27] = _1393_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [28] = _1394_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [29] = _1395_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [30] = _1396_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_dec[0] [31] = _1397_ ? \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  : 1'h0;
  assign \cv32e40x_core_inst.sleep_unit_i.clock_en  = \cv32e40x_core_inst.sleep_unit_i.fetch_enable_q  && \cv32e40x_core_inst.sleep_unit_i.core_busy_q ;
  assign core_sleep_o = \cv32e40x_core_inst.sleep_unit_i.fetch_enable_q  && _1461_;
  assign _1461_ = ! \cv32e40x_core_inst.sleep_unit_i.clock_en ;
  assign _1462_ = \cv32e40x_core_inst.sleep_unit_i.if_busy_i  || \cv32e40x_core_inst.sleep_unit_i.ctrl_fsm_i [201];
  assign \cv32e40x_core_inst.sleep_unit_i.core_busy_d  = _1462_ || \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_busy_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.sleep_unit_i.core_busy_q  <= 1'h0;
    else \cv32e40x_core_inst.sleep_unit_i.core_busy_q  <= \cv32e40x_core_inst.sleep_unit_i.core_busy_d ;
  assign _1463_ = \cv32e40x_core_inst.load_store_unit_i.cnt_q  > 32'd0;
  assign _1464_ = \cv32e40x_core_inst.m_c_obi_instr_if.s_req  && _1533_;
  assign _1465_ = \cv32e40x_core_inst.if_stage_i.mpu_i.bus_trans_ready_i  && \cv32e40x_core_inst.if_stage_i.instruction_obi_i.next_state ;
  assign _1466_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.valid_i  && _1078_;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.if_valid_i  = _1466_ && _1077_;
  assign _1467_ = \cv32e40x_core_inst.if_stage_i.seq_ready  && \cv32e40x_core_inst.controller_i.controller_fsm_i.id_ready_i ;
  assign _1468_ = _1467_ && _1077_;
  assign _1470_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [190] && _1534_;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.id_valid_i  = _1470_ && _1535_;
  assign _1472_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_ready_i  && _1535_;
  assign _1474_ = _0293_ && _1590_;
  assign _1475_ = _0294_ && _0295_;
  assign _1476_ = \cv32e40x_core_inst.load_store_unit_i.lsu_sext_q  && \cv32e40x_core_inst.load_store_unit_i.rdata_aligned [7];
  assign _1477_ = \cv32e40x_core_inst.load_store_unit_i.lsu_sext_q  && \cv32e40x_core_inst.load_store_unit_i.rdata_aligned [15];
  assign _1478_ = \cv32e40x_core_inst.load_store_unit_i.count_down  && _1537_;
  assign _1479_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_valid_ex_i  && \cv32e40x_core_inst.ex_stage_i.lsu_first_op_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_trans_valid_i  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_valid_ex_i  && _1585_;
  assign \cv32e40x_core_inst.wb_stage_i.lsu_valid_i  = \cv32e40x_core_inst.load_store_unit_i.count_down  && \cv32e40x_core_inst.controller_i.bypass_i.lsu_en_wb ;
  assign \cv32e40x_core_inst.load_store_unit_i.done_0  = _1675_ && \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i ;
  assign \cv32e40x_core_inst.ex_stage_i.lsu_valid_i  = _1674_ && \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_valid_ex_i ;
  assign \cv32e40x_core_inst.ex_stage_i.lsu_ready_i  = \cv32e40x_core_inst.load_store_unit_i.done_0  && \cv32e40x_core_inst.ex_stage_i.lsu_last_op_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.ctrl_update  = \cv32e40x_core_inst.load_store_unit_i.done_0  && \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_valid_ex_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.count_up  = \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_trans_valid_i  && \cv32e40x_core_inst.load_store_unit_i.trans_ready ;
  assign \cv32e40x_core_inst.wb_stage_i.instr_valid  = \cv32e40x_core_inst.cs_registers_i.instr_valid  && _1538_;
  assign _1480_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [247] && _1539_;
  assign _1481_ = _1480_ && _1540_;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i  = _1481_ && \cv32e40x_core_inst.wb_stage_i.instr_valid ;
  assign _1482_ = \cv32e40x_core_inst.wb_stage_i.lsu_ready_i  && _0469_;
  assign _1483_ = _1482_ && _1538_;
  assign _1485_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [158] && \cv32e40x_core_inst.wb_stage_i.lsu_valid ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_valid_i  = _1562_ && \cv32e40x_core_inst.wb_stage_i.instr_valid ;
  assign _1486_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [158] && _1541_;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i  = _1486_ && \cv32e40x_core_inst.wb_stage_i.instr_valid ;
  assign _1473_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.sys_en_id_i  && \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [2];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sys_mret_id  = _1473_ && \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [190];
  assign _1487_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.alu_en_id_i  && \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [52];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.jmp_id  = _1487_ && \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [190];
  assign _1488_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.jmp_id  && _1542_;
  assign _1489_ = _1488_ && _1543_;
  assign _1490_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.jmp_id  && \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [151];
  assign _1491_ = _1490_ && _1544_;
  assign _1492_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.sys_mret_id  && _1544_;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.jump_taken_id  = \cv32e40x_core_inst.controller_i.controller_fsm_i.jump_in_id  && _1545_;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.clic_ptr_in_id  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [190] && \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [153];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.mret_ptr_in_id  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [190] && \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [152];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_in_ex  = _0732_ && \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [42];
  assign _1493_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_in_ex  && _1545_;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_taken_ex  = _1493_ && \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_decision_ex_i ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  = _1571_ && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [53];
  assign _1494_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [49] && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [46];
  assign _1496_ = _1495_ && _0303_;
  assign _1497_ = _1496_ && \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_interruptible ;
  assign _1498_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [49] && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [42];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.wfi_in_wb  = _1498_ && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [53];
  assign _1499_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [49] && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [41];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.wfe_in_wb  = _1499_ && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [53];
  assign _1500_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [49] && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [44];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.fencei_in_wb  = _1500_ && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [53];
  assign _1501_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [49] && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [45];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.fence_in_wb  = _1501_ && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [53];
  assign _1502_ = _0322_ && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [53];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.mret_in_wb  = _1502_ && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [2];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.mret_ptr_in_wb  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [56] && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [53];
  assign _1503_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [49] && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [48];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.dret_in_wb  = _1503_ && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [53];
  assign _1495_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [49] && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [47];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.ebreak_in_wb  = _1495_ && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [53];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.trigger_match_in_wb  = _1572_ && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [53];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.etrigger_in_wb  = \cv32e40x_core_inst.controller_i.controller_fsm_i.etrigger_wb_i  && \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_valid_i ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.clic_ptr_in_wb  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [57] && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [53];
  assign _1505_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event  && _1546_;
  assign _1506_ = _1505_ && _1547_;
  assign _1507_ = _1506_ && _1548_;
  assign _1508_ = _1507_ && _0468_;
  assign _1509_ = _1508_ && _0469_;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated  = _1509_ && _1538_;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C46A7  = \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated  && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [58];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C451  = \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated  && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [209];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_06A0A  = \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated  && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [208];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_31573  = \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated  && \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [207];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C215  = _1510_ && _1549_;
  assign _1510_ = \cv32e40x_core_inst.m_c_obi_data_if.s_req  && data_gnt_i;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_A1D3F  = _1510_ && \cv32e40x_core_inst.m_c_obi_data_if.req_payload [42];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_E0ABD  = _1550_ && \cv32e40x_core_inst.controller_i.controller_fsm_i.id_ready_i ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_AEAA2  = _1551_ && \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_ready_i ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_ECB01  = _1552_ && \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i ;
  assign _1511_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [12] && _1551_;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_557D1  = _1511_ && \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_ready_i ;
  assign _1512_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [11] && _1551_;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_D8609  = _1512_ && \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_ready_i ;
  assign _1513_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.pending_sync_debug  && \cv32e40x_core_inst.controller_i.controller_fsm_i.id_stage_haltable ;
  assign _1514_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.pending_sync_debug  && \cv32e40x_core_inst.controller_i.controller_fsm_i.sync_debug_allowed ;
  assign _1516_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [151] && \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [1];
  assign _1515_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [151] && _1536_;
  assign _1517_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.clic_ptr_in_id  && \cv32e40x_core_inst.controller_i.controller_fsm_i.id_valid_i ;
  assign _1518_ = _1517_ && \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_ready_i ;
  assign _1519_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.mret_in_wb  && _1554_;
  assign _1520_ = _1519_ && _1555_;
  assign _1521_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.mret_ptr_in_wb  && _1554_;
  assign _1522_ = _1521_ && _1555_;
  assign _1523_ = _1522_ && _1546_;
  assign _1504_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ebreak_in_wb  && \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q ;
  assign _1469_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.if_valid_i  && \cv32e40x_core_inst.controller_i.controller_fsm_i.id_ready_i ;
  assign _1524_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_taken_q  && \cv32e40x_core_inst.controller_i.controller_fsm_i.if_valid_i ;
  assign _1525_ = _1524_ && \cv32e40x_core_inst.controller_i.controller_fsm_i.id_ready_i ;
  assign _1526_ = _0730_ && \cv32e40x_core_inst.controller_i.controller_fsm_i.last_op_ex_i ;
  assign _1527_ = _1526_ && _1558_;
  assign _1528_ = _0469_ && _1538_;
  assign _1529_ = _1471_ && \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [2];
  assign _1530_ = _1529_ && _1559_;
  assign _1471_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.id_valid_i  && \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_ready_i ;
  assign _1531_ = _1471_ && _1584_;
  assign _1532_ = ! \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [198];
  assign _1533_ = ! instr_gnt_i;
  assign _1534_ = ! \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [15];
  assign _1535_ = ! \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [20];
  assign _1537_ = ! \cv32e40x_core_inst.load_store_unit_i.lsu_we_q ;
  assign \cv32e40x_core_inst.ex_stage_i.lsu_first_op_i  = ! \cv32e40x_core_inst.load_store_unit_i.split_q ;
  assign \cv32e40x_core_inst.ex_stage_i.lsu_last_op_i  = ! \cv32e40x_core_inst.ex_stage_i.lsu_split_i ;
  assign _1539_ = ! \cv32e40x_core_inst.wb_stage_i.lsu_exception ;
  assign _1540_ = ! _1664_;
  assign _1484_ = ! \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [158];
  assign _1541_ = ! \cv32e40x_core_inst.wb_stage_i.lsu_valid ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.id_stage_haltable  = ! _1564_;
  assign _1542_ = ! \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [151];
  assign _1543_ = ! \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [12];
  assign _1544_ = ! \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [10];
  assign _1547_ = ! \cv32e40x_core_inst.controller_i.controller_fsm_i.ebreak_in_wb ;
  assign _1548_ = ! \cv32e40x_core_inst.controller_i.controller_fsm_i.trigger_match_in_wb ;
  assign _0468_ = ! \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [13];
  assign _1549_ = ! \cv32e40x_core_inst.m_c_obi_data_if.req_payload [42];
  assign _1550_ = ! \cv32e40x_core_inst.controller_i.controller_fsm_i.if_valid_i ;
  assign _1552_ = ! \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_valid_i ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_90BD1  = ! \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_valid_i ;
  assign _1551_ = ! \cv32e40x_core_inst.controller_i.controller_fsm_i.id_valid_i ;
  assign _1553_ = ! \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_busy_i ;
  assign _1536_ = ! \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [1];
  assign _1545_ = ! \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_taken_q ;
  assign _1554_ = ! _0054_[0];
  assign _1555_ = ! _0055_[0];
  assign _1546_ = ! \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign _1556_ = ! _1504_;
  assign _1557_ = ! _1583_;
  assign _1558_ = ! \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [46];
  assign _1538_ = ! \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [17];
  assign _1559_ = ! _1584_;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_ready_i  = \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16] || _1468_;
  assign \cv32e40x_core_inst.abort_op_if  = _1560_ || \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.trigger_match_if ;
  assign _1560_ = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [2] || _1586_;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.id_ready_i  = \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [15] || _1472_;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.abort_op_id_i  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [0] || \cv32e40x_core_inst.id_stage_i.decoder_i.deassert_we_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.rdata_is_split  = _1474_ || _1475_;
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.misaligned_access_i  = \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.modified_access_i  || \cv32e40x_core_inst.load_store_unit_i.nonsplit_misaligned_halfword ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.modified_access_i  = \cv32e40x_core_inst.load_store_unit_i.split_q  || \cv32e40x_core_inst.ex_stage_i.lsu_split_i ;
  assign _1561_ = \cv32e40x_core_inst.load_store_unit_i.filter_resp_busy  || _1463_;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_busy_i  = _1561_ || \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_trans_valid_i ;
  assign \cv32e40x_core_inst.wb_stage_i.lsu_exception  = _1592_ || _1593_;
  assign \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [13] || _1483_;
  assign _1562_ = _1484_ || _1485_;
  assign _1563_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_valid_i  || \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [13];
  assign _1564_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.sequence_in_progress_id  || \cv32e40x_core_inst.controller_i.controller_fsm_i.clic_ptr_in_progress_id ;
  assign _1565_ = _1489_ || _1491_;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.jump_in_id  = _1565_ || _1492_;
  assign _1566_ = _1594_ || \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [61];
  assign _1567_ = _1566_ || \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [52];
  assign _1568_ = _1567_ || _1494_;
  assign _1569_ = _1568_ || _1497_;
  assign _1570_ = _1569_ || _1592_;
  assign _1571_ = _1570_ || _1593_;
  assign _1572_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [126] || _1664_;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.pending_sync_debug  = \cv32e40x_core_inst.controller_i.controller_fsm_i.trigger_match_in_wb  || _1504_;
  assign _1573_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [12] || \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [11];
  assign _1574_ = _1573_ || \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [10];
  assign _1575_ = _1574_ || \cv32e40x_core_inst.controller_i.bypass_i.sv2v_tmp_E5A17 ;
  assign _0112_ = _1575_ || _1513_;
  assign _1576_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [5] || \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [1];
  assign _1577_ = _1576_ || \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [0];
  assign _1578_ = _1577_ || \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [9];
  assign _1579_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.clic_ptr_in_wb  || \cv32e40x_core_inst.controller_i.controller_fsm_i.mret_ptr_in_wb ;
  assign _1580_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.wfi_in_wb  || \cv32e40x_core_inst.controller_i.controller_fsm_i.wfe_in_wb ;
  assign _1581_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.fencei_in_wb  || \cv32e40x_core_inst.controller_i.controller_fsm_i.fence_in_wb ;
  assign _1582_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.clic_ptr_in_id  || \cv32e40x_core_inst.controller_i.controller_fsm_i.mret_ptr_in_id ;
  assign _1583_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_cause_q [2] || \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_cause_q [1];
  assign _1584_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [1] || \cv32e40x_core_inst.controller_i.controller_fsm_i.abort_op_id_i ;
  assign _1585_ = \cv32e40x_core_inst.load_store_unit_i.cnt_q  < 32'd2;
  assign _1586_ = | \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [1:0];
  assign _1587_ = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [44:43] != 2'h3;
  assign _1588_ = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [42:41] != 2'h2;
  assign _1589_ = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [40:39] != 2'h2;
  assign _1590_ = | \cv32e40x_core_inst.load_store_unit_i.rdata_offset_q ;
  assign _1591_ = | \cv32e40x_core_inst.load_store_unit_i.trans [46:45];
  assign _1592_ = | \cv32e40x_core_inst.controller_i.controller_fsm_i.mpu_status_wb_i ;
  assign _1593_ = | \cv32e40x_core_inst.controller_i.controller_fsm_i.align_status_wb_i ;
  assign _1594_ = | \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [60:59];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sync_debug_allowed  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_cs  != 2'h2;
  assign _1596_ = { 31'h00000000, \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [126] } | \cv32e40x_core_inst.controller_i.controller_fsm_i.wpt_match_wb_i ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.controller_i.controller_fsm_i.clic_ptr_in_progress_id  <= 1'h0;
    else \cv32e40x_core_inst.controller_i.controller_fsm_i.clic_ptr_in_progress_id  <= _0000_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.controller_i.controller_fsm_i.sequence_in_progress_id  <= 1'h0;
    else \cv32e40x_core_inst.controller_i.controller_fsm_i.sequence_in_progress_id  <= _0002_;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_flush_ack_q  <= 1'h0;
    else \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_flush_ack_q  <= \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_flush_ack_n ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  <= 1'h0;
    else \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  <= \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.load_store_unit_i.cnt_q  <= 2'h0;
    else \cv32e40x_core_inst.load_store_unit_i.cnt_q  <= \cv32e40x_core_inst.load_store_unit_i.next_cnt ;
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) \cv32e40x_core_inst.if_stage_i.instruction_obi_i.state_q  <= 1'h0;
    else \cv32e40x_core_inst.if_stage_i.instruction_obi_i.state_q  <= \cv32e40x_core_inst.if_stage_i.instruction_obi_i.next_state ;
  assign _1597_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.clic_ptr_in_progress_id_clear  ? 1'h0 : 1'h1;
  assign _0000_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.clic_ptr_in_progress_id  ? _1597_ : 1'h0;
  assign _1598_ = _1531_ ? 1'h0 : 1'h1;
  assign _1599_ = _1530_ ? 1'h1 : 1'h0;
  assign _1600_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.sequence_in_progress_id  ? _1598_ : _1599_;
  assign _0002_ = \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [15] ? 1'h0 : _1600_;
  assign _1601_ = _1528_ ? 1'h0 : 1'hx;
  assign _0003_ = _1527_ ? 1'h1 : _1601_;
  assign _1602_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.fence_req_set  ? 1'h1 : 1'hx;
  assign _0001_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.fence_req_clr  ? 1'h0 : _1602_;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_taken_n  = _1525_ ? 1'h0 : _0033_;
  assign _0036_ = _1595_ ? _0037_ : 2'h0;
  assign _0121_[0] = _1595_ ? _1557_ : 1'h0;
  assign _0121_[2] = _1595_ ? 1'h1 : 1'h0;
  assign _0113_[32:1] = \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_cause_q [1] ? _1596_ : 32'd0;
  assign _0113_[0] = \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_cause_q [1] ? 1'h1 : 1'h0;
  function [32:0] _4336_;
    input [32:0] a;
    input [65:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4336_ = b[32:0];
      2'b1?:
        _4336_ = b[65:33];
      default:
        _4336_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [143:111] = _4336_(33'hxxxxxxxxx, { 33'h000000000, _0113_ }, { _0257_, _1603_ });
  function [0:0] _4337_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _4337_ = b[0:0];
      3'b?1?:
        _4337_ = b[1:1];
      3'b1??:
        _4337_ = b[2:2];
      default:
        _4337_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [38] = _4337_(1'hx, { _0029_[0], 1'h0, _1556_ }, { _1604_, _0258_, _1603_ });
  function [1:0] _4338_;
    input [1:0] a;
    input [3:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4338_ = b[1:0];
      2'b1?:
        _4338_ = b[3:2];
      default:
        _4338_ = a;
    endcase
  endfunction
  assign { \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [198], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [197] } = _4338_(2'hx, { _0035_[5:4], 2'h0 }, { _1604_, _0135_ });
  function [0:0] _4339_;
    input [0:0] a;
    input [3:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _4339_ = b[0:0];
      4'b??1?:
        _4339_ = b[1:1];
      4'b?1??:
        _4339_ = b[2:2];
      4'b1???:
        _4339_ = b[3:3];
      default:
        _4339_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i  = _4339_(1'hx, { _0020_[0], _0035_[6], 2'h1 }, { _1605_, _1604_, _0308_, _1603_ });
  function [1:0] _4340_;
    input [1:0] a;
    input [3:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4340_ = b[1:0];
      2'b1?:
        _4340_ = b[3:2];
      default:
        _4340_ = a;
    endcase
  endfunction
  assign { \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [19], \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [18] } = _4340_(2'hx, { _0028_[1:0], _1578_, 1'h0 }, { _1604_, _0135_ });
  function [0:0] _4341_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4341_ = b[0:0];
      2'b1?:
        _4341_ = b[1:1];
      default:
        _4341_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [17] = _4341_(1'hx, 2'h2, { _0308_, _0256_ });
  assign _0013_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.etrigger_in_wb  ? 2'h3 : _0063_;
  assign _0111_ = _1523_ ? \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_interruptible  : 1'h0;
  assign _0110_ = _1520_ ? \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_interruptible  : 1'h0;
  assign _0087_ = _1518_ ? 1'h1 : 1'h0;
  assign _0109_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_taken_q  ? 4'h0 : 4'he;
  assign _0108_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_taken_q  ? 1'h0 : 1'h1;
  assign _0027_ = _0356_ ? 1'hx : 1'h1;
  assign _0100_ = _0356_ ? 4'h0 : _0109_;
  assign _0099_ = _0356_ ? 1'h0 : _0108_;
  assign _0024_ = _1582_ ? _0027_ : 1'hx;
  assign _0098_ = _1582_ ? _0100_ : 4'h0;
  assign _0097_ = _1582_ ? _0099_ : 1'h0;
  assign _0095_[5:4] = \cv32e40x_core_inst.controller_i.controller_fsm_i.jump_taken_id  ? { 1'h0, _0096_[4] } : 2'h0;
  assign _0095_[3:0] = \cv32e40x_core_inst.controller_i.controller_fsm_i.jump_taken_id  ? _0096_[3:0] : _0098_;
  assign _0096_[3:0] = \cv32e40x_core_inst.controller_i.controller_fsm_i.sys_mret_id  ? 4'h1 : _1685_;
  assign _0096_[4] = \cv32e40x_core_inst.controller_i.controller_fsm_i.sys_mret_id  ? 1'h0 : _1515_;
  assign _0019_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.jump_taken_id  ? 1'h1 : _0024_;
  assign _0094_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.jump_taken_id  ? 1'h1 : _0097_;
  assign _0085_[5:4] = \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_taken_ex  ? 2'h0 : _0095_[5:4];
  assign _0017_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_taken_ex  ? 1'h1 : _0019_;
  assign _0084_[0] = \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_taken_ex  ? 1'h1 : 1'h0;
  assign _0084_[1] = \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_taken_ex  ? 1'h1 : _0094_;
  assign _0085_[3:0] = \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_taken_ex  ? 4'h5 : _0095_[3:0];
  assign _0082_[2] = \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_flush_ack_q  ? 1'h1 : _0084_[1];
  assign _0083_[5:4] = \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_flush_ack_q  ? 2'h0 : _0085_[5:4];
  assign _0034_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_flush_ack_q  ? _0026_ : 2'h3;
  assign _0082_[0] = \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_flush_ack_q  ? 1'h1 : 1'h0;
  assign _0082_[1] = \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_flush_ack_q  ? 1'h1 : _0084_[0];
  assign _0015_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_flush_ack_q  ? 1'hx : _0017_;
  assign _0083_[3:0] = \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_flush_ack_q  ? 4'h6 : _0085_[3:0];
  assign _0080_[2] = \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_wr_in_wb_flush_i  ? 1'h1 : \cv32e40x_core_inst.controller_i.controller_fsm_i.single_step_halt_if_q ;
  assign _0012_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_wr_in_wb_flush_i  ? 1'h1 : 1'h0;
  assign _0080_[0] = \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_wr_in_wb_flush_i  ? 1'h1 : _1578_;
  assign _0080_[1] = \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_wr_in_wb_flush_i  ? 1'h1 : _0112_;
  assign _0032_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_wr_in_wb_flush_i  ? 2'h3 : _0034_;
  assign _0011_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_wr_in_wb_flush_i  ? 1'hx : _0015_;
  assign _0081_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_wr_in_wb_flush_i  ? 7'h00 : { _0082_[2], _0083_[5:0] };
  assign _0079_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_wr_in_wb_flush_i  ? 3'h0 : _0082_;
  assign _0078_[6] = \cv32e40x_core_inst.controller_i.controller_fsm_i.dret_in_wb  ? 1'h1 : _0081_[6];
  assign _0127_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.dret_in_wb  ? 1'h0 : 1'hx;
  assign _0077_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.dret_in_wb  ? 1'h1 : 1'h0;
  assign _0078_[5:4] = \cv32e40x_core_inst.controller_i.controller_fsm_i.dret_in_wb  ? 2'h0 : _0081_[5:4];
  assign _0074_[2] = \cv32e40x_core_inst.controller_i.controller_fsm_i.dret_in_wb  ? 1'h1 : _0079_[2];
  assign _0125_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.dret_in_wb  ? 1'h0 : \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q ;
  assign _0074_[0] = \cv32e40x_core_inst.controller_i.controller_fsm_i.dret_in_wb  ? 1'h1 : _0079_[0];
  assign _0074_[1] = \cv32e40x_core_inst.controller_i.controller_fsm_i.dret_in_wb  ? 1'h1 : _0079_[1];
  assign _0123_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.dret_in_wb  ? 1'h0 : _0012_;
  assign _0030_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.dret_in_wb  ? 2'h3 : _0032_;
  assign _0122_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.dret_in_wb  ? 1'hx : _0011_;
  assign _0078_[3:0] = \cv32e40x_core_inst.controller_i.controller_fsm_i.dret_in_wb  ? 4'h2 : _0081_[3:0];
  assign _0076_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.dret_in_wb  ? { \cv32e40x_core_inst.controller_i.controller_fsm_i.single_step_halt_if_q , _0112_, _1578_ } : _0080_;
  assign _0070_[6] = _1581_ ? _0071_[2] : _0078_[6];
  assign _0126_ = _1606_ ? 1'h0 : _1553_;
  assign _0073_ = _1606_ ? 4'h6 : 4'h0;
  assign _0023_ = _1606_ ? _0026_ : 2'h3;
  assign _0072_ = _1606_ ? 1'h0 : 1'h1;
  assign _0022_ = _1581_ ? _0023_ : _0030_;
  assign _0118_ = _1581_ ? _0071_[2] : 1'h1;
  assign _0119_ = _1581_ ? _0126_ : 1'h0;
  assign _0070_[5:4] = _1581_ ? 2'h0 : _0078_[5:4];
  assign _0068_[3] = _1581_ ? 1'h1 : _0076_[2];
  assign _0068_[0] = _1581_ ? _0072_ : 1'h0;
  assign _0067_ = _1581_ ? { _0071_[2], _0071_[2], _0071_[2] } : _0074_;
  assign _0071_[2] = _1606_ ? 1'h1 : 1'h0;
  assign _0068_[1] = _1581_ ? 1'h1 : _0076_[0];
  assign _0068_[2] = _1581_ ? 1'h1 : _0076_[1];
  assign _0115_ = _1581_ ? 1'h0 : _0123_;
  assign _0114_ = _1581_ ? 1'hx : _0122_;
  assign _0120_ = _1581_ ? 1'hx : _0127_;
  assign _0117_ = _1581_ ? \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  : _0125_;
  assign _0070_[3:0] = _1581_ ? _0073_ : _0078_[3:0];
  assign _0069_ = _1581_ ? 1'h0 : _0077_;
  assign _0061_[3:1] = _1580_ ? { \cv32e40x_core_inst.controller_i.controller_fsm_i.single_step_halt_if_q , _0112_, _1578_ } : _0068_[3:1];
  assign _0066_[7] = _1580_ ? 1'h0 : 1'h1;
  assign _0124_ = _1580_ ? 2'h2 : 2'hx;
  assign _0102_ = _1580_ ? 1'h0 : _0115_;
  assign _0021_ = _1580_ ? 2'h3 : _0022_;
  assign _0104_ = _1580_ ? 1'h1 : _0118_;
  assign _0105_ = _1580_ ? 1'h0 : _0119_;
  assign _0101_ = _1580_ ? 1'hx : _0114_;
  assign _0106_ = _1580_ ? 1'hx : _0120_;
  assign _0103_ = _1580_ ? \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  : _0117_;
  assign _0066_[6:0] = _1580_ ? 7'h00 : _0070_;
  assign _0062_ = _1580_ ? 1'h0 : _0069_;
  assign _0061_[0] = _1580_ ? 1'h1 : _0068_[0];
  assign _0060_ = _1580_ ? 3'h0 : _0067_;
  assign _0059_[7] = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  ? 1'h1 : _0066_[7];
  assign _0059_[5:4] = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  ? 2'h0 : _0066_[5:4];
  assign _0057_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  ? \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  : 11'h000;
  assign _0056_[0] = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  ? \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_interruptible  : 1'h0;
  assign _0018_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  ? 2'h3 : _0021_;
  assign _0054_[3] = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  ? 1'h1 : _0060_[2];
  assign _0059_[6] = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  ? 1'h1 : _0066_[6];
  assign _1607_ = _1514_ ? 1'hx : 1'h0;
  assign _0054_[0] = _1604_ ? _1607_ : 1'hx;
  assign _0058_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  ? _1579_ : 1'h0;
  assign _0054_[1] = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  ? 1'h1 : _0060_[0];
  assign _0054_[2] = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  ? 1'h1 : _0060_[1];
  assign _0088_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  ? 1'h0 : _0102_;
  assign _0090_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  ? 1'h1 : _0104_;
  assign _0091_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  ? 1'h0 : _0105_;
  assign _0086_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  ? 1'hx : _0101_;
  assign _0092_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  ? 1'hx : _0106_;
  assign _0089_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  ? \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  : _0103_;
  assign _0116_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  ? 2'hx : _0124_;
  assign _0059_[3:0] = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  ? _1683_ : _0066_[3:0];
  assign _0056_[1] = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  ? 1'h0 : _0062_;
  assign _1608_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb  ? { \cv32e40x_core_inst.controller_i.controller_fsm_i.single_step_halt_if_q , _0112_, _1578_, 1'h0 } : _0061_;
  assign _1609_ = _1514_ ? 4'hx : _1608_;
  assign _0055_ = _1604_ ? _1609_ : 4'hx;
  assign _0029_[3] = _1514_ ? 1'h0 : _0110_;
  assign _0029_[2] = _1514_ ? 1'h0 : _0111_;
  assign _0029_[14:4] = _1514_ ? 11'h000 : _0057_;
  assign _0029_[1:0] = _1514_ ? 2'h0 : _0056_;
  assign _0063_ = _1514_ ? 2'h3 : _0116_;
  assign _0028_[0] = _1514_ ? 1'h1 : _0055_[0];
  assign _0028_[1] = _1514_ ? 1'h1 : _0055_[1];
  assign _0028_[2] = _1514_ ? 1'h1 : _0055_[2];
  assign _0039_ = _1514_ ? 1'h0 : _0087_;
  assign _0040_ = _1514_ ? 1'h0 : _0088_;
  assign _0016_ = _1514_ ? 2'h3 : _0018_;
  assign _0043_ = _1514_ ? 1'h1 : _0090_;
  assign _0044_ = _1514_ ? 1'h0 : _0091_;
  assign _0038_ = _1514_ ? 1'hx : _0086_;
  assign _0045_ = _1514_ ? 1'hx : _0092_;
  assign _0042_ = _1514_ ? \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  : _0089_;
  assign _0035_ = _1514_ ? 8'h80 : _0059_;
  assign _0031_[0] = _1514_ ? 1'h0 : _0058_;
  assign _0028_[3] = _1514_ ? 1'h1 : _0055_[3];
  assign _0025_ = _1514_ ? 4'h0 : _0054_;
  assign _0026_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [42] ? 2'h2 : _0014_;
  assign _0037_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [53] ? 2'h3 : _0026_;
  assign _0014_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [190] ? 2'h1 : 2'h0;
  function [13:0] _4475_;
    input [13:0] a;
    input [27:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4475_ = b[13:0];
      2'b1?:
        _4475_ = b[27:14];
      default:
        _4475_ = a;
    endcase
  endfunction
  assign { \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [52:42], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [41:39] } = _4475_(14'hxxxx, { _0029_[14:1], 14'h0000 }, { _1604_, _0135_ });
  function [0:0] _4476_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4476_ = b[0:0];
      2'b1?:
        _4476_ = b[1:1];
      default:
        _4476_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [20] = _4476_(1'hx, { _0028_[2], _0112_ }, { _1604_, _0135_ });
  assign _0041_ = \cv32e40x_core_inst.sleep_unit_i.fetch_enable_q  ? 2'h1 : 2'hx;
  assign _0020_ = \cv32e40x_core_inst.sleep_unit_i.fetch_enable_q  ? 2'h3 : 2'h0;
  function [1:0] _4479_;
    input [1:0] a;
    input [5:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _4479_ = b[1:0];
      3'b?1?:
        _4479_ = b[3:2];
      3'b1??:
        _4479_ = b[5:4];
      default:
        _4479_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_ns  = _4479_(2'hx, { _0041_, _0013_, 2'h1 }, { _1605_, _1604_, _1603_ });
  function [3:0] _4480_;
    input [3:0] a;
    input [11:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _4480_ = b[3:0];
      3'b?1?:
        _4480_ = b[7:4];
      3'b1??:
        _4480_ = b[11:8];
      default:
        _4480_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193] = _4480_(4'hx, { _0035_[3:0], 8'h0a }, { _1604_, _0258_, _1603_ });
  function [0:0] _4481_;
    input [0:0] a;
    input [3:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _4481_ = b[0:0];
      4'b??1?:
        _4481_ = b[1:1];
      4'b?1??:
        _4481_ = b[2:2];
      4'b1???:
        _4481_ = b[3:3];
      default:
        _4481_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [200] = _4481_(1'hx, { _0020_[1], _0035_[7], 2'h1 }, { _1605_, _1604_, _0308_, _1603_ });
  function [0:0] _4482_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4482_ = b[0:0];
      2'b1?:
        _4482_ = b[1:1];
      default:
        _4482_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.clic_ptr_in_progress_id_clear  = _4482_(1'hx, { _0039_, 1'h0 }, { _1604_, _0135_ });
  function [0:0] _4483_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4483_ = b[0:0];
      2'b1?:
        _4483_ = b[1:1];
      default:
        _4483_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_flush_ack_n  = _4483_(1'hx, { _0040_, 1'h0 }, { _1604_, _0135_ });
  function [1:0] _4484_;
    input [1:0] a;
    input [5:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _4484_ = b[1:0];
      3'b?1?:
        _4484_ = b[3:2];
      3'b1??:
        _4484_ = b[5:4];
      default:
        _4484_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.pipe_pc_mux_ctrl  = _4484_(2'hx, { _0016_, 2'h3, _0036_ }, { _1604_, _0258_, _1603_ });
  function [0:0] _4485_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4485_ = b[0:0];
      2'b1?:
        _4485_ = b[1:1];
      default:
        _4485_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.fence_req_clr  = _4485_(1'hx, { _0043_, 1'h1 }, { _1604_, _0135_ });
  function [0:0] _4486_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4486_ = b[0:0];
      2'b1?:
        _4486_ = b[1:1];
      default:
        _4486_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.fence_req_set  = _4486_(1'hx, { _0044_, 1'h0 }, { _1604_, _0135_ });
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause  = _0283_ ? 11'h000 : 11'hxxx;
  assign _0033_ = _1604_ ? _0038_ : 1'hx;
  function [0:0] _4489_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4489_ = b[0:0];
      2'b1?:
        _4489_ = b[1:1];
      default:
        _4489_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.single_step_halt_if_n  = _4489_(1'hx, { _0045_, 1'h0 }, { _1604_, _1603_ });
  function [0:0] _4490_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _4490_ = b[0:0];
      3'b?1?:
        _4490_ = b[1:1];
      3'b1??:
        _4490_ = b[2:2];
      default:
        _4490_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n  = _4490_(1'hx, { _0042_, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , 1'h1 }, { _1604_, _0258_, _1603_ });
  function [3:0] _4491_;
    input [3:0] a;
    input [11:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _4491_ = b[3:0];
      3'b?1?:
        _4491_ = b[7:4];
      3'b1??:
        _4491_ = b[11:8];
      default:
        _4491_ = a;
    endcase
  endfunction
  assign { \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16], \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [15], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [14], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [13] } = _4491_(4'hx, { _0025_, 5'h01, _0121_[2], _0121_[2], _0121_[0] }, { _1604_, _0258_, _1603_ });
  function [0:0] _4492_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4492_ = b[0:0];
      2'b1?:
        _4492_ = b[1:1];
      default:
        _4492_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.dbg_ack  = _4492_(1'hx, 2'h1, { _0257_, _1603_ });
  function [0:0] _4493_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4493_ = b[0:0];
      2'b1?:
        _4493_ = b[1:1];
      default:
        _4493_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.sleep_unit_i.ctrl_fsm_i [201] = _4493_(1'hx, 2'h1, { _0308_, _0256_ });
  function [1:0] _4494_;
    input [1:0] a;
    input [3:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4494_ = b[1:0];
      2'b1?:
        _4494_ = b[3:2];
      default:
        _4494_ = a;
    endcase
  endfunction
  assign { \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [73], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [72] } = _4494_(2'hx, { 1'h0, _0031_[0], 2'h0 }, { _1604_, _0135_ });
  function [0:0] _4495_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4495_ = b[0:0];
      2'b1?:
        _4495_ = b[1:1];
      default:
        _4495_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.halt_i  = _4495_(1'hx, { _0028_[3], \cv32e40x_core_inst.controller_i.controller_fsm_i.single_step_halt_if_q  }, { _1604_, _0135_ });
  assign _1603_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_cs  == 2'h3;
  assign _0308_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_cs  == 2'h2;
  assign _1604_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_cs  == 2'h1;
  assign _1605_ = ! \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_cs ;
  function [31:0] _4500_;
    input [31:0] a;
    input [127:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _4500_ = b[31:0];
      4'b??1?:
        _4500_ = b[63:32];
      4'b?1??:
        _4500_ = b[95:64];
      4'b1???:
        _4500_ = b[127:96];
      default:
        _4500_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [105:74] = _4500_(32'hxxxxxxxx, { \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [125:94], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [114:83], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [149:118], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q  }, { _1613_, _1612_, _1611_, _1610_ });
  assign _1610_ = ! \cv32e40x_core_inst.controller_i.controller_fsm_i.pipe_pc_mux_ctrl ;
  assign _1611_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.pipe_pc_mux_ctrl  == 2'h1;
  assign _1612_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.pipe_pc_mux_ctrl  == 2'h2;
  assign _1613_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.pipe_pc_mux_ctrl  == 2'h3;
  assign _1614_ = \cv32e40x_core_inst.wb_stage_i.lsu_valid_i  ? 1'h1 : 1'hx;
  assign _0009_ = _1563_ ? 1'h0 : _1614_;
  assign _1615_ = \cv32e40x_core_inst.wb_stage_i.lsu_valid_i  ? \cv32e40x_core_inst.controller_i.controller_fsm_i.align_status_wb_i  : 2'hx;
  assign _0007_ = _1563_ ? 2'h0 : _1615_;
  assign _1616_ = \cv32e40x_core_inst.wb_stage_i.lsu_valid_i  ? \cv32e40x_core_inst.controller_i.controller_fsm_i.wpt_match_wb_i  : 32'hxxxxxxxx;
  assign _0010_ = _1563_ ? 32'd0 : _1616_;
  assign _1617_ = \cv32e40x_core_inst.wb_stage_i.lsu_valid_i  ? \cv32e40x_core_inst.controller_i.controller_fsm_i.mpu_status_wb_i  : 2'hx;
  assign _0008_ = _1563_ ? 2'h0 : _1617_;
  function [1:0] _4513_;
    input [1:0] a;
    input [5:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _4513_ = b[1:0];
      3'b?1?:
        _4513_ = b[3:2];
      3'b1??:
        _4513_ = b[5:4];
      default:
        _4513_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.load_store_unit_i.next_cnt  = _4513_(2'hx, { _1665_, _0130_, \cv32e40x_core_inst.load_store_unit_i.cnt_q  }, { _1620_, _1619_, _0255_ });
  assign _1618_ = { \cv32e40x_core_inst.load_store_unit_i.count_up , \cv32e40x_core_inst.load_store_unit_i.count_down  } == 2'h3;
  assign _1619_ = { \cv32e40x_core_inst.load_store_unit_i.count_up , \cv32e40x_core_inst.load_store_unit_i.count_down  } == 2'h2;
  assign _1620_ = { \cv32e40x_core_inst.load_store_unit_i.count_up , \cv32e40x_core_inst.load_store_unit_i.count_down  } == 2'h1;
  assign _1621_ = ! { \cv32e40x_core_inst.load_store_unit_i.count_up , \cv32e40x_core_inst.load_store_unit_i.count_down  };
  assign _0053_ = \cv32e40x_core_inst.load_store_unit_i.trans [45] ? 1'h1 : 1'h0;
  assign _0065_ = _0299_ ? 1'h1 : 1'h0;
  assign _0052_ = _1591_ ? 1'h1 : 1'h0;
  function [0:0] _4521_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4521_ = b[0:0];
      2'b1?:
        _4521_ = b[1:1];
      default:
        _4521_ = a;
    endcase
  endfunction
  assign _0048_ = _4521_(1'h0, { _0052_, _0065_ }, { _1623_, _1622_ });
  assign _1623_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [171:170] == 2'h2;
  assign _0049_ = _1622_ ? _0053_ : 1'h0;
  assign \cv32e40x_core_inst.load_store_unit_i.nonsplit_misaligned_halfword  = _1479_ ? _0049_ : 1'h0;
  assign \cv32e40x_core_inst.ex_stage_i.lsu_split_i  = _1479_ ? _0048_ : 1'h0;
  assign _1624_ = \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.modified_access_i  ? data_rdata_i : \cv32e40x_core_inst.load_store_unit_i.rdata_ext ;
  function [31:0] _4527_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4527_ = b[31:0];
      2'b1?:
        _4527_ = b[63:32];
      default:
        _4527_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.load_store_unit_i.rdata_ext  = _4527_(\cv32e40x_core_inst.load_store_unit_i.rdata_aligned [31:0], { _1476_, _1476_, _1476_, _1476_, _1476_, _1476_, _1476_, _1476_, _1476_, _1476_, _1476_, _1476_, _1476_, _1476_, _1476_, _1476_, _1476_, _1476_, _1476_, _1476_, _1476_, _1476_, _1476_, _1476_, \cv32e40x_core_inst.load_store_unit_i.rdata_aligned [7:0], _1477_, _1477_, _1477_, _1477_, _1477_, _1477_, _1477_, _1477_, _1477_, _1477_, _1477_, _1477_, _1477_, _1477_, _1477_, _1477_, \cv32e40x_core_inst.load_store_unit_i.rdata_aligned [15:0] }, { _1625_, _0294_ });
  assign _0294_ = \cv32e40x_core_inst.load_store_unit_i.lsu_size_q  == 2'h1;
  assign _1625_ = ! \cv32e40x_core_inst.load_store_unit_i.lsu_size_q ;
  assign _1626_ = \cv32e40x_core_inst.load_store_unit_i.ctrl_update  ? \cv32e40x_core_inst.ex_stage_i.lsu_split_i  : 1'hx;
  assign _0006_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_valid_ex_i  ? _1626_ : 1'h0;
  function [31:0] _4532_;
    input [31:0] a;
    input [127:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _4532_ = b[31:0];
      4'b??1?:
        _4532_ = b[63:32];
      4'b?1??:
        _4532_ = b[95:64];
      4'b1???:
        _4532_ = b[127:96];
      default:
        _4532_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.load_store_unit_i.wdata  = _4532_(32'hxxxxxxxx, { \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [279:248], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [271:248], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [279:272], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [263:248], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [279:264], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [255:248], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [279:256] }, { _1629_, _1628_, _1627_, _0299_ });
  function [3:0] _4533_;
    input [3:0] a;
    input [15:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _4533_ = b[3:0];
      4'b??1?:
        _4533_ = b[7:4];
      4'b?1??:
        _4533_ = b[11:8];
      4'b1???:
        _4533_ = b[15:12];
      default:
        _4533_ = a;
    endcase
  endfunction
  assign _0107_ = _4533_(4'hx, 16'h0137, { _1629_, _1628_, _1627_, _0299_ });
  function [3:0] _4534_;
    input [3:0] a;
    input [15:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _4534_ = b[3:0];
      4'b??1?:
        _4534_ = b[7:4];
      4'b?1??:
        _4534_ = b[11:8];
      4'b1???:
        _4534_ = b[15:12];
      default:
        _4534_ = a;
    endcase
  endfunction
  assign _0093_ = _4534_(4'hx, 16'hfec8, { _1629_, _1628_, _1627_, _0299_ });
  assign _0075_ = \cv32e40x_core_inst.load_store_unit_i.split_q  ? _0107_ : _0093_;
  function [3:0] _4536_;
    input [3:0] a;
    input [15:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _4536_ = b[3:0];
      4'b??1?:
        _4536_ = b[7:4];
      4'b?1??:
        _4536_ = b[11:8];
      4'b1???:
        _4536_ = b[15:12];
      default:
        _4536_ = a;
    endcase
  endfunction
  assign _0064_ = _4536_(4'hx, 16'h36c8, { _1629_, _1628_, _1627_, _0299_ });
  assign _0051_ = \cv32e40x_core_inst.load_store_unit_i.split_q  ? 4'h1 : _0064_;
  function [3:0] _4538_;
    input [3:0] a;
    input [15:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _4538_ = b[3:0];
      4'b??1?:
        _4538_ = b[7:4];
      4'b?1??:
        _4538_ = b[11:8];
      4'b1???:
        _4538_ = b[15:12];
      default:
        _4538_ = a;
    endcase
  endfunction
  assign _0047_ = _4538_(4'hx, 16'h1248, { _1629_, _1628_, _1627_, _0299_ });
  assign _0299_ = \cv32e40x_core_inst.load_store_unit_i.trans [46:45] == 2'h3;
  assign _1627_ = \cv32e40x_core_inst.load_store_unit_i.trans [46:45] == 2'h2;
  assign _1628_ = \cv32e40x_core_inst.load_store_unit_i.trans [46:45] == 2'h1;
  assign _1629_ = ! \cv32e40x_core_inst.load_store_unit_i.trans [46:45];
  function [3:0] _4543_;
    input [3:0] a;
    input [7:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4543_ = b[3:0];
      2'b1?:
        _4543_ = b[7:4];
      default:
        _4543_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i  = _4543_(_0075_, { _0047_, _0051_ }, { _1630_, _1622_ });
  assign _1622_ = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [171:170] == 2'h1;
  assign _1630_ = ! \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [171:170];
  assign _1631_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [154] ? { 16'h0000, \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [117:102] } : \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:158];
  assign _1632_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_ready_i  ? 1'h0 : 1'hx;
  assign _0004_[42] = _1471_ ? 1'h1 : _1632_;
  assign \cv32e40x_core_inst.id_stage_i.operand_c  = _1633_ ? \cv32e40x_core_inst.id_stage_i.bch_target  : \cv32e40x_core_inst.id_stage_i.operand_b_fw ;
  assign _1633_ = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [40:39] == 2'h1;
  function [31:0] _4551_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4551_ = b[31:0];
      2'b1?:
        _4551_ = b[63:32];
      default:
        _4551_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.operand_b_fw  = _4551_(\cv32e40x_core_inst.rf_rdata_id [31:0], { \cv32e40x_core_inst.ex_stage_i.rf_wdata_o , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i  }, { _1635_, _1634_ });
  assign _1634_ = \cv32e40x_core_inst.id_stage_i.ctrl_byp_i [15:14] == 2'h2;
  assign _1635_ = \cv32e40x_core_inst.id_stage_i.ctrl_byp_i [15:14] == 2'h1;
  assign \cv32e40x_core_inst.id_stage_i.operand_b  = _1636_ ? \cv32e40x_core_inst.id_stage_i.imm_b  : \cv32e40x_core_inst.id_stage_i.operand_b_fw ;
  assign _1636_ = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [42:41] == 2'h1;
  function [31:0] _4556_;
    input [31:0] a;
    input [127:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _4556_ = b[31:0];
      4'b??1?:
        _4556_ = b[63:32];
      4'b?1??:
        _4556_ = b[95:64];
      4'b1???:
        _4556_ = b[127:96];
      default:
        _4556_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.imm_b  = _4556_(32'hxxxxxxxx, { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:178], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:183], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [169:165], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:170], 12'h000, _1669_ }, { _1640_, _1639_, _1638_, _1637_ });
  assign _1637_ = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [37:36] == 2'h3;
  assign _1638_ = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [37:36] == 2'h2;
  assign _1639_ = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [37:36] == 2'h1;
  assign _1640_ = ! \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [37:36];
  function [31:0] _4561_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4561_ = b[31:0];
      2'b1?:
        _4561_ = b[63:32];
      default:
        _4561_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.jalr_fw_i  = _4561_(32'hxxxxxxxx, { \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [241:210], \cv32e40x_core_inst.rf_rdata_id [63:32] }, { \cv32e40x_core_inst.id_stage_i.ctrl_byp_i [13], _1641_ });
  assign _1641_ = ~ \cv32e40x_core_inst.id_stage_i.ctrl_byp_i [13];
  function [31:0] _4563_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4563_ = b[31:0];
      2'b1?:
        _4563_ = b[63:32];
      default:
        _4563_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.operand_a_fw  = _4563_(\cv32e40x_core_inst.rf_rdata_id [63:32], { \cv32e40x_core_inst.ex_stage_i.rf_wdata_o , \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i  }, { _1643_, _1642_ });
  assign _1642_ = \cv32e40x_core_inst.id_stage_i.ctrl_byp_i [17:16] == 2'h2;
  assign _1643_ = \cv32e40x_core_inst.id_stage_i.ctrl_byp_i [17:16] == 2'h1;
  function [31:0] _4566_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4566_ = b[31:0];
      2'b1?:
        _4566_ = b[63:32];
      default:
        _4566_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.imm_a  = _4566_(32'hxxxxxxxx, { 27'h0000000, \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173], 32'h00000000 }, { _1644_, \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [38] });
  assign _1644_ = ~ \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [38];
  function [31:0] _4568_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4568_ = b[31:0];
      2'b1?:
        _4568_ = b[63:32];
      default:
        _4568_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.id_stage_i.operand_a  = _4568_(\cv32e40x_core_inst.id_stage_i.operand_a_fw , { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [149:118], \cv32e40x_core_inst.id_stage_i.imm_a  }, { _1646_, _1645_ });
  assign _1645_ = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [44:43] == 2'h2;
  assign _1646_ = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [44:43] == 2'h1;
  assign _1647_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i  ? \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [1:0] : _1668_[1:0];
  assign _1648_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i  ? \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [2] : _1668_[2];
  assign _1649_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_tbljmp_ptr_q  ? 1'hx : \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_tbljmp_o ;
  assign _1650_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_tbljmp_ptr_q  ? 1'hx : \cv32e40x_core_inst.if_stage_i.seq_pushpop ;
  assign _1651_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_tbljmp_ptr_q  ? 1'hx : \cv32e40x_core_inst.if_stage_i.instr_compressed ;
  assign _1653_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.id_ready_i  ? 1'h0 : 1'hx;
  assign _0005_[190] = _1469_ ? 1'h1 : _1653_;
  assign \cv32e40x_core_inst.m_c_obi_instr_if.req_payload  = \cv32e40x_core_inst.if_stage_i.instruction_obi_i.state_q  ? { \cv32e40x_core_inst.if_stage_i.instruction_obi_i.obi_a_req_q [37:5], 1'h0, \cv32e40x_core_inst.if_stage_i.instruction_obi_i.obi_a_req_q [3:2], 1'h0, \cv32e40x_core_inst.if_stage_i.instruction_obi_i.obi_a_req_q [0] } : { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_o , \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.pma_cfg [1], 1'h0, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i , 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n  };
  assign \cv32e40x_core_inst.m_c_obi_instr_if.s_req  = \cv32e40x_core_inst.if_stage_i.instruction_obi_i.state_q  ? 1'h1 : \cv32e40x_core_inst.if_stage_i.bus_trans_valid ;
  assign _0050_ = instr_gnt_i ? 1'h0 : 1'h1;
  assign _0046_ = _1464_ ? 1'h1 : 1'h0;
  function [0:0] _4582_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _4582_ = b[0:0];
      2'b1?:
        _4582_ = b[1:1];
      default:
        _4582_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.if_stage_i.instruction_obi_i.next_state  = _4582_(1'hx, { _0046_, _0050_ }, { \cv32e40x_core_inst.if_stage_i.mpu_i.bus_trans_ready_i , \cv32e40x_core_inst.if_stage_i.instruction_obi_i.state_q  });
  function [31:0] _4583_;
    input [31:0] a;
    input [351:0] b;
    input [10:0] s;
    casez (s) // synopsys parallel_case
      11'b??????????1:
        _4583_ = b[31:0];
      11'b?????????1?:
        _4583_ = b[63:32];
      11'b????????1??:
        _4583_ = b[95:64];
      11'b???????1???:
        _4583_ = b[127:96];
      11'b??????1????:
        _4583_ = b[159:128];
      11'b?????1?????:
        _4583_ = b[191:160];
      11'b????1??????:
        _4583_ = b[223:192];
      11'b???1???????:
        _4583_ = b[255:224];
      11'b??1????????:
        _4583_ = b[287:256];
      11'b?1?????????:
        _4583_ = b[319:288];
      11'b1??????????:
        _4583_ = b[351:320];
      default:
        _4583_ = a;
    endcase
  endfunction
  assign \cv32e40x_core_inst.if_stage_i.branch_addr_n  = _4583_(32'd131072, { \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [279:248], \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [31:2], _0131_, 1'h0, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [105:74], \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [31:7], 7'h00, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [31:7], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_5381E , 66'h01a11080000000000, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [31:7], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_63C61 , 27'h0000000, \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [4:0], 2'h0, \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [34:3], \cv32e40x_core_inst.id_stage_i.bch_target  }, { _1662_, _1198_, _1660_, _1659_, _1658_, _1657_, _0280_, _0307_, _1197_, _1655_, _0279_ });
  assign _1654_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193] == 4'hf;
  assign _1655_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193] == 4'he;
  assign _1656_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193] == 4'hb;
  assign _1657_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193] == 4'ha;
  assign _1658_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193] == 4'h9;
  assign _1659_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193] == 4'h8;
  assign _1660_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193] == 4'h6;
  assign _1661_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193] == 4'h2;
  assign _1662_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193] == 4'h5;
  assign _1663_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193] == 4'h4;
  assign _1664_ = | \cv32e40x_core_inst.controller_i.controller_fsm_i.wpt_match_wb_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.rdata_aligned  = \cv32e40x_core_inst.load_store_unit_i.rdata_full  >> { 27'h0000000, \cv32e40x_core_inst.load_store_unit_i.rdata_offset_q , 3'h0 };
  assign _1665_ = \cv32e40x_core_inst.load_store_unit_i.cnt_q  - 1'h1;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.last_op_if_i  = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.valid_o  ? \cv32e40x_core_inst.if_stage_i.seq_last  : 1'h1;
  assign _1666_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_mret_ptr_q  ? 1'h0 : 1'h1;
  assign \cv32e40x_core_inst.if_stage_i.first_op  = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.valid_o  ? \cv32e40x_core_inst.if_stage_i.seq_first  : _1666_;
  assign _1667_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.valid_o  ? 1'h0 : \cv32e40x_core_inst.if_stage_i.illegal_c_insn ;
  assign _1652_ = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_mret_ptr_q  ? _1560_ : 1'h1;
  assign _1668_ = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.valid_o  ? { \cv32e40x_core_inst.if_stage_i.seq_instr [34:3], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [2:0] } : { \cv32e40x_core_inst.if_stage_i.instr_decompressed [34:3], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [2:0] };
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.tbljmp_first_i  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [151] ? _1536_ : 1'h0;
  assign _1669_ = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [154] ? 32'd2 : 32'd4;
  assign \cv32e40x_core_inst.load_store_unit_i.trans [76:45] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168] ? \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312] : _0128_;
  assign \cv32e40x_core_inst.load_store_unit_i.rdata_full  = \cv32e40x_core_inst.load_store_unit_i.rdata_is_split  ? { data_rdata_i, \cv32e40x_core_inst.load_store_unit_i.rdata_q  } : { data_rdata_i, data_rdata_i };
  assign _1670_ = _0297_ ? 2'h2 : 2'h3;
  assign _1671_ = _0296_ ? 2'h1 : _1670_;
  assign \cv32e40x_core_inst.controller_i.bypass_i.lsu_atomic_ex_i  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168] ? _1671_ : 2'h0;
  assign \cv32e40x_core_inst.wb_stage_i.lsu_rdata_i  = _0298_ ? 32'd0 : \cv32e40x_core_inst.load_store_unit_i.rdata_ext ;
  assign _1672_ = \cv32e40x_core_inst.load_store_unit_i.split_q  ? _0129_ : \cv32e40x_core_inst.load_store_unit_i.trans [76:45];
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168] ? \cv32e40x_core_inst.load_store_unit_i.trans [76:45] : _1672_;
  assign \cv32e40x_core_inst.wb_stage_i.lsu_ready_i  = _0300_ ? 1'h1 : \cv32e40x_core_inst.load_store_unit_i.count_down ;
  assign _1675_ = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_valid_ex_i  ? _1674_ : 1'h1;
  assign _1673_ = _0301_ ? \cv32e40x_core_inst.load_store_unit_i.count_up  : 1'h1;
  assign _1674_ = _0300_ ? \cv32e40x_core_inst.load_store_unit_i.count_up  : _1673_;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [158] ? \cv32e40x_core_inst.wb_stage_i.lsu_rdata_i  : \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [241:210];
  assign \cv32e40x_core_inst.wb_stage_i.lsu_valid  = \cv32e40x_core_inst.wb_stage_i.lsu_valid_q  ? 1'h1 : \cv32e40x_core_inst.wb_stage_i.lsu_valid_i ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.wpt_match_wb_i  = \cv32e40x_core_inst.wb_stage_i.lsu_valid_q  ? \cv32e40x_core_inst.wb_stage_i.lsu_wpt_match_q  : \cv32e40x_core_inst.wb_stage_i.lsu_wpt_match_i ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.mpu_status_wb_i  = \cv32e40x_core_inst.wb_stage_i.lsu_valid_q  ? \cv32e40x_core_inst.wb_stage_i.lsu_mpu_status_q  : \cv32e40x_core_inst.wb_stage_i.lsu_mpu_status_i ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.align_status_wb_i  = \cv32e40x_core_inst.wb_stage_i.lsu_valid_q  ? \cv32e40x_core_inst.wb_stage_i.lsu_align_status_q  : \cv32e40x_core_inst.wb_stage_i.lsu_align_status_i ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_5381E  = _0302_ ? 5'h00 : \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [4:0];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_63C61  = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [0] ? 5'h0f : 5'h00;
  assign _1676_ = _0306_ ? 11'h006 : 11'h004;
  assign _1677_ = _0305_ ? 11'h005 : _1676_;
  assign _1678_ = _0304_ ? 11'h007 : _1677_;
  assign _1679_ = _1497_ ? 11'h003 : _1678_;
  assign _1680_ = _1494_ ? 11'h00b : _1679_;
  assign _1681_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [52] ? 11'h002 : _1680_;
  assign _1682_ = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [61] ? 11'h018 : _1681_;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  = _1594_ ? 11'h001 : _1682_;
  assign _1683_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  ? 4'hb : 4'h8;
  assign _1606_ = \cv32e40x_core_inst.controller_i.controller_fsm_i.fencei_in_wb  ? 1'h0 : \cv32e40x_core_inst.controller_i.controller_fsm_i.fence_req_q ;
  assign _1684_ = _1516_ ? 4'he : 4'h4;
  assign _1685_ = _1515_ ? 4'hf : _1684_;
  assign { _0004_[246:244], _0004_[242:177] } = { \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [246:244], \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [242:177] };
  assign _0031_[1] = 1'h0;
  assign _0071_[1:0] = { _0071_[2], _0071_[2] };
  assign _0083_[6] = _0082_[2];
  assign _0085_[6] = _0084_[1];
  assign _0095_[6] = _0094_;
  assign _0096_[6:5] = 2'h2;
  assign { _0121_[3], _0121_[1] } = { 1'h1, _0121_[2] };
  assign { _0388_[31:8], _0388_[6:4], _0388_[2:0] } = 30'h00000600;
  assign { _0580_[31:26], _0580_[24:23], _0580_[21:0] } = { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.wr_data_i [31:26], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.wr_data_i [24:23], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.wr_data_i [21:0] };
  assign _0780_[1] = _0762_;
  assign _0782_[1:0] = { _0761_, _0760_ };
  assign _0838_[2:0] = 3'h0;
  assign _0842_[1:0] = 2'h0;
  assign _0843_[7:0] = { _0402_, 7'h00 };
  assign { _0847_[53:51], _0847_[40:38], _0847_[33:24] } = { 1'h0, _0847_[54], _0847_[54], 11'h500, _0847_[54], _0847_[54] };
  assign _1100_[2:1] = { _1066_, _1067_ };
  assign _1109_[0] = _1064_;
  assign _1127_[0] = _1118_;
  assign _1130_[0] = _1119_;
  assign _1297_[0] = _1291_;
  assign _1300_[0] = _1292_;
  assign _1331_[0] = _1322_;
  assign _1334_[0] = _1323_;
  assign commit_id = 4'h0;
  assign commit_kill = 1'h0;
  assign commit_valid = 1'h0;
  assign compressed_req_id = 4'h0;
  assign compressed_req_instr = 16'h0000;
  assign compressed_req_mode = 2'h0;
  assign compressed_valid = 1'h0;
  assign \cv32e40x_core_inst.abort_op_id  = \cv32e40x_core_inst.controller_i.controller_fsm_i.abort_op_id_i ;
  assign \cv32e40x_core_inst.align_status_wb  = \cv32e40x_core_inst.controller_i.controller_fsm_i.align_status_wb_i ;
  assign \cv32e40x_core_inst.alu_en_id  = \cv32e40x_core_inst.controller_i.controller_fsm_i.alu_en_id_i ;
  assign \cv32e40x_core_inst.alu_jmp_id  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [52];
  assign \cv32e40x_core_inst.alu_jmpr_id  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [51];
  assign \cv32e40x_core_inst.boot_addr_i  = 32'd131072;
  assign \cv32e40x_core_inst.branch_decision_ex  = \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_decision_ex_i ;
  assign \cv32e40x_core_inst.branch_target_ex  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [279:248];
  assign \cv32e40x_core_inst.clic_irq_i  = 1'h0;
  assign \cv32e40x_core_inst.clic_irq_id_i  = 5'h00;
  assign \cv32e40x_core_inst.clic_irq_level_i  = 8'h00;
  assign \cv32e40x_core_inst.clic_irq_priv_i  = 2'h0;
  assign \cv32e40x_core_inst.clic_irq_shv_i  = 1'h0;
  assign \cv32e40x_core_inst.clk  = clk_i;
  assign \cv32e40x_core_inst.clk_i  = clk_i;
  assign \cv32e40x_core_inst.controller_i.abort_op_id_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.abort_op_id_i ;
  assign \cv32e40x_core_inst.controller_i.abort_op_if_i  = \cv32e40x_core_inst.abort_op_if ;
  assign \cv32e40x_core_inst.controller_i.align_status_wb_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.align_status_wb_i ;
  assign \cv32e40x_core_inst.controller_i.alu_en_id_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.alu_en_id_i ;
  assign \cv32e40x_core_inst.controller_i.alu_jmp_id_i  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [52];
  assign \cv32e40x_core_inst.controller_i.alu_jmpr_id_i  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [51];
  assign \cv32e40x_core_inst.controller_i.branch_decision_ex_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_decision_ex_i ;
  assign \cv32e40x_core_inst.controller_i.bypass_i.alu_jmpr_id_i  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [51];
  assign \cv32e40x_core_inst.controller_i.bypass_i.csr_en_raw_id_i  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [23];
  assign { \cv32e40x_core_inst.controller_i.bypass_i.csr_hz_i [27], \cv32e40x_core_inst.controller_i.bypass_i.csr_hz_i [25:0] } = { 1'h0, \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_F9A70 , \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_1C271 , \cv32e40x_core_inst.cs_registers_i.csr_raddr , \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] };
  assign \cv32e40x_core_inst.controller_i.bypass_i.csr_mnxti_read_i  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.bypass_i.ctrl_byp_o  = { \cv32e40x_core_inst.id_stage_i.ctrl_byp_i [17:13], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [12:9], \cv32e40x_core_inst.controller_i.bypass_i.sv2v_tmp_E5A17 , 2'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [5], \cv32e40x_core_inst.id_stage_i.decoder_i.deassert_we_i , \cv32e40x_core_inst.id_stage_i.decoder_i.deassert_we_i , 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [1:0] };
  assign { \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [247:37], \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [4], \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [2], \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [0] } = { \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [247:160], 1'h0, \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [158], 31'h00000000, \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [126:41], 5'h00, \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [2], \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [0] };
  assign { \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [352:247], \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [243], \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [176:3], \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [1] } = { \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [352:248], 2'h0, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [176:153], 31'h00000000, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [121:40], 37'h0000000000, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [1] };
  assign \cv32e40x_core_inst.controller_i.bypass_i.if_id_pipe_i  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [190:99], 31'h00000000, \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [67], 32'h00000000, \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [34:0] };
  assign \cv32e40x_core_inst.controller_i.bypass_i.lsu_atomic_wb_i  = \cv32e40x_core_inst.load_store_unit_i.a_ext.lsu_atomic_q ;
  assign \cv32e40x_core_inst.controller_i.bypass_i.rf_raddr_id_i  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] };
  assign \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_ex_match  = \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_ex_hz ;
  assign \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_wb_match  = \cv32e40x_core_inst.controller_i.bypass_i.rf_rd_wb_hz ;
  assign \cv32e40x_core_inst.controller_i.bypass_i.rf_re_id_i  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [26:25];
  assign \cv32e40x_core_inst.controller_i.bypass_i.rf_waddr_ex  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [119:115];
  assign \cv32e40x_core_inst.controller_i.bypass_i.rf_waddr_wb  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242];
  assign \cv32e40x_core_inst.controller_i.bypass_i.sv2v_tmp_334B7  = \cv32e40x_core_inst.id_stage_i.decoder_i.deassert_we_i ;
  assign \cv32e40x_core_inst.controller_i.bypass_i.sv2v_tmp_4914A  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.bypass_i.sv2v_tmp_54375  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.bypass_i.sv2v_tmp_B009B  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.bypass_i.sys_mret_id_i  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [2];
  assign \cv32e40x_core_inst.controller_i.clk  = clk_i;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.abort_op_if_i  = \cv32e40x_core_inst.abort_op_if ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.alu_jmp_id_i  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [52];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.clic_ptr_in_pipeline  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.clic_ptr_in_progress_id_set  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.clk  = clk_i;
  assign { \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [17:13], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [8:6], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [4:2] } = { \cv32e40x_core_inst.id_stage_i.ctrl_byp_i [17:13], \cv32e40x_core_inst.controller_i.bypass_i.sv2v_tmp_E5A17 , 2'h0, \cv32e40x_core_inst.id_stage_i.decoder_i.deassert_we_i , \cv32e40x_core_inst.id_stage_i.decoder_i.deassert_we_i , 1'h0 };
  assign { \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [201:197], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [192:148], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [144], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [110], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [106:73], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [71:42], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [37:18], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [16:14], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [12:0] } = { \cv32e40x_core_inst.sleep_unit_i.ctrl_fsm_i [201], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [200], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i , \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [198], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [197], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_5381E , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [9:0], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_63C61 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause , 11'h000, \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , 1'h0, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [105:73], 19'h00000, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [52:42], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C46A7 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C451 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_06A0A , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_31573 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [10], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C215 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_A1D3F , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_E0ABD , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_AEAA2 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_ECB01 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_90BD1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_D8609 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_557D1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.halt_i , \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [20], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [19], \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [18], \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16], \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [15], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [14], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  };
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.dcsr_i  = 32'd0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_fsm_cs  = { \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [107], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [108], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [109] };
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_req_i  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_wb_pipe_i  = { \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [247:160], 1'h0, \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [158], 31'h00000000, \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [126:41], 4'h0, \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [36:5], 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [3], \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [2], \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [1], \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [0] };
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_allowed  = 1'h1;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.fencei_flush_ack_i  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.fencei_req_and_ack_q  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.fetch_enable_i  = \cv32e40x_core_inst.sleep_unit_i.fetch_enable_q ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.first_op_id_i  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [2];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.id_ex_pipe_i  = { \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [352:248], 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [246:244], 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [242:177], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [176:153], 31'h00000000, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [121:40], 37'h0000000000, \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [2], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [1], \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [0] };
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.if_id_pipe_i  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [190:99], 31'h00000000, \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [67], 32'h00000000, \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [34:0] };
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.irq_clic_level_i  = 8'h00;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.irq_clic_priv_i  = 2'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.irq_clic_shv_i  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.irq_id_ctrl_i  = 10'h007;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.irq_req_ctrl_i  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.irq_wu_ctrl_i  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.last_op_id_i  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [1];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.last_op_wb_i  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [2];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_err_wb_i [1] = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_valid_wb_i  = \cv32e40x_core_inst.controller_i.bypass_i.lsu_en_wb ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.mcause_i  = { \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [31], 20'h00000, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [10:0] };
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.mintstatus_i  = 32'd0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.mtvec_mode_i  = { 1'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [0] };
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.nmi_is_store_q  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.nmi_pending_q  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.no_x_ext.sv2v_tmp_FC9EB  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.non_shv_irq_ack  = \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [10];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.pc_if_i  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.pending_async_debug  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.pending_interrupt  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.pending_nmi  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.pending_nmi_early  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.pending_single_step  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.single_step_allowed  = 1'h1;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_011E8  = \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_02F65  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [109];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_1CDE7  = \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [10];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_25FB9  = \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_2645F  = \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_35E3A  = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_524C7  = \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6AD4B  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_79E24  = \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_96624  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [108];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_A228D  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_BD570  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [147:145];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C3579  = \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_CC8DA  = \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [9:0];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_F6E73  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [107];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.sys_mret_id_i  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [2];
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_ready_i  = \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i ;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.woke_to_debug_q  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.woke_to_interrupt_q  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.wu_wfe_i  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.xif_csr_error_i  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.controller_fsm_i.xif_in_wb  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.csr_counter_read_i  = \cv32e40x_core_inst.controller_i.bypass_i.csr_counter_read_i ;
  assign \cv32e40x_core_inst.controller_i.csr_en_raw_id_i  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [23];
  assign \cv32e40x_core_inst.controller_i.csr_hz_i  = { 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.csr_hz_i [26], \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_F9A70 , \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_1C271 , \cv32e40x_core_inst.cs_registers_i.csr_raddr , \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] };
  assign \cv32e40x_core_inst.controller_i.csr_irq_enable_write_i  = \cv32e40x_core_inst.controller_i.bypass_i.csr_irq_enable_write_i ;
  assign \cv32e40x_core_inst.controller_i.csr_mnxti_read_i  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.csr_wr_in_wb_flush_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_wr_in_wb_flush_i ;
  assign \cv32e40x_core_inst.controller_i.ctrl_byp_o  = { \cv32e40x_core_inst.id_stage_i.ctrl_byp_i [17:13], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [12:9], \cv32e40x_core_inst.controller_i.bypass_i.sv2v_tmp_E5A17 , 2'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [5], \cv32e40x_core_inst.id_stage_i.decoder_i.deassert_we_i , \cv32e40x_core_inst.id_stage_i.decoder_i.deassert_we_i , 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [1:0] };
  assign \cv32e40x_core_inst.controller_i.ctrl_fsm_o  = { \cv32e40x_core_inst.sleep_unit_i.ctrl_fsm_i [201], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [200], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i , \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [198], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [197], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_5381E , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [9:0], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_63C61 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause , 11'h000, \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [147:145], \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [143:111], \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [109:107], 1'h0, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [105:73], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [72], 19'h00000, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [52:42], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [41:38], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C46A7 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C451 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_06A0A , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_31573 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [10], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C215 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_A1D3F , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_E0ABD , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_AEAA2 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_ECB01 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_90BD1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_D8609 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_557D1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.halt_i , \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [20], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [19], \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [18], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [17], \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16], \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [15], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [14], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [13], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  };
  assign \cv32e40x_core_inst.controller_i.data_stall_wb_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i ;
  assign \cv32e40x_core_inst.controller_i.dcsr_i  = 32'd0;
  assign \cv32e40x_core_inst.controller_i.debug_req_i  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.etrigger_wb_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.etrigger_wb_i ;
  assign \cv32e40x_core_inst.controller_i.ex_ready_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_ready_i ;
  assign \cv32e40x_core_inst.controller_i.ex_valid_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_valid_i ;
  assign \cv32e40x_core_inst.controller_i.ex_wb_pipe_i  = { \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [247:160], 1'h0, \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [158], 31'h00000000, \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [126:41], 4'h0, \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [36:5], 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [3], \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [2], \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [1], \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [0] };
  assign \cv32e40x_core_inst.controller_i.fencei_flush_ack_i  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.fetch_enable_i  = \cv32e40x_core_inst.sleep_unit_i.fetch_enable_q ;
  assign \cv32e40x_core_inst.controller_i.first_op_id_i  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [2];
  assign \cv32e40x_core_inst.controller_i.id_ex_pipe_i  = { \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [352:248], 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [246:244], 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [242:177], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [176:153], 31'h00000000, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [121:40], 37'h0000000000, \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [2], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [1], \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [0] };
  assign \cv32e40x_core_inst.controller_i.id_ready_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.id_ready_i ;
  assign \cv32e40x_core_inst.controller_i.id_valid_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.id_valid_i ;
  assign \cv32e40x_core_inst.controller_i.if_id_pipe_i  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [190:99], 31'h00000000, \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [67], 32'h00000000, \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [34:0] };
  assign \cv32e40x_core_inst.controller_i.if_valid_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.if_valid_i ;
  assign \cv32e40x_core_inst.controller_i.irq_clic_level_i  = 8'h00;
  assign \cv32e40x_core_inst.controller_i.irq_clic_priv_i  = 2'h0;
  assign \cv32e40x_core_inst.controller_i.irq_clic_shv_i  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.irq_id_ctrl_i  = 10'h007;
  assign \cv32e40x_core_inst.controller_i.irq_req_ctrl_i  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.irq_wu_ctrl_i  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.last_op_ex_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.last_op_ex_i ;
  assign \cv32e40x_core_inst.controller_i.last_op_id_i  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [1];
  assign \cv32e40x_core_inst.controller_i.last_op_if_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.last_op_if_i ;
  assign \cv32e40x_core_inst.controller_i.last_op_wb_i  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [2];
  assign \cv32e40x_core_inst.controller_i.lsu_atomic_ex_i  = \cv32e40x_core_inst.controller_i.bypass_i.lsu_atomic_ex_i ;
  assign \cv32e40x_core_inst.controller_i.lsu_atomic_wb_i  = \cv32e40x_core_inst.load_store_unit_i.a_ext.lsu_atomic_q ;
  assign \cv32e40x_core_inst.controller_i.lsu_bus_busy_i  = \cv32e40x_core_inst.controller_i.bypass_i.lsu_bus_busy_i ;
  assign \cv32e40x_core_inst.controller_i.lsu_busy_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_busy_i ;
  assign \cv32e40x_core_inst.controller_i.lsu_err_wb_i  = { 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_err_wb_i [0] };
  assign \cv32e40x_core_inst.controller_i.lsu_valid_wb_i  = \cv32e40x_core_inst.controller_i.bypass_i.lsu_en_wb ;
  assign \cv32e40x_core_inst.controller_i.mcause_i  = { \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [31], 20'h00000, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [10:0] };
  assign \cv32e40x_core_inst.controller_i.mintstatus_i  = 32'd0;
  assign \cv32e40x_core_inst.controller_i.mpu_status_wb_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.mpu_status_wb_i ;
  assign \cv32e40x_core_inst.controller_i.mtvec_mode_i  = { 1'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [0] };
  assign \cv32e40x_core_inst.controller_i.pc_if_i  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q ;
  assign \cv32e40x_core_inst.controller_i.rf_raddr_id_i  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] };
  assign \cv32e40x_core_inst.controller_i.rf_re_id_i  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [26:25];
  assign \cv32e40x_core_inst.controller_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.controller_i.sys_en_id_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.sys_en_id_i ;
  assign \cv32e40x_core_inst.controller_i.sys_mret_id_i  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [2];
  assign \cv32e40x_core_inst.controller_i.wb_ready_i  = \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i ;
  assign \cv32e40x_core_inst.controller_i.wb_valid_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_valid_i ;
  assign \cv32e40x_core_inst.controller_i.wpt_match_wb_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.wpt_match_wb_i ;
  assign \cv32e40x_core_inst.controller_i.wu_wfe_i  = 1'h0;
  assign \cv32e40x_core_inst.controller_i.xif_csr_error_i  = 1'h0;
  assign \cv32e40x_core_inst.core_sleep_o  = core_sleep_o;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.clk  = clk_i;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[11].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[12].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[13].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[14].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[15].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[16].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[17].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[18].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[19].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[20].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[21].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[22].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[23].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[24].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[25].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[26].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[27].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[28].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[29].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.gen_csr[30].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rd_data_o  = { \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [31], 20'h00000, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [10:0] };
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [30:11] = 20'h00000;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rst_n  = rst_ni;
  assign { \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_data_i [30:24], \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_data_i [15:11] } = 12'h000;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.clk  = clk_i;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[0].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[10].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[12].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[13].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[14].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[15].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[1].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[2].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[4].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[5].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[6].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[8].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.gen_csr[9].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rd_data_o  = { \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [31:16], 4'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [11], 3'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [7], 3'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [3], 3'h0 };
  assign { \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [15:12], \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [10:8], \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [6:4], \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [2:0] } = 13'h0000;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.wr_data_i  = { \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [31:16], 4'h0, \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [11], 3'h0, \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [7], 3'h0, \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [3], 3'h0 };
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.wr_en_i  = \cv32e40x_core_inst.cs_registers_i.mie_we ;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.clk  = clk_i;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.gen_csr[1].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.gen_csr[2].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.gen_csr[3].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.gen_csr[4].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.gen_csr[5].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.gen_csr[6].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rd_data_o  = { \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [31:7], 6'h00, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [0] };
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [6:1] = 6'h00;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [6:1] = 6'h00;
  assign \cv32e40x_core_inst.cs_registers_i.clic_pa_o  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.clic_pa_valid_o  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.clk  = clk_i;
  assign \cv32e40x_core_inst.cs_registers_i.csr_counter_read_o  = \cv32e40x_core_inst.controller_i.bypass_i.csr_counter_read_i ;
  assign \cv32e40x_core_inst.cs_registers_i.csr_hz_o  = { 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.csr_hz_i [26], \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_F9A70 , \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_1C271 , \cv32e40x_core_inst.cs_registers_i.csr_raddr , \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] };
  assign \cv32e40x_core_inst.cs_registers_i.csr_illegal_o  = \cv32e40x_core_inst.ex_stage_i.csr_illegal_i ;
  assign \cv32e40x_core_inst.cs_registers_i.csr_irq_enable_write_o  = \cv32e40x_core_inst.controller_i.bypass_i.csr_irq_enable_write_i ;
  assign \cv32e40x_core_inst.cs_registers_i.csr_mnxti_read_o  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.csr_op  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [205:204];
  assign \cv32e40x_core_inst.cs_registers_i.csr_rdata_int  = \cv32e40x_core_inst.ex_stage_i.csr_rdata_i ;
  assign \cv32e40x_core_inst.cs_registers_i.csr_rdata_o  = \cv32e40x_core_inst.ex_stage_i.csr_rdata_i ;
  assign \cv32e40x_core_inst.cs_registers_i.csr_waddr  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192];
  assign \cv32e40x_core_inst.cs_registers_i.csr_wdata  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [191:160];
  assign \cv32e40x_core_inst.cs_registers_i.csr_wr_in_wb_flush_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_wr_in_wb_flush_i ;
  assign { \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [201:106], \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [72:53], \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [41:19], \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [17:0] } = { \cv32e40x_core_inst.sleep_unit_i.ctrl_fsm_i [201], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [200], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i , \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [198], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [197], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_5381E , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [9:0], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_63C61 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause , 11'h000, \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [147:145], \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [143:111], \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [109:107], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [72], 19'h00000, \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [41:38], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C46A7 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C451 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_06A0A , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_31573 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [10], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C215 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_A1D3F , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_E0ABD , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_AEAA2 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_ECB01 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_90BD1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_D8609 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_557D1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.halt_i , \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [20], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [19], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [17], \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16], \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [15], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [14], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [13], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  };
  assign \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3657$1132.wdata  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3661$1133.wdata  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3665$1134.wdata  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3669$1135.wdata  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3673$1141.wdata  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3677$1142.wdata  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3681$1143.wdata  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3693$1147.wdata  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3751$1152.wdata  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3773$1153.wdata  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_csr_next_value$func$preprocessed.v:3781$1155.wdata  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_dcsr_ebreaku_resolve$func$preprocessed.v:3673$1138.current_value  = 1'hx;
  assign \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_dcsr_ebreaku_resolve$func$preprocessed.v:3673$1138.next_value  = 1'hx;
  assign \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_dcsr_prv_resolve$func$preprocessed.v:3673$1136.current_value  = 2'hx;
  assign \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_dcsr_prv_resolve$func$preprocessed.v:3673$1136.next_value  = 2'hx;
  assign \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_mstatus_mpp_resolve$func$preprocessed.v:3693$1144.current_value  = 2'hx;
  assign \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_mstatus_mpp_resolve$func$preprocessed.v:3693$1144.next_value  = 2'hx;
  assign \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_mstatus_mprv_resolve$func$preprocessed.v:3693$1145.current_value  = 1'hx;
  assign \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_mstatus_mprv_resolve$func$preprocessed.v:3693$1145.next_value  = 1'hx;
  assign \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_mtvec_mode_clint_resolve$func$preprocessed.v:3751$1148.current_value  = 2'hx;
  assign \cv32e40x_core_inst.cs_registers_i.cv32e40x_pkg_mtvec_mode_clint_resolve$func$preprocessed.v:3751$1148.next_value  = 2'hx;
  assign \cv32e40x_core_inst.cs_registers_i.dcsr_o  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.dcsr_q  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.dcsr_rdata  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.debug_stopcount  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.clk  = clk_i;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.csr_wdata_i  = \cv32e40x_core_inst.cs_registers_i.csr_wdata_int ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ctrl_fsm_i  = { \cv32e40x_core_inst.sleep_unit_i.ctrl_fsm_i [201], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [200], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i , \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [198], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [197], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_5381E , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [9:0], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_63C61 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause , 11'h000, \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [147:145], \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [143:111], \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [109:107], 1'h0, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [105:73], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [72], 19'h00000, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [52:42], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [41:38], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C46A7 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C451 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_06A0A , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_31573 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [10], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C215 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_A1D3F , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_E0ABD , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_AEAA2 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_ECB01 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_90BD1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_D8609 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_557D1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.halt_i , \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [20], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [19], \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [18], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [17], \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16], \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [15], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [14], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [13], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  };
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.cv32e40x_pkg_etrigger_u_resolve$func$preprocessed.v:5112$4382.next_value  = 1'hx;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.cv32e40x_pkg_mcontrol2_6_match_resolve$func$preprocessed.v:5100$4377.next_value  = 4'hx;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.cv32e40x_pkg_mcontrol2_6_match_resolve$func$preprocessed.v:5103$4380.next_value  = 4'hx;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.cv32e40x_pkg_mcontrol2_6_u_resolve$func$preprocessed.v:5100$4376.next_value  = 1'hx;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.cv32e40x_pkg_mcontrol2_6_u_resolve$func$preprocessed.v:5103$4378.next_value  = 1'hx;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.cv32e40x_pkg_mcontrol6_hit_resolve$func$preprocessed.v:5093$4375.current_value  = 2'hx;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.cv32e40x_pkg_mcontrol6_hit_resolve$func$preprocessed.v:5093$4375.next_value  = 2'hx;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.cv32e40x_pkg_mcontrol6_uncertain_resolve$func$preprocessed.v:5103$4381.next_value  = 1'hx;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.cv32e40x_pkg_mcontrol6_uncertainen_resolve$func$preprocessed.v:5103$4379.next_value  = 1'hx;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.etrigger_wb_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.etrigger_wb_i ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.etrigger_wb  = \cv32e40x_core_inst.controller_i.controller_fsm_i.etrigger_wb_i ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_addr_high  = { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i [31:2], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_addr_high_lsb  };
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_addr_low  = { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i [31:2], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.lsu_addr_low_lsb  };
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.sv2v_autoblock_1.b  = 32'd4;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.sv2v_autoblock_2.b  = 32'd4294967295;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.sv2v_autoblock_5.i  = 32'd1;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.sv2v_autoblock_6.i  = 32'd1;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.sv2v_autoblock_7.i  = 32'd1;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata1_n[0]  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.wr_data_i ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata1_q[0]  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata1_rdata[0]  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata2_q[0]  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata2_rdata[0]  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].sv2v_autoblock_3.b  = 32'd4;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].sv2v_autoblock_4.i  = 32'd32;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.clk  = clk_i;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rd_data_o  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.wr_en_i  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata1_we_int ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.clk  = clk_i;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rd_data_o  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.wr_en_i  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tdata2_we_int ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.clk  = clk_i;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rd_data_o  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_q  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_atomic_ex_i  = \cv32e40x_core_inst.controller_i.bypass_i.lsu_atomic_ex_i ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_we_ex_i  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172];
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.pc_if_i  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_ex_i  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [41:40];
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_wb_i  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [51:50];
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.tdata1_rdata_o  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.tdata2_rdata_o  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.tinfo_n  = 32'd16810084;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.tinfo_rdata_o  = 32'd16810084;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.trigger_match_ex_o  = { 31'h00000000, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.trigger_match_ex  };
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.trigger_match_if_o  = { 31'h00000000, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.trigger_match_if  };
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.tselect_rdata_o  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.tselect_we_i  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.wr_en_i ;
  assign \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.unused_signals  = 1'h1;
  assign \cv32e40x_core_inst.cs_registers_i.dpc_o  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.dpc_q  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.dpc_rdata  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.dscratch0_n  = \cv32e40x_core_inst.cs_registers_i.csr_wdata_int ;
  assign \cv32e40x_core_inst.cs_registers_i.dscratch0_q  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.dscratch0_rdata  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.dscratch1_n  = \cv32e40x_core_inst.cs_registers_i.csr_wdata_int ;
  assign \cv32e40x_core_inst.cs_registers_i.dscratch1_q  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.dscratch1_rdata  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.etrigger_wb_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.etrigger_wb_i ;
  assign \cv32e40x_core_inst.cs_registers_i.ex_wb_pipe_i  = { \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [247:160], 1'h0, \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [158], 31'h00000000, \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [126:41], 4'h0, \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [36:5], 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [3], \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [2], \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [1], \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [0] };
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[10].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[11].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[12].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[13].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[14].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[15].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[16].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[17].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[18].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[19].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[1].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[20].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[21].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[22].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[23].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[24].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[25].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[26].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[27].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[28].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[29].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[30].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[31].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[4].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[5].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[6].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[7].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[8].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter[9].gen_non_implemented_mhpmcounter.sv2v_tmp_0C563  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[10].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[10].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[11].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[11].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[12].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[12].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[13].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[13].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[14].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[14].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[15].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[15].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[16].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[16].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[17].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[17].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[18].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[18].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[19].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[19].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[1].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[1].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[20].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[20].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[21].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[21].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[22].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[22].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[23].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[23].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[24].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[24].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[25].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[25].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[26].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[26].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[27].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[27].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[28].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[28].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[29].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[29].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[30].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[30].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[31].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[31].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[4].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[4].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[5].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[5].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[6].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[6].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[7].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[7].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[8].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[8].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[9].gen_non_implemented_nextvalue.sv2v_tmp_136EF  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmcounter_nextvalue[9].gen_non_implemented_nextvalue.sv2v_tmp_B720C  = 2'h0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[0].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[10].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[11].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[12].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[13].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[14].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[15].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[16].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[17].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[18].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[19].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[1].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[20].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[21].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[22].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[23].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[24].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[25].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[26].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[27].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[28].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[29].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[2].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[30].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[31].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[3].gen_implemented_mhpmevent.gen_tie_off.sv2v_tmp_B7F8B  = 16'h0000;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[4].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[5].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[6].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[7].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[8].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.gen_mhpmevent[9].gen_non_implemented_mhpmevent.sv2v_tmp_D8BE3  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.genblk5[0].hpm_even_no_flop.sv2v_tmp_4AF07  = 1'h1;
  assign \cv32e40x_core_inst.cs_registers_i.genblk5[1].hpm_even_no_flop.sv2v_tmp_4AF07  = \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated ;
  assign \cv32e40x_core_inst.cs_registers_i.genblk5[2].hpm_even_no_flop.sv2v_tmp_4AF07  = \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C46A7 ;
  assign \cv32e40x_core_inst.cs_registers_i.genblk5[3].hpm_even_no_flop.sv2v_tmp_4AF07  = \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C451 ;
  assign \cv32e40x_core_inst.cs_registers_i.genblk5[4].hpm_even_no_flop.sv2v_tmp_4AF07  = \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_06A0A ;
  assign \cv32e40x_core_inst.cs_registers_i.genblk5[5].hpm_even_no_flop.sv2v_tmp_4AF07  = \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_31573 ;
  assign \cv32e40x_core_inst.cs_registers_i.hpm_events [5:0] = { \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_31573 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_06A0A , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C451 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C46A7 , \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated , 1'h1 };
  assign \cv32e40x_core_inst.cs_registers_i.hpm_events_raw  = { \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_557D1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_D8609 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_90BD1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_ECB01 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_AEAA2 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_E0ABD , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_A1D3F , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C215 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [10], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_31573 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_06A0A , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C451 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C46A7 , \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated , 1'h1 };
  assign \cv32e40x_core_inst.cs_registers_i.id_ex_pipe_i  = { \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [352:248], 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [246:244], 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [242:177], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [176:153], 31'h00000000, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [121:40], 37'h0000000000, \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [2], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [1], \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [0] };
  assign \cv32e40x_core_inst.cs_registers_i.jvt_addr_o  = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [31:6];
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.clk  = clk_i;
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.gen_csr[0].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.gen_csr[1].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.gen_csr[2].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.gen_csr[3].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.gen_csr[4].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.gen_csr[5].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rd_data_o  = { \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [31:6], 6'h00 };
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [5:0] = 6'h00;
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_data_i  = { \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [31:6], 6'h00 };
  assign \cv32e40x_core_inst.cs_registers_i.jvt_mode_o  = 6'h00;
  assign \cv32e40x_core_inst.cs_registers_i.jvt_n  = { \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [31:6], 6'h00 };
  assign \cv32e40x_core_inst.cs_registers_i.jvt_q  = { \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [31:6], 6'h00 };
  assign \cv32e40x_core_inst.cs_registers_i.jvt_rdata  = { \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [31:6], 6'h00 };
  assign \cv32e40x_core_inst.cs_registers_i.jvt_we  = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.wr_en_i ;
  assign \cv32e40x_core_inst.cs_registers_i.jvt_wr_in_wb  = \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_wr_in_wb_flush_i ;
  assign \cv32e40x_core_inst.cs_registers_i.lsu_addr_ex_i  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i ;
  assign \cv32e40x_core_inst.cs_registers_i.lsu_atomic_ex_i  = \cv32e40x_core_inst.controller_i.bypass_i.lsu_atomic_ex_i ;
  assign \cv32e40x_core_inst.cs_registers_i.lsu_be_ex_i  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i ;
  assign \cv32e40x_core_inst.cs_registers_i.lsu_valid_ex_i  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_valid_ex_i ;
  assign \cv32e40x_core_inst.cs_registers_i.lsu_we_ex_i  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172];
  assign \cv32e40x_core_inst.cs_registers_i.marchid_n  = 32'd20;
  assign \cv32e40x_core_inst.cs_registers_i.marchid_rdata  = 32'd20;
  assign \cv32e40x_core_inst.cs_registers_i.marchid_we  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mcause_alias_we  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mcause_n  = { \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_data_i [31], 7'h00, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_data_i [23:16], 5'h00, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_data_i [10:0] };
  assign \cv32e40x_core_inst.cs_registers_i.mcause_o  = { \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [31], 20'h00000, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [10:0] };
  assign \cv32e40x_core_inst.cs_registers_i.mcause_q  = { \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [31], 20'h00000, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [10:0] };
  assign \cv32e40x_core_inst.cs_registers_i.mcause_rdata  = { \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [31], 20'h00000, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [10:0] };
  assign \cv32e40x_core_inst.cs_registers_i.mcause_we  = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.wr_en_i ;
  assign \cv32e40x_core_inst.cs_registers_i.mconfigptr_n  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mconfigptr_rdata  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mconfigptr_we  = 1'h0;
  assign { \cv32e40x_core_inst.cs_registers_i.mcountinhibit_q [31:4], \cv32e40x_core_inst.cs_registers_i.mcountinhibit_q [1] } = 29'h00000000;
  assign \cv32e40x_core_inst.cs_registers_i.mcountinhibit_rdata  = { 28'h0000000, \cv32e40x_core_inst.cs_registers_i.mcountinhibit_q [3:2], 1'h0, \cv32e40x_core_inst.cs_registers_i.mcountinhibit_q [0] };
  assign \cv32e40x_core_inst.cs_registers_i.mcycle_o  = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_q [63:0];
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.clk  = clk_i;
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.gen_csr[0].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rd_data_o  = { \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [31:1], 1'h0 };
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [0] = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.cs_registers_i.mepc_n  = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_data_i ;
  assign \cv32e40x_core_inst.cs_registers_i.mepc_o  = { \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [31:1], 1'h0 };
  assign \cv32e40x_core_inst.cs_registers_i.mepc_q  = { \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [31:1], 1'h0 };
  assign \cv32e40x_core_inst.cs_registers_i.mepc_rdata  = { \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [31:1], 1'h0 };
  assign \cv32e40x_core_inst.cs_registers_i.mepc_we  = \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.wr_en_i ;
  assign \cv32e40x_core_inst.cs_registers_i.mhartid_i  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mhartid_n  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mhartid_rdata  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mhartid_we  = 1'h0;
  assign { \cv32e40x_core_inst.cs_registers_i.mhpmcounter_increment [2047:256], \cv32e40x_core_inst.cs_registers_i.mhpmcounter_increment [127:64] } = 1856'h00000000000000010000000000000001000000000000000100000000000000010000000000000001000000000000000100000000000000010000000000000001000000000000000100000000000000010000000000000001000000000000000100000000000000010000000000000001000000000000000100000000000000010000000000000001000000000000000100000000000000010000000000000001000000000000000100000000000000010000000000000001000000000000000100000000000000010000000000000001000000000000000100000000000000010000000000000001;
  assign { \cv32e40x_core_inst.cs_registers_i.mhpmcounter_n [2047:256], \cv32e40x_core_inst.cs_registers_i.mhpmcounter_n [127:64] } = 1856'h00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
  assign { \cv32e40x_core_inst.cs_registers_i.mhpmcounter_q [2047:256], \cv32e40x_core_inst.cs_registers_i.mhpmcounter_q [127:64] } = 1856'h00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.mhpmcounter_rdata  = { 1792'h0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, \cv32e40x_core_inst.cs_registers_i.mhpmcounter_q [255:128], 64'h0000000000000000, \cv32e40x_core_inst.cs_registers_i.mhpmcounter_q [63:0] };
  assign { \cv32e40x_core_inst.cs_registers_i.mhpmcounter_we [63:8], \cv32e40x_core_inst.cs_registers_i.mhpmcounter_we [3:2] } = 58'h000000000000000;
  assign { \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_increment [31:4], \cv32e40x_core_inst.cs_registers_i.mhpmcounter_write_increment [1] } = 29'h00000000;
  assign { \cv32e40x_core_inst.cs_registers_i.mhpmevent_q [1023:112], \cv32e40x_core_inst.cs_registers_i.mhpmevent_q [95:0] } = 1008'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.mhpmevent_rdata  = { 912'h000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, \cv32e40x_core_inst.cs_registers_i.mhpmevent_q [111:96], 96'h000000000000000000000000 };
  assign \cv32e40x_core_inst.cs_registers_i.mie_n  = { \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [31:16], 4'h0, \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [11], 3'h0, \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [7], 3'h0, \cv32e40x_core_inst.cs_registers_i.csr_wdata_int [3], 3'h0 };
  assign \cv32e40x_core_inst.cs_registers_i.mie_o  = { \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [31:16], 4'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [11], 3'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [7], 3'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [3], 3'h0 };
  assign \cv32e40x_core_inst.cs_registers_i.mie_q  = { \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [31:16], 4'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [11], 3'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [7], 3'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [3], 3'h0 };
  assign \cv32e40x_core_inst.cs_registers_i.mie_rdata  = { \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [31:16], 4'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [11], 3'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [7], 3'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [3], 3'h0 };
  assign \cv32e40x_core_inst.cs_registers_i.mimpid_n  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mimpid_patch_i  = 4'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mimpid_rdata  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mimpid_we  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mintstatus_n  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mintstatus_o  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mintstatus_q  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mintstatus_rdata  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mintstatus_we  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mintthresh_n  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mintthresh_q  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mintthresh_rdata  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mintthresh_th_o  = 8'h00;
  assign \cv32e40x_core_inst.cs_registers_i.mintthresh_we  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mip_i  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mip_n  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mip_rdata  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.misa_n  = 32'd1082130693;
  assign \cv32e40x_core_inst.cs_registers_i.misa_rdata  = 32'd1082130693;
  assign \cv32e40x_core_inst.cs_registers_i.mnxti_irq_id  = 5'h00;
  assign \cv32e40x_core_inst.cs_registers_i.mnxti_irq_id_i  = 5'h00;
  assign \cv32e40x_core_inst.cs_registers_i.mnxti_irq_level_i  = 8'h00;
  assign \cv32e40x_core_inst.cs_registers_i.mnxti_irq_pending_i  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mnxti_n  = { 24'h000018, \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.wr_data_i [7], 3'h0, \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.wr_data_i [3], 3'h0 };
  assign \cv32e40x_core_inst.cs_registers_i.mnxti_rdata  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mnxti_we  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.clk  = clk_i;
  assign \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rd_data_o  = \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q ;
  assign \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_data_i  = \cv32e40x_core_inst.cs_registers_i.csr_wdata_int ;
  assign \cv32e40x_core_inst.cs_registers_i.mscratch_n  = \cv32e40x_core_inst.cs_registers_i.csr_wdata_int ;
  assign \cv32e40x_core_inst.cs_registers_i.mscratch_q  = \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q ;
  assign \cv32e40x_core_inst.cs_registers_i.mscratch_rdata  = \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.rdata_q ;
  assign \cv32e40x_core_inst.cs_registers_i.mscratch_we  = \cv32e40x_core_inst.cs_registers_i.mscratch_csr_i.wr_en_i ;
  assign \cv32e40x_core_inst.cs_registers_i.mscratchcswl_n  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mscratchcswl_rdata  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [191:160];
  assign \cv32e40x_core_inst.cs_registers_i.mscratchcswl_we  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_alias_we  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.clk  = clk_i;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[0].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[10].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[11].gen_masked.sv2v_tmp_47877  = 1'h1;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[12].gen_masked.sv2v_tmp_47877  = 1'h1;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[13].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[14].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[15].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[16].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[17].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[18].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[19].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[1].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[20].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[21].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[22].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[23].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[24].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[25].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[26].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[27].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[28].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[29].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[2].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[30].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[31].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[4].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[5].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[6].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[8].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.gen_csr[9].gen_masked.sv2v_tmp_47877  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rd_data_o  = { 24'h000018, \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [7], 3'h0, \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [3], 3'h0 };
  assign { \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [31:8], \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [6:4], \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [2:0] } = 30'h00000600;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rst_n  = rst_ni;
  assign { \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.wr_data_i [31:8], \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.wr_data_i [6:4], \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.wr_data_i [2:0] } = 30'h00000600;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.wr_en_i  = \cv32e40x_core_inst.cs_registers_i.mstatus_we ;
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_n  = { 24'h000018, \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.wr_data_i [7], 3'h0, \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.wr_data_i [3], 3'h0 };
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_o  = { 24'h000018, \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [7], 3'h0, \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [3], 3'h0 };
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_q  = { 24'h000018, \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [7], 3'h0, \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [3], 3'h0 };
  assign \cv32e40x_core_inst.cs_registers_i.mstatus_rdata  = { 24'h000018, \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [7], 3'h0, \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [3], 3'h0 };
  assign \cv32e40x_core_inst.cs_registers_i.mstatush_n  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mstatush_rdata  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mtval_n  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mtval_rdata  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mtvec_addr_i  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mtvec_addr_o  = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [31:7];
  assign \cv32e40x_core_inst.cs_registers_i.mtvec_mode_o  = { 1'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [0] };
  assign \cv32e40x_core_inst.cs_registers_i.mtvec_n  = { \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [31:7], 6'h00, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_data_i [0] };
  assign \cv32e40x_core_inst.cs_registers_i.mtvec_q  = { \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [31:7], 6'h00, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [0] };
  assign \cv32e40x_core_inst.cs_registers_i.mtvec_rdata  = { \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [31:7], 6'h00, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [0] };
  assign \cv32e40x_core_inst.cs_registers_i.mtvec_we  = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.wr_en_i ;
  assign \cv32e40x_core_inst.cs_registers_i.mtvt_addr_o  = 25'h0000000;
  assign \cv32e40x_core_inst.cs_registers_i.mtvt_n  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mtvt_q  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mtvt_rdata  = 32'd0;
  assign \cv32e40x_core_inst.cs_registers_i.mtvt_we  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.mvendorid_n  = 32'd1538;
  assign \cv32e40x_core_inst.cs_registers_i.mvendorid_rdata  = 32'd1538;
  assign \cv32e40x_core_inst.cs_registers_i.mvendorid_we  = 1'h0;
  assign \cv32e40x_core_inst.cs_registers_i.pc_if_i  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q ;
  assign \cv32e40x_core_inst.cs_registers_i.priv_lvl_if_ctrl_o  = 3'h3;
  assign \cv32e40x_core_inst.cs_registers_i.priv_lvl_if_i  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i ;
  assign \cv32e40x_core_inst.cs_registers_i.priv_lvl_lsu_o  = 2'h3;
  assign \cv32e40x_core_inst.cs_registers_i.priv_lvl_o  = 2'h3;
  assign \cv32e40x_core_inst.cs_registers_i.priv_lvl_q  = 2'h3;
  assign \cv32e40x_core_inst.cs_registers_i.priv_lvl_rdata  = 2'h3;
  assign \cv32e40x_core_inst.cs_registers_i.ptr_in_if_i  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i ;
  assign \cv32e40x_core_inst.cs_registers_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.cs_registers_i.sv2v_cast_12$func$preprocessed.v:3147$1169.inp  = 12'hxxx;
  assign \cv32e40x_core_inst.cs_registers_i.sv2v_cast_2$func$preprocessed.v:3751$1149.inp  = 2'hx;
  assign \cv32e40x_core_inst.cs_registers_i.sv2v_cast_2$func$preprocessed.v:4050$1158.inp  = 2'hx;
  assign \cv32e40x_core_inst.cs_registers_i.sv2v_cast_2$func$preprocessed.v:4094$1159.inp  = 2'hx;
  assign \cv32e40x_core_inst.cs_registers_i.sv2v_cast_3$func$preprocessed.v:3673$1137.inp  = 3'hx;
  assign \cv32e40x_core_inst.cs_registers_i.sv2v_cast_32$func$preprocessed.v:3673$1140.inp  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.cs_registers_i.sv2v_cast_32$func$preprocessed.v:3693$1146.inp  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.cs_registers_i.sv2v_cast_32$func$preprocessed.v:3751$1151.inp  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.cs_registers_i.sv2v_cast_32$func$preprocessed.v:3781$1154.inp  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.cs_registers_i.sv2v_cast_32$func$preprocessed.v:3983$1157.inp  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.cs_registers_i.sv2v_cast_4$func$preprocessed.v:3673$1139.inp  = 4'hx;
  assign \cv32e40x_core_inst.cs_registers_i.sv2v_cast_4$func$preprocessed.v:3751$1150.inp  = 4'hx;
  assign \cv32e40x_core_inst.cs_registers_i.sv2v_cast_4$func$preprocessed.v:3983$1156.inp  = 4'hx;
  assign \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_4AB31  = \cv32e40x_core_inst.cs_registers_i.csr_raddr ;
  assign \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_B0505  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192];
  assign \cv32e40x_core_inst.cs_registers_i.tdata1_rdata  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata1_csr_i.rdata_q ;
  assign \cv32e40x_core_inst.cs_registers_i.tdata1_we  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.tdata1_we_i ;
  assign \cv32e40x_core_inst.cs_registers_i.tdata2_rdata  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tmatch_csr[0].tdata2_csr_i.rdata_q ;
  assign \cv32e40x_core_inst.cs_registers_i.tdata2_we  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.tdata2_we_i ;
  assign \cv32e40x_core_inst.cs_registers_i.time_i  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.cs_registers_i.tinfo_rdata  = 32'd16810084;
  assign \cv32e40x_core_inst.cs_registers_i.trigger_match_ex_o  = { 31'h00000000, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.trigger_match_ex  };
  assign \cv32e40x_core_inst.cs_registers_i.trigger_match_if_o  = { 31'h00000000, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.trigger_match_if  };
  assign \cv32e40x_core_inst.cs_registers_i.tselect_rdata  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.rdata_q ;
  assign \cv32e40x_core_inst.cs_registers_i.tselect_we  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.tselect_csr_i.wr_en_i ;
  assign \cv32e40x_core_inst.cs_registers_i.unused_signals  = 1'h1;
  assign \cv32e40x_core_inst.csr_clic_pa  = 32'd0;
  assign \cv32e40x_core_inst.csr_clic_pa_valid  = 1'h0;
  assign \cv32e40x_core_inst.csr_counter_read  = \cv32e40x_core_inst.controller_i.bypass_i.csr_counter_read_i ;
  assign \cv32e40x_core_inst.csr_en_raw_id  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [23];
  assign \cv32e40x_core_inst.csr_hz  = { 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.csr_hz_i [26], \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_F9A70 , \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_1C271 , \cv32e40x_core_inst.cs_registers_i.csr_raddr , \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] };
  assign \cv32e40x_core_inst.csr_illegal  = \cv32e40x_core_inst.ex_stage_i.csr_illegal_i ;
  assign \cv32e40x_core_inst.csr_irq_enable_write  = \cv32e40x_core_inst.controller_i.bypass_i.csr_irq_enable_write_i ;
  assign \cv32e40x_core_inst.csr_mnxti_read  = 1'h0;
  assign \cv32e40x_core_inst.csr_mtvec_init_if  = \cv32e40x_core_inst.cs_registers_i.csr_mtvec_init_i ;
  assign \cv32e40x_core_inst.csr_rdata  = \cv32e40x_core_inst.ex_stage_i.csr_rdata_i ;
  assign \cv32e40x_core_inst.csr_wr_in_wb_flush  = \cv32e40x_core_inst.controller_i.controller_fsm_i.csr_wr_in_wb_flush_i ;
  assign \cv32e40x_core_inst.ctrl_byp  = { \cv32e40x_core_inst.id_stage_i.ctrl_byp_i [17:13], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [12:9], \cv32e40x_core_inst.controller_i.bypass_i.sv2v_tmp_E5A17 , 2'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [5], \cv32e40x_core_inst.id_stage_i.decoder_i.deassert_we_i , \cv32e40x_core_inst.id_stage_i.decoder_i.deassert_we_i , 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [1:0] };
  assign \cv32e40x_core_inst.ctrl_fsm  = { \cv32e40x_core_inst.sleep_unit_i.ctrl_fsm_i [201], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [200], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i , \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [198], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [197], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_5381E , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [9:0], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_63C61 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause , 11'h000, \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [147:145], \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [143:111], \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [109:107], 1'h0, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [105:73], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [72], 19'h00000, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [52:42], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [41:38], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C46A7 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C451 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_06A0A , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_31573 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [10], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C215 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_A1D3F , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_E0ABD , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_AEAA2 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_ECB01 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_90BD1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_D8609 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_557D1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.halt_i , \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [20], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [19], \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [18], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [17], \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16], \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [15], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [14], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [13], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  };
  assign \cv32e40x_core_inst.data_addr_o  = \cv32e40x_core_inst.load_store_unit_i.bus_trans [80:49];
  assign \cv32e40x_core_inst.data_atop_o  = \cv32e40x_core_inst.load_store_unit_i.bus_trans [48:43];
  assign \cv32e40x_core_inst.data_be_o  = \cv32e40x_core_inst.load_store_unit_i.bus_trans [41:38];
  assign \cv32e40x_core_inst.data_dbg_o  = \cv32e40x_core_inst.load_store_unit_i.bus_trans [0];
  assign \cv32e40x_core_inst.data_err_i  = 1'h0;
  assign \cv32e40x_core_inst.data_exokay_i  = 1'h1;
  assign \cv32e40x_core_inst.data_gnt_i  = data_gnt_i;
  assign \cv32e40x_core_inst.data_memtype_o  = \cv32e40x_core_inst.load_store_unit_i.bus_trans [5:4];
  assign \cv32e40x_core_inst.data_prot_o  = \cv32e40x_core_inst.load_store_unit_i.bus_trans [3:1];
  assign \cv32e40x_core_inst.data_rdata_i  = data_rdata_i;
  assign \cv32e40x_core_inst.data_req_o  = \cv32e40x_core_inst.m_c_obi_data_if.s_req ;
  assign \cv32e40x_core_inst.data_rvalid_i  = data_rvalid_i;
  assign \cv32e40x_core_inst.data_stall_wb  = \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i ;
  assign \cv32e40x_core_inst.data_wdata_o  = \cv32e40x_core_inst.load_store_unit_i.bus_trans [37:6];
  assign \cv32e40x_core_inst.data_we_o  = \cv32e40x_core_inst.m_c_obi_data_if.req_payload [42];
  assign \cv32e40x_core_inst.dcsr  = 32'd0;
  assign \cv32e40x_core_inst.debug_halted_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [107];
  assign \cv32e40x_core_inst.debug_havereset_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [109];
  assign \cv32e40x_core_inst.debug_pc_o  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [125:94];
  assign \cv32e40x_core_inst.debug_pc_valid_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated ;
  assign \cv32e40x_core_inst.debug_req_gated  = 1'h0;
  assign \cv32e40x_core_inst.debug_req_i  = debug_req_i;
  assign \cv32e40x_core_inst.debug_running_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [108];
  assign \cv32e40x_core_inst.dm_exception_addr_i  = 32'd0;
  assign \cv32e40x_core_inst.dm_halt_addr_i  = 32'd437323776;
  assign \cv32e40x_core_inst.dpc  = 32'd0;
  assign \cv32e40x_core_inst.etrigger_wb  = \cv32e40x_core_inst.controller_i.controller_fsm_i.etrigger_wb_i ;
  assign \cv32e40x_core_inst.ex_ready  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_ready_i ;
  assign \cv32e40x_core_inst.ex_stage_i.alu_cmp_result  = \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_decision_ex_i ;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i._sv2v_strm_2C78E$func$preprocessed.v:1075$4047._sv2v_strm_55E18_idx  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i._sv2v_strm_2C78E$func$preprocessed.v:1075$4047._sv2v_strm_55E18_inp  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i._sv2v_strm_2C78E$func$preprocessed.v:1075$4047._sv2v_strm_55E18_out  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i._sv2v_strm_2C78E$func$preprocessed.v:1075$4047.inp  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i._sv2v_strm_A820F$func$preprocessed.v:1089$4048._sv2v_strm_55E18_idx  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i._sv2v_strm_A820F$func$preprocessed.v:1089$4048._sv2v_strm_55E18_inp  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i._sv2v_strm_A820F$func$preprocessed.v:1089$4048._sv2v_strm_55E18_out  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i._sv2v_strm_A820F$func$preprocessed.v:1089$4048.inp  = 32'hxxxxxxxx;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.adder_in_a  = { \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312], 1'h1 };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.adder_in_b [0] = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [347];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.adder_result  = \cv32e40x_core_inst.ex_stage_i.alu_i.adder_result_expanded [32:1];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.adder_subtract  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [347];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.operand_i  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312];
  assign { \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [191:186], \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.sum [5:0] } = { \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.result_o , 5'h00, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [312] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.clmul_result  = 32'd0;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.clmulh_result  = 32'd0;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.clmulr_result  = 32'd0;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.clz_data_in  = \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.in_i ;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.cmp_result_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_decision_ex_i ;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.cpop_result_o  = \cv32e40x_core_inst.ex_stage_i.alu_i.alu_b_cpop_i.result_o ;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.div_clz_data_rev_i  = 32'd0;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.div_clz_en_i  = 1'h0;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.div_op_b_shifted_o  = \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_tmp [31:0];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.div_shift_amt_i  = 6'h00;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.div_shift_en_i  = 1'h0;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.first_one_o  = \cv32e40x_core_inst.ex_stage_i.alu_i.ff1_result ;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_lut  = 160'hffbbcdeb38bdab49ca307b9ac5a928398a418820;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.index_nodes [4:0] = \cv32e40x_core_inst.ex_stage_i.alu_i.ff1_result ;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.ff_one_i.sel_nodes [31] = 1'h0;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.gen_shift_nozbs.sv2v_tmp_86497  = \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_tmp [31:0];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.is_signed  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [347];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.muldiv_operand_b_i  = \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [208:177];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.no_clmul.sv2v_tmp_C4D03  = 32'd0;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.operand_a_i  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.operand_a_rev  = { \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [312], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [313], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [314], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [315], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [316], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [317], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [318], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [319], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [320], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [321], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [322], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [323], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [324], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [325], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [326], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [327], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [328], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [329], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [330], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [331], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [332], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [333], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [334], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [335], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [336], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [337], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [338], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [339], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [340], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [341], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [342], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.operand_b_i  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [311:280];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.operand_b_rev  = { \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [280], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [281], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [282], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [283], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [284], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [285], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [286], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [287], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [288], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [289], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [290], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [291], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [292], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [293], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [294], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [295], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [296], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [297], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [298], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [299], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [300], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [301], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [302], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [303], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [304], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [305], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [306], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [307], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [308], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [309], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [310], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [311] };
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.operator_i  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [349:344];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.result_o  = \cv32e40x_core_inst.ex_stage_i.alu_result ;
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_aa  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [343:312];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_result  = \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_tmp [31:0];
  assign \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_rshift  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [346];
  assign \cv32e40x_core_inst.ex_stage_i.alu_ready  = \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i ;
  assign \cv32e40x_core_inst.ex_stage_i.alu_valid  = 1'h1;
  assign \cv32e40x_core_inst.ex_stage_i.branch_decision_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.branch_decision_ex_i ;
  assign \cv32e40x_core_inst.ex_stage_i.branch_target_o  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [279:248];
  assign \cv32e40x_core_inst.ex_stage_i.clic_ptr_valid  = 1'h1;
  assign \cv32e40x_core_inst.ex_stage_i.clk  = clk_i;
  assign \cv32e40x_core_inst.ex_stage_i.csr_hz_i  = { 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.csr_hz_i [26], \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_F9A70 , \cv32e40x_core_inst.cs_registers_i.sv2v_tmp_1C271 , \cv32e40x_core_inst.cs_registers_i.csr_raddr , \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [203:192] };
  assign \cv32e40x_core_inst.ex_stage_i.csr_mnxti_read_i  = 1'h0;
  assign \cv32e40x_core_inst.ex_stage_i.csr_ready  = \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i ;
  assign \cv32e40x_core_inst.ex_stage_i.csr_valid  = 1'h1;
  assign { \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [201:20], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [18:15], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [13:0] } = { \cv32e40x_core_inst.sleep_unit_i.ctrl_fsm_i [201], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [200], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i , \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [198], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [197], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_5381E , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [9:0], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_63C61 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause , 11'h000, \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [147:145], \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [143:111], \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [109:107], 1'h0, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [105:73], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [72], 19'h00000, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [52:42], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [41:38], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C46A7 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C451 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_06A0A , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_31573 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [10], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C215 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_A1D3F , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_E0ABD , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_AEAA2 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_ECB01 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_90BD1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_D8609 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_557D1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.halt_i , \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [20], \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [18], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [17], \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16], \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [15], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [13], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  };
  assign \cv32e40x_core_inst.ex_stage_i.div_clz_data_rev  = 32'd0;
  assign \cv32e40x_core_inst.ex_stage_i.div_clz_en  = 1'h0;
  assign \cv32e40x_core_inst.ex_stage_i.div_clz_result  = \cv32e40x_core_inst.ex_stage_i.alu_i.div_clz_result_o ;
  assign \cv32e40x_core_inst.ex_stage_i.div_op_b_shifted  = \cv32e40x_core_inst.ex_stage_i.alu_i.shifter_tmp [31:0];
  assign \cv32e40x_core_inst.ex_stage_i.div_ready  = 1'h1;
  assign \cv32e40x_core_inst.ex_stage_i.div_result  = 32'd0;
  assign \cv32e40x_core_inst.ex_stage_i.div_shift_amt  = 6'h00;
  assign \cv32e40x_core_inst.ex_stage_i.div_shift_en  = 1'h0;
  assign \cv32e40x_core_inst.ex_stage_i.div_valid  = 1'h0;
  assign \cv32e40x_core_inst.ex_stage_i.ex_ready_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_ready_i ;
  assign \cv32e40x_core_inst.ex_stage_i.ex_valid_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_valid_i ;
  assign { \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [159], \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [157:127], \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [40:3], \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [1] } = { 36'h000000000, \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [36:5], 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [3], \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [1] };
  assign \cv32e40x_core_inst.ex_stage_i.forced_nop_valid  = 1'h1;
  assign \cv32e40x_core_inst.ex_stage_i.id_ex_pipe_i  = { \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [352:248], 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [246:244], 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [242:177], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [176:153], 31'h00000000, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [121:40], 37'h0000000000, \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [2], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [1], \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [0] };
  assign \cv32e40x_core_inst.ex_stage_i.last_op_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.last_op_ex_i ;
  assign \cv32e40x_core_inst.ex_stage_i.lsu_en_gated  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_valid_ex_i ;
  assign \cv32e40x_core_inst.ex_stage_i.lsu_ready_o  = \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i ;
  assign \cv32e40x_core_inst.ex_stage_i.lsu_valid_o  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_valid_ex_i ;
  assign \cv32e40x_core_inst.ex_stage_i.mret_ptr_valid  = 1'h1;
  assign \cv32e40x_core_inst.ex_stage_i.mul_ready  = 1'h1;
  assign \cv32e40x_core_inst.ex_stage_i.mul_result  = 32'd0;
  assign \cv32e40x_core_inst.ex_stage_i.mul_valid  = 1'h0;
  assign \cv32e40x_core_inst.ex_stage_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.ex_stage_i.sys_ready  = \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i ;
  assign \cv32e40x_core_inst.ex_stage_i.sys_valid  = 1'h1;
  assign \cv32e40x_core_inst.ex_stage_i.wb_ready_i  = \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i ;
  assign \cv32e40x_core_inst.ex_stage_i.xif_csr_error_o  = 1'h0;
  assign \cv32e40x_core_inst.ex_stage_i.xif_ready  = \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i ;
  assign \cv32e40x_core_inst.ex_stage_i.xif_valid  = 1'h1;
  assign \cv32e40x_core_inst.ex_valid  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_valid_i ;
  assign \cv32e40x_core_inst.ex_wb_pipe  = { \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [247:160], 1'h0, \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [158], 31'h00000000, \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [126:41], 4'h0, \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [36:5], 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [3], \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [2], \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [1], \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [0] };
  assign \cv32e40x_core_inst.fencei_flush_ack_i  = 1'h0;
  assign \cv32e40x_core_inst.fetch_enable  = \cv32e40x_core_inst.sleep_unit_i.fetch_enable_q ;
  assign \cv32e40x_core_inst.fetch_enable_i  = fetch_enable_i;
  assign \cv32e40x_core_inst.first_op_id  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [2];
  assign \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.clk  = clk_i;
  assign \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.global_irq_enable  = \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [3];
  assign \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.irq_i  = 32'd0;
  assign \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.irq_id_ctrl_o  = 5'h07;
  assign \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.irq_local_qual  = 32'd0;
  assign \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.irq_q  = 32'd0;
  assign \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.irq_req_ctrl_o  = 1'h0;
  assign \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.irq_wu_ctrl_o  = 1'h0;
  assign \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.mie_i  = { \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [31:16], 4'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [11], 3'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [7], 3'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [3], 3'h0 };
  assign \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.mip_o  = 32'd0;
  assign \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.mstatus_i  = { 24'h000018, \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [7], 3'h0, \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [3], 3'h0 };
  assign \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.priv_lvl_i  = 2'h3;
  assign \cv32e40x_core_inst.gen_basic_interrupt.int_controller_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.id_ex_pipe  = { \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [352:248], 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [246:244], 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [242:177], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [176:153], 31'h00000000, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [121:40], 37'h0000000000, \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [2], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [1], \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [0] };
  assign \cv32e40x_core_inst.id_ready  = \cv32e40x_core_inst.controller_i.controller_fsm_i.id_ready_i ;
  assign \cv32e40x_core_inst.id_stage_i.ID_EX_PIPE_REGISTERS.sv2v_autoblock_1.sv2v_tmp_cast  = 6'h13;
  assign \cv32e40x_core_inst.id_stage_i.ID_EX_PIPE_REGISTERS.sv2v_autoblock_2.sv2v_tmp_cast_1  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.ID_EX_PIPE_REGISTERS.sv2v_autoblock_3.sv2v_tmp_cast_2  = 2'h0;
  assign \cv32e40x_core_inst.id_stage_i.ID_EX_PIPE_REGISTERS.sv2v_autoblock_4.sv2v_tmp_cast_3  = 2'h0;
  assign \cv32e40x_core_inst.id_stage_i.abort_op_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.abort_op_id_i ;
  assign \cv32e40x_core_inst.id_stage_i.alu_bch  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [53];
  assign \cv32e40x_core_inst.id_stage_i.alu_en  = \cv32e40x_core_inst.controller_i.controller_fsm_i.alu_en_id_i ;
  assign \cv32e40x_core_inst.id_stage_i.alu_en_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.alu_en_id_i ;
  assign \cv32e40x_core_inst.id_stage_i.alu_jmp  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [52];
  assign \cv32e40x_core_inst.id_stage_i.alu_jmp_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [52];
  assign \cv32e40x_core_inst.id_stage_i.alu_jmpr  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [51];
  assign \cv32e40x_core_inst.id_stage_i.alu_jmpr_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [51];
  assign \cv32e40x_core_inst.id_stage_i.alu_op_a_mux_sel  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [44:43];
  assign \cv32e40x_core_inst.id_stage_i.alu_op_b_mux_sel  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [42:41];
  assign \cv32e40x_core_inst.id_stage_i.alu_operator  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [50:45];
  assign \cv32e40x_core_inst.id_stage_i.bch_jmp_mux_sel  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [35:34];
  assign \cv32e40x_core_inst.id_stage_i.clk  = clk_i;
  assign \cv32e40x_core_inst.id_stage_i.csr_en_raw  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [23];
  assign \cv32e40x_core_inst.id_stage_i.csr_en_raw_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [23];
  assign \cv32e40x_core_inst.id_stage_i.csr_op  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [22:21];
  assign \cv32e40x_core_inst.id_stage_i.ctrl_byp_i [12:0] = { \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [12:9], \cv32e40x_core_inst.controller_i.bypass_i.sv2v_tmp_E5A17 , 2'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [5], \cv32e40x_core_inst.id_stage_i.decoder_i.deassert_we_i , \cv32e40x_core_inst.id_stage_i.decoder_i.deassert_we_i , 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_byp_i [1:0] };
  assign { \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [201:21], \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [19:16], \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [14:0] } = { \cv32e40x_core_inst.sleep_unit_i.ctrl_fsm_i [201], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [200], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i , \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [198], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [197], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_5381E , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [9:0], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_63C61 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause , 11'h000, \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [147:145], \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [143:111], \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [109:107], 1'h0, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [105:73], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [72], 19'h00000, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [52:42], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [41:38], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C46A7 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C451 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_06A0A , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_31573 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [10], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C215 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_A1D3F , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_E0ABD , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_AEAA2 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_ECB01 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_90BD1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_D8609 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_557D1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.halt_i , \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [19], \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [18], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [17], \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [14], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [13], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  };
  assign \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.bch_jmp_mux_sel_i  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [35:34];
  assign \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.bch_target_o  = \cv32e40x_core_inst.id_stage_i.bch_target ;
  assign \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.imm_i_type_i  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:178] };
  assign \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.imm_sb_type_i  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [165], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [188:183], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [169:166], 1'h0 };
  assign \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.imm_uj_type_i  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:170], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [178], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [188:179], 1'h0 };
  assign \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.jmp_target_o  = \cv32e40x_core_inst.id_stage_i.bch_target ;
  assign \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.jvt_addr_i  = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [31:6];
  assign \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.jvt_index_i  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:170];
  assign \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.pc_id_i  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [149:118];
  assign \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.pc_target  = \cv32e40x_core_inst.id_stage_i.bch_target ;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.a_decoder.a_decoder_i.decoder_ctrl_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_a_ctrl_int ;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.a_decoder.a_decoder_i.instr_rdata_i  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:158];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.alu_bch_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [53];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.alu_en  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [54];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.alu_en_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.alu_en_id_i ;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.alu_jmp_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [52];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.alu_jmpr_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [51];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.alu_op_a_mux_sel_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [44:43];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.alu_op_b_mux_sel_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [42:41];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.alu_operator_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [50:45];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.bch_jmp_mux_sel_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [35:34];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.csr_en  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [23];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.csr_en_o  = \cv32e40x_core_inst.id_stage_i.csr_en ;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.csr_en_raw_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [23];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.csr_op_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [22:21];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.ctrl_fsm_i  = { \cv32e40x_core_inst.sleep_unit_i.ctrl_fsm_i [201], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [200], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i , \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [198], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [197], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_5381E , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [9:0], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_63C61 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause , 11'h000, \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [147:145], \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [143:111], \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [109:107], 1'h0, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [105:73], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [72], 19'h00000, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [52:42], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [41:38], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C46A7 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C451 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_06A0A , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_31573 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [10], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C215 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_A1D3F , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_E0ABD , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_AEAA2 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_ECB01 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_90BD1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_D8609 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_557D1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.halt_i , \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [20], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [19], \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [18], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [17], \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16], \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [15], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [14], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [13], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  };
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.dec_a_rf_illegal_addr  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.dec_b_rf_illegal_addr  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.dec_i_rf_illegal_addr  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.dec_m_rf_illegal_addr  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_b_ctrl  = 55'h027d4400000100;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_m_ctrl  = 55'h027d4400000100;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.div_en  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.div_en_o  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.div_operator_o  = 2'h0;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.i_decoder_i.ctrl_fsm_i  = { \cv32e40x_core_inst.sleep_unit_i.ctrl_fsm_i [201], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [200], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i , \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [198], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [197], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_5381E , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [9:0], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_63C61 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause , 11'h000, \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [147:145], \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [143:111], \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [109:107], 1'h0, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [105:73], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [72], 19'h00000, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [52:42], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [41:38], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C46A7 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C451 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_06A0A , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_31573 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [10], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C215 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_A1D3F , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_E0ABD , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_AEAA2 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_ECB01 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_90BD1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_D8609 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_557D1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.halt_i , \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [20], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [19], \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [18], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [17], \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16], \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [15], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [14], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [13], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  };
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.i_decoder_i.decoder_ctrl_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl_int ;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.i_decoder_i.instr_rdata_i  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:158];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.i_decoder_i.tbljmp_i  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [151];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.if_id_pipe_i  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [190:99], 31'h00000000, \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [67], 32'h00000000, \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [34:0] };
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.imm_a_mux_sel_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [38];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.imm_b_mux_sel_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [37:36];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.instr_rdata  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:158];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.lsu_atop_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_a_ctrl [15:10];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.lsu_en  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [20];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.lsu_en_o  = \cv32e40x_core_inst.id_stage_i.lsu_en ;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.lsu_sext_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [16];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.lsu_size_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [18:17];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.lsu_we_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [19];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.mul_en  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.mul_en_o  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.mul_operator_o  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.mul_signed_mode_o  = 2'h0;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.op_c_mux_sel_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [40:39];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.rf_illegal_raddr_o  = 2'h0;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.rf_illegal_waddr  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.rf_raddr_i  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] };
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.rf_re_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [26:25];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.rf_waddr_i  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [169:165];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.rf_we  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [24];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.sys_dret_insn_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [7];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.sys_ebrk_insn_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [6];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.sys_ecall_insn_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [5];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.sys_en  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [9];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.sys_en_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.sys_en_id_i ;
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.sys_fence_insn_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [4];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.sys_fencei_insn_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [3];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.sys_mret_insn_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [2];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.sys_wfe_insn_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [0];
  assign \cv32e40x_core_inst.id_stage_i.decoder_i.sys_wfi_insn_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [1];
  assign \cv32e40x_core_inst.id_stage_i.div_en  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.div_operator  = 2'h0;
  assign \cv32e40x_core_inst.id_stage_i.ex_ready_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.ex_ready_i ;
  assign \cv32e40x_core_inst.id_stage_i.ex_wb_pipe_i  = { \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [247:160], 1'h0, \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [158], 31'h00000000, \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [126:41], 4'h0, \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [36:5], 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [3], \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [2], \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [1], \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [0] };
  assign \cv32e40x_core_inst.id_stage_i.first_op_o  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [2];
  assign { \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [247:177], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [152:122], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [39:2], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [0] } = { 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [246:244], 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [242:177], 68'h00000000000000000, \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [2], \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [0] };
  assign \cv32e40x_core_inst.id_stage_i.id_ready_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.id_ready_i ;
  assign \cv32e40x_core_inst.id_stage_i.id_valid_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.id_valid_i ;
  assign \cv32e40x_core_inst.id_stage_i.if_id_pipe_i  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [190:99], 31'h00000000, \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [67], 32'h00000000, \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [34:0] };
  assign \cv32e40x_core_inst.id_stage_i.illegal_insn  = \cv32e40x_core_inst.id_stage_i.decoder_i.illegal_insn_o ;
  assign \cv32e40x_core_inst.id_stage_i.imm_a_mux_sel  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [38];
  assign \cv32e40x_core_inst.id_stage_i.imm_b_mux_sel  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [37:36];
  assign \cv32e40x_core_inst.id_stage_i.imm_i_type  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:178] };
  assign \cv32e40x_core_inst.id_stage_i.imm_s_type  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:183], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [169:165] };
  assign \cv32e40x_core_inst.id_stage_i.imm_sb_type  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [165], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [188:183], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [169:166], 1'h0 };
  assign \cv32e40x_core_inst.id_stage_i.imm_u_type  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:170], 12'h000 };
  assign \cv32e40x_core_inst.id_stage_i.imm_uj_type  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:170], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [178], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [188:179], 1'h0 };
  assign \cv32e40x_core_inst.id_stage_i.imm_z_type  = { 27'h0000000, \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173] };
  assign \cv32e40x_core_inst.id_stage_i.instr  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [189:158];
  assign \cv32e40x_core_inst.id_stage_i.instr_valid  = \cv32e40x_core_inst.controller_i.controller_fsm_i.id_valid_i ;
  assign \cv32e40x_core_inst.id_stage_i.jalr_fw  = \cv32e40x_core_inst.id_stage_i.cv32e40x_pc_target_i.jalr_fw_i ;
  assign \cv32e40x_core_inst.id_stage_i.jmp_target_o  = \cv32e40x_core_inst.id_stage_i.bch_target ;
  assign \cv32e40x_core_inst.id_stage_i.jvt_addr_i  = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [31:6];
  assign \cv32e40x_core_inst.id_stage_i.jvt_index  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:170];
  assign \cv32e40x_core_inst.id_stage_i.last_op_o  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [1];
  assign \cv32e40x_core_inst.id_stage_i.lsu_atop  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_a_ctrl [15:10];
  assign \cv32e40x_core_inst.id_stage_i.lsu_sext  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [16];
  assign \cv32e40x_core_inst.id_stage_i.lsu_size  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [18:17];
  assign \cv32e40x_core_inst.id_stage_i.lsu_we  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [19];
  assign \cv32e40x_core_inst.id_stage_i.mcause_i  = { \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [31], 20'h00000, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [10:0] };
  assign \cv32e40x_core_inst.id_stage_i.mul_en  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.mul_operator  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.mul_signed_mode  = 2'h0;
  assign \cv32e40x_core_inst.id_stage_i.no_x_ext.sv2v_tmp_2C7E0  = 6'h00;
  assign \cv32e40x_core_inst.id_stage_i.no_x_ext.sv2v_tmp_73036  = 2'h0;
  assign \cv32e40x_core_inst.id_stage_i.no_x_ext.sv2v_tmp_7A2FC  = 2'h0;
  assign \cv32e40x_core_inst.id_stage_i.no_x_ext.sv2v_tmp_7D3C1  = 4'h0;
  assign \cv32e40x_core_inst.id_stage_i.no_x_ext.sv2v_tmp_85082  = 32'd0;
  assign \cv32e40x_core_inst.id_stage_i.no_x_ext.sv2v_tmp_C1C70  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.no_x_ext.sv2v_tmp_ED5B0  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.id_stage_i.no_x_ext.unused_xif_signals  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.op_c_mux_sel  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [40:39];
  assign \cv32e40x_core_inst.id_stage_i.rf_illegal_raddr  = 2'h0;
  assign \cv32e40x_core_inst.id_stage_i.rf_raddr_o  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] };
  assign \cv32e40x_core_inst.id_stage_i.rf_rdata_i  = \cv32e40x_core_inst.rf_rdata_id ;
  assign \cv32e40x_core_inst.id_stage_i.rf_re  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [26:25];
  assign \cv32e40x_core_inst.id_stage_i.rf_re_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [26:25];
  assign \cv32e40x_core_inst.id_stage_i.rf_waddr  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [169:165];
  assign \cv32e40x_core_inst.id_stage_i.rf_wdata_ex_i  = \cv32e40x_core_inst.ex_stage_i.rf_wdata_o ;
  assign \cv32e40x_core_inst.id_stage_i.rf_wdata_wb_i  = \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  assign \cv32e40x_core_inst.id_stage_i.rf_we  = \cv32e40x_core_inst.id_stage_i.decoder_i.rf_we_o ;
  assign \cv32e40x_core_inst.id_stage_i.rf_we_dec  = \cv32e40x_core_inst.id_stage_i.decoder_i.rf_we_o ;
  assign \cv32e40x_core_inst.id_stage_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.id_stage_i.sys_dret_insn  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [7];
  assign \cv32e40x_core_inst.id_stage_i.sys_ebrk_insn  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [6];
  assign \cv32e40x_core_inst.id_stage_i.sys_ecall_insn  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [5];
  assign \cv32e40x_core_inst.id_stage_i.sys_en  = \cv32e40x_core_inst.controller_i.controller_fsm_i.sys_en_id_i ;
  assign \cv32e40x_core_inst.id_stage_i.sys_en_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.sys_en_id_i ;
  assign \cv32e40x_core_inst.id_stage_i.sys_fence_insn  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [4];
  assign \cv32e40x_core_inst.id_stage_i.sys_fencei_insn  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [3];
  assign \cv32e40x_core_inst.id_stage_i.sys_mret_insn  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [2];
  assign \cv32e40x_core_inst.id_stage_i.sys_mret_insn_o  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [2];
  assign \cv32e40x_core_inst.id_stage_i.sys_wfe_insn  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [0];
  assign \cv32e40x_core_inst.id_stage_i.sys_wfi_insn  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [1];
  assign \cv32e40x_core_inst.id_stage_i.tbljmp_first  = \cv32e40x_core_inst.id_stage_i.decoder_i.tbljmp_first_i ;
  assign \cv32e40x_core_inst.id_stage_i.xif_dualwrite  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.xif_en  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.xif_exception  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.xif_insn_accept  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.xif_insn_reject  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.xif_loadstore  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.xif_offloading_o  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.xif_waiting  = 1'h0;
  assign \cv32e40x_core_inst.id_stage_i.xif_we  = 1'h0;
  assign \cv32e40x_core_inst.id_valid  = \cv32e40x_core_inst.controller_i.controller_fsm_i.id_valid_i ;
  assign \cv32e40x_core_inst.if_busy  = \cv32e40x_core_inst.sleep_unit_i.if_busy_i ;
  assign \cv32e40x_core_inst.if_id_pipe  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [190:99], 31'h00000000, \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [67], 32'h00000000, \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [34:0] };
  assign \cv32e40x_core_inst.if_stage_i.abort_op_o  = \cv32e40x_core_inst.abort_op_if ;
  assign \cv32e40x_core_inst.if_stage_i.boot_addr_i  = 32'd131072;
  assign \cv32e40x_core_inst.if_stage_i.branch_target_ex_i  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [279:248];
  assign \cv32e40x_core_inst.if_stage_i.bus_resp  = { instr_rdata_i, 1'h0 };
  assign \cv32e40x_core_inst.if_stage_i.bus_resp_valid  = instr_rvalid_i;
  assign \cv32e40x_core_inst.if_stage_i.bus_trans  = { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_o , \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.pma_cfg [1], 1'h0, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i , 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n  };
  assign \cv32e40x_core_inst.if_stage_i.bus_trans_ready  = \cv32e40x_core_inst.if_stage_i.mpu_i.bus_trans_ready_i ;
  assign \cv32e40x_core_inst.if_stage_i.clk  = clk_i;
  assign \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.illegal_instr_o  = \cv32e40x_core_inst.if_stage_i.illegal_c_insn ;
  assign \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr  = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [34:3];
  assign \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_is_ptr_i  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i ;
  assign \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_o  = { \cv32e40x_core_inst.if_stage_i.instr_decompressed [34:3], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [2:0] };
  assign \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.is_compressed_o  = \cv32e40x_core_inst.if_stage_i.instr_compressed ;
  assign \cv32e40x_core_inst.if_stage_i.core_trans  = { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_o , 2'h0, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i , 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n  };
  assign \cv32e40x_core_inst.if_stage_i.csr_mtvec_init_o  = \cv32e40x_core_inst.cs_registers_i.csr_mtvec_init_i ;
  assign { \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [201:199], \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [197:17], \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [15:0] } = { \cv32e40x_core_inst.sleep_unit_i.ctrl_fsm_i [201], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [200], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i , \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [197], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_5381E , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [9:0], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_63C61 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause , 11'h000, \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [147:145], \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [143:111], \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [109:107], 1'h0, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [105:73], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [72], 19'h00000, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [52:42], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [41:38], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C46A7 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C451 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_06A0A , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_31573 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [10], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C215 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_A1D3F , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_E0ABD , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_AEAA2 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_ECB01 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_90BD1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_D8609 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_557D1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.halt_i , \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [20], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [19], \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [18], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [17], \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [15], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [14], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [13], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  };
  assign \cv32e40x_core_inst.if_stage_i.dm_exception_addr_i  = 32'd0;
  assign \cv32e40x_core_inst.if_stage_i.dm_halt_addr_i  = 32'd437323776;
  assign \cv32e40x_core_inst.if_stage_i.dpc_i  = 32'd0;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.clk  = clk_i;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_get_stack_adj_base$func$preprocessed.v:9548$2309.rlist  = 4'hx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_pushpop_reg_length$func$preprocessed.v:9522$2308.rlist4  = 4'hx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_sn_to_regnum$func$preprocessed.v:9618$2278.snum  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_sn_to_regnum$func$preprocessed.v:9624$2281.snum  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_sn_to_regnum$func$preprocessed.v:9641$2284.snum  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_sn_to_regnum$func$preprocessed.v:9647$2287.snum  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_sn_to_regnum$func$preprocessed.v:9661$2290.snum  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_sn_to_regnum$func$preprocessed.v:9678$2293.snum  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_sn_to_regnum$func$preprocessed.v:9686$2296.snum  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_sn_to_regnum$func$preprocessed.v:9696$2299.snum  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_sn_to_regnum$func$preprocessed.v:9708$2302.snum  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_sn_to_regnum$func$preprocessed.v:9711$2305.snum  = 5'hxx;
  assign { \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.decode [44:17], \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.decode [4:0] } = { \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_get_stack_adj_base$func$preprocessed.v:9548$2276.$result , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_pushpop_reg_length$func$preprocessed.v:9522$2275.$result , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_tmp_43B39 , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_tmp_0F807  };
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr  = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [34:3];
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr_i  = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i ;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr_is_clic_ptr_i  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_clic_ptr_q ;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr_is_mret_ptr_i  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_mret_ptr_q ;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr_is_pointer  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i ;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr_is_tbljmp_ptr_i  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_tbljmp_ptr_q ;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.instr_o  = { \cv32e40x_core_inst.if_stage_i.seq_instr [34:3], \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [2:0] };
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.jvt_mode_i  = 6'h00;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.kill_i  = \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16];
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.ready_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.id_ready_i ;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.ready_o  = \cv32e40x_core_inst.if_stage_i.seq_ready ;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.rlist  = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [10:7];
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_first_o  = \cv32e40x_core_inst.if_stage_i.seq_first ;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_last_o  = \cv32e40x_core_inst.if_stage_i.seq_last ;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_pushpop_o  = \cv32e40x_core_inst.if_stage_i.seq_pushpop ;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_12$func$preprocessed.v:9567$2277.inp  = 12'hxxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9592$2279.inp  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9592$2282.inp  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9592$2285.inp  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9592$2288.inp  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9592$2291.inp  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9592$2294.inp  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9592$2297.inp  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9592$2300.inp  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9592$2303.inp  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9592$2306.inp  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9595$2280.inp  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9595$2283.inp  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9595$2286.inp  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9595$2289.inp  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9595$2292.inp  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9595$2295.inp  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9595$2298.inp  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9595$2301.inp  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9595$2304.inp  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_cast_5$func$preprocessed.v:9595$2307.inp  = 5'hxx;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_tmp_1047E  = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_pushpop_reg_length$func$preprocessed.v:9522$2275.$result ;
  assign \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.sv2v_tmp_64EFF  = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.cv32e40x_pkg_get_stack_adj_base$func$preprocessed.v:9548$2276.$result ;
  assign \cv32e40x_core_inst.if_stage_i.id_ready_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.id_ready_i ;
  assign \cv32e40x_core_inst.if_stage_i.if_busy_o  = \cv32e40x_core_inst.sleep_unit_i.if_busy_i ;
  assign { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [98:68], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [66:35] } = 63'h0000000000000000;
  assign \cv32e40x_core_inst.if_stage_i.if_ready  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_ready_i ;
  assign \cv32e40x_core_inst.if_stage_i.if_valid_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.if_valid_i ;
  assign \cv32e40x_core_inst.if_stage_i.instr_decompressed [2:0] = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [2:0];
  assign \cv32e40x_core_inst.if_stage_i.instr_meta_n  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [154], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_clic_ptr_q , \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_mret_ptr_q , \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [151:150] };
  assign \cv32e40x_core_inst.if_stage_i.instr_valid  = \cv32e40x_core_inst.controller_i.controller_fsm_i.if_valid_i ;
  assign \cv32e40x_core_inst.if_stage_i.instruction_obi_i.clk  = clk_i;
  assign { \cv32e40x_core_inst.if_stage_i.instruction_obi_i.obi_a_req_q [4], \cv32e40x_core_inst.if_stage_i.instruction_obi_i.obi_a_req_q [1] } = 2'h0;
  assign \cv32e40x_core_inst.if_stage_i.instruction_obi_i.resp_o  = { instr_rdata_i, 1'h0 };
  assign \cv32e40x_core_inst.if_stage_i.instruction_obi_i.resp_valid_o  = instr_rvalid_i;
  assign \cv32e40x_core_inst.if_stage_i.instruction_obi_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.if_stage_i.instruction_obi_i.trans_i  = { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_o , \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.pma_cfg [1], 1'h0, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i , 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n  };
  assign \cv32e40x_core_inst.if_stage_i.instruction_obi_i.trans_ready_o  = \cv32e40x_core_inst.if_stage_i.mpu_i.bus_trans_ready_i ;
  assign \cv32e40x_core_inst.if_stage_i.instruction_obi_i.trans_valid_i  = \cv32e40x_core_inst.if_stage_i.bus_trans_valid ;
  assign \cv32e40x_core_inst.if_stage_i.jump_target_id_i  = \cv32e40x_core_inst.id_stage_i.bch_target ;
  assign \cv32e40x_core_inst.if_stage_i.jvt_mode_i  = 6'h00;
  assign \cv32e40x_core_inst.if_stage_i.last_op_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.last_op_if_i ;
  assign \cv32e40x_core_inst.if_stage_i.mepc_i  = { \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [31:1], 1'h0 };
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.atomic_access_i  = 1'h0;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.bus_resp_i  = { instr_rdata_i, 1'h0 };
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.bus_resp_valid_i  = instr_rvalid_i;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.bus_trans_bufferable  = 1'h0;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.bus_trans_cacheable  = \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.pma_cfg [1];
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.bus_trans_o  = { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_o , \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.pma_cfg [1], 1'h0, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i , 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n  };
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.bus_trans_valid_o  = \cv32e40x_core_inst.if_stage_i.bus_trans_valid ;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.clk  = clk_i;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.core_mpu_err_o  = \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_err ;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.core_mpu_err_wait_i  = 1'h1;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.core_resp_o  = { instr_rdata_i, 1'h0, \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_status  };
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.core_resp_valid_o  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_count_down ;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_i  = { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_o , 2'h0, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i , 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n  };
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_pushpop_i  = 1'h0;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_ready_o  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_ready_i ;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_we  = 1'h0;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.instr_fetch_access  = 1'h1;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.load_access  = 1'h0;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.misaligned_access_i  = 1'h0;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.modified_access_i  = 1'h0;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.pma_err  = \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_err ;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.atomic_access_i  = 1'h0;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.instr_fetch_access_i  = 1'h1;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.load_access_i  = 1'h0;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.misaligned_access_i  = 1'h0;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.modified_access_i  = 1'h0;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.pma_bufferable_o  = 1'h0;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.pma_cacheable_o  = \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.pma_cfg [1];
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.pma_cfg_atomic  = \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.pma_cfg [0];
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.pma_err_o  = \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_err ;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.trans_addr_i  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_o ;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.trans_debug_region_i  = \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_debug_region ;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.trans_pushpop_i  = 1'h0;
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.pma_i.word_addr  = { 2'h0, \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_o [31:2] };
  assign \cv32e40x_core_inst.if_stage_i.mpu_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.if_stage_i.mtvec_addr_i  = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [31:7];
  assign \cv32e40x_core_inst.if_stage_i.mtvt_addr_i  = 25'h0000000;
  assign \cv32e40x_core_inst.if_stage_i.pc_if_o  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q ;
  assign \cv32e40x_core_inst.if_stage_i.predec_ready  = \cv32e40x_core_inst.controller_i.controller_fsm_i.id_ready_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_busy  = \cv32e40x_core_inst.sleep_unit_i.if_busy_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_inst_resp  = { instr_rdata_i, 1'h0, \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_status  };
  assign \cv32e40x_core_inst.if_stage_i.prefetch_instr  = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_is_clic_ptr  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_clic_ptr_q ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_is_mret_ptr  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_mret_ptr_q ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_is_tbljmp_ptr  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_tbljmp_ptr_q ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_one_txn_pend_n  = \cv32e40x_core_inst.if_stage_i.mpu_i.core_one_txn_pend_n ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_outstnd_cnt_q  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_cnt_q ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_priv_lvl  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_ready  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_ready_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_resp_valid  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_count_down ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_trans_addr  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_o ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_trans_ready  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_ready_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_trans_valid  = \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_valid_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.branch_addr_i  = { \cv32e40x_core_inst.if_stage_i.branch_addr_n [31:1], 1'h0 };
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.clk  = clk_i;
  assign { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [201], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [199:198], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [196:0] } = { \cv32e40x_core_inst.sleep_unit_i.ctrl_fsm_i [201], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i , \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [198], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_5381E , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [9:0], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_63C61 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause , 11'h000, \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [147:145], \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [143:111], \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [109:107], 1'h0, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [105:73], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [72], 19'h00000, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [52:42], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [41:38], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C46A7 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C451 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_06A0A , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_31573 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [10], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C215 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_A1D3F , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_E0ABD , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_AEAA2 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_ECB01 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_90BD1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_D8609 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_557D1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.halt_i , \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [20], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [19], \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [18], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [17], \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16], \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [15], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [14], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [13], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  };
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_branch_addr_o  = { \cv32e40x_core_inst.if_stage_i.branch_addr_n [31:1], 1'h0 };
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_branch_o  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_priv_lvl_i  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_priv_lvl_o  = 2'h3;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_ptr_access_o  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_ptr_access_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_valid_o  = \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_valid_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_addr_o  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_instr_o  = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_is_clic_ptr_o  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_clic_ptr_q ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_is_mret_ptr_o  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_mret_ptr_q ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_is_tbljmp_ptr_o  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_tbljmp_ptr_q ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_priv_lvl_o  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_priv_lvl_q  = 2'h3;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_valid_o  = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.valid_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.n_incoming_ins  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.n_pushed_ins ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.one_txn_pend_n  = \cv32e40x_core_inst.if_stage_i.mpu_i.core_one_txn_pend_n ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstnd_cnt_q_o  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_cnt_q ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.prefetch_busy_o  = \cv32e40x_core_inst.sleep_unit_i.if_busy_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.priv_lvl_ctrl_i  = 3'h3;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_i  = { instr_rdata_i, 1'h0, \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_status  };
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.resp_valid_i  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_count_down ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.branch_addr_i  = { \cv32e40x_core_inst.if_stage_i.branch_addr_n [31:1], 1'h0 };
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.clk  = clk_i;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.ctrl_fsm_i  = { \cv32e40x_core_inst.sleep_unit_i.ctrl_fsm_i [201], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [200], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i , \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [198], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [197], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_5381E , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [9:0], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_63C61 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause , 11'h000, \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [147:145], \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [143:111], \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [109:107], 1'h0, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [105:73], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [72], 19'h00000, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [52:42], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [41:38], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C46A7 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C451 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_06A0A , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_31573 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [10], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C215 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_A1D3F , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_E0ABD , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_AEAA2 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_ECB01 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_90BD1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_D8609 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_557D1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.halt_i , \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [20], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [19], \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [18], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [17], \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16], \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [15], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [14], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [13], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  };
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.fetch_branch  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.fetch_branch_addr  = { \cv32e40x_core_inst.if_stage_i.branch_addr_n [31:1], 1'h0 };
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.fetch_priv_lvl_access  = 2'h3;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.fetch_priv_lvl_resp  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.fetch_ptr_access  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_ptr_access_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.fetch_ptr_resp  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_ptr_access_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.fetch_ready  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_ready_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.fetch_valid  = \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_valid_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.one_txn_pend_n  = \cv32e40x_core_inst.if_stage_i.mpu_i.core_one_txn_pend_n ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.outstnd_cnt_q_o  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_cnt_q ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetch_addr_o  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetch_busy_o  = \cv32e40x_core_inst.sleep_unit_i.if_busy_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetch_instr_o  = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetch_is_clic_ptr_o  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_clic_ptr_q ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetch_is_mret_ptr_o  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_mret_ptr_q ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetch_is_tbljmp_ptr_o  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.is_tbljmp_ptr_q ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetch_priv_lvl_o  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetch_ready_i  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.instr_ready_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetch_valid_o  = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.valid_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.clk  = clk_i;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_addr_i  = { \cv32e40x_core_inst.if_stage_i.branch_addr_n [31:1], 1'h0 };
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_priv_lvl_access_i  = 2'h3;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_priv_lvl_access_o  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_ptr_access_o  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_ptr_access_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_ready_o  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.fetch_ready_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_valid_i  = \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_valid_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_valid_o  = \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_valid_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.priv_lvl_ctrl_i  = 3'h3;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.resp_i  = { instr_rdata_i, 1'h0, \cv32e40x_core_inst.if_stage_i.mpu_i.mpu_status  };
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.resp_valid_i  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.outstanding_count_down ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.trans_addr_o  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_addr_o ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.trans_ready_i  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.trans_ready_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.trans_valid_o  = \cv32e40x_core_inst.if_stage_i.mpu_i.core_trans_valid_i ;
  assign \cv32e40x_core_inst.if_stage_i.prefetch_valid  = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.valid_i ;
  assign \cv32e40x_core_inst.if_stage_i.priv_lvl_ctrl_i  = 3'h3;
  assign \cv32e40x_core_inst.if_stage_i.priv_lvl_if_o  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i ;
  assign \cv32e40x_core_inst.if_stage_i.ptr_in_if_o  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i ;
  assign \cv32e40x_core_inst.if_stage_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.if_stage_i.seq_instr [2:0] = \cv32e40x_core_inst.if_stage_i.compressed_decoder_i.instr_i [2:0];
  assign \cv32e40x_core_inst.if_stage_i.seq_instr_valid  = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.valid_i ;
  assign \cv32e40x_core_inst.if_stage_i.seq_tbljmp  = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.seq_tbljmp_o ;
  assign \cv32e40x_core_inst.if_stage_i.seq_valid  = \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.valid_o ;
  assign \cv32e40x_core_inst.if_stage_i.trigger_match_i  = { 31'h00000000, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.trigger_match_if  };
  assign \cv32e40x_core_inst.if_stage_i.xif_id  = 4'h0;
  assign \cv32e40x_core_inst.if_stage_i.xif_offloading_id_i  = 1'h0;
  assign \cv32e40x_core_inst.if_valid  = \cv32e40x_core_inst.controller_i.controller_fsm_i.if_valid_i ;
  assign \cv32e40x_core_inst.instr_addr_o  = { \cv32e40x_core_inst.m_c_obi_instr_if.req_payload [37:8], 2'h0 };
  assign \cv32e40x_core_inst.instr_dbg_o  = \cv32e40x_core_inst.m_c_obi_instr_if.req_payload [0];
  assign \cv32e40x_core_inst.instr_err_i  = 1'h0;
  assign \cv32e40x_core_inst.instr_gnt_i  = instr_gnt_i;
  assign \cv32e40x_core_inst.instr_memtype_o  = \cv32e40x_core_inst.m_c_obi_instr_if.req_payload [5:4];
  assign \cv32e40x_core_inst.instr_prot_o  = \cv32e40x_core_inst.m_c_obi_instr_if.req_payload [3:1];
  assign \cv32e40x_core_inst.instr_rdata_i  = instr_rdata_i;
  assign \cv32e40x_core_inst.instr_req_o  = \cv32e40x_core_inst.m_c_obi_instr_if.s_req ;
  assign \cv32e40x_core_inst.instr_rvalid_i  = instr_rvalid_i;
  assign \cv32e40x_core_inst.irq_ack  = \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [10];
  assign \cv32e40x_core_inst.irq_clic_level  = 8'h00;
  assign \cv32e40x_core_inst.irq_clic_priv  = 2'h0;
  assign \cv32e40x_core_inst.irq_clic_shv  = 1'h0;
  assign \cv32e40x_core_inst.irq_i  = 32'd0;
  assign \cv32e40x_core_inst.irq_id  = \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [9:0];
  assign \cv32e40x_core_inst.irq_id_ctrl  = 10'h007;
  assign \cv32e40x_core_inst.irq_level  = 8'h00;
  assign \cv32e40x_core_inst.irq_priv  = 2'h0;
  assign \cv32e40x_core_inst.irq_req_ctrl  = 1'h0;
  assign \cv32e40x_core_inst.irq_shv  = 1'h0;
  assign \cv32e40x_core_inst.irq_wu_ctrl  = 1'h0;
  assign \cv32e40x_core_inst.jump_target_id  = \cv32e40x_core_inst.id_stage_i.bch_target ;
  assign \cv32e40x_core_inst.jvt_addr  = \cv32e40x_core_inst.cs_registers_i.jvt_csr_i.rdata_q [31:6];
  assign \cv32e40x_core_inst.jvt_mode  = 6'h00;
  assign \cv32e40x_core_inst.last_op_ex  = \cv32e40x_core_inst.controller_i.controller_fsm_i.last_op_ex_i ;
  assign \cv32e40x_core_inst.last_op_id  = \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [1];
  assign \cv32e40x_core_inst.last_op_if  = \cv32e40x_core_inst.controller_i.controller_fsm_i.last_op_if_i ;
  assign \cv32e40x_core_inst.last_op_wb  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [2];
  assign \cv32e40x_core_inst.load_store_unit_i.alcheck_resp  = { data_rdata_i, \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_err_wb_i [0], 36'h400000000, \cv32e40x_core_inst.wb_stage_i.lsu_align_status_i  };
  assign \cv32e40x_core_inst.load_store_unit_i.alcheck_resp_valid  = \cv32e40x_core_inst.load_store_unit_i.mpu_i.bus_resp_valid_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.alcheck_trans  = { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i , \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168:163], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i , \cv32e40x_core_inst.load_store_unit_i.wdata , \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cfg [1], \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.bufferable , 3'h7, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  };
  assign \cv32e40x_core_inst.load_store_unit_i.alcheck_trans_ready  = \cv32e40x_core_inst.load_store_unit_i.mpu_i.bus_trans_ready_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.alcheck_trans_valid  = \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_trans_valid_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_en  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168];
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.align_check_en_i  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168];
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.align_status  = \cv32e40x_core_inst.wb_stage_i.lsu_align_status_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.bus_resp_i  = { data_rdata_i, \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_err_wb_i [0], 2'h1 };
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.bus_trans_o  = { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i , \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168:163], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i , \cv32e40x_core_inst.load_store_unit_i.wdata , \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cfg [1], \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.bufferable , 3'h7, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  };
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.bus_trans_valid_o  = \cv32e40x_core_inst.load_store_unit_i.response_filter_i.valid_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.clk  = clk_i;
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_align_err_o  = \cv32e40x_core_inst.load_store_unit_i.align_check_i.align_err ;
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_align_err_wait_i  = 1'h1;
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_resp_o  = { data_rdata_i, \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_err_wb_i [0], 36'h400000000, \cv32e40x_core_inst.wb_stage_i.lsu_align_status_i  };
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_resp_valid_o  = \cv32e40x_core_inst.load_store_unit_i.mpu_i.bus_resp_valid_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_trans_i  = { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i , \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168:163], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i , \cv32e40x_core_inst.load_store_unit_i.wdata , \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cfg [1], \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.bufferable , 3'h7, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  };
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_trans_ready_o  = \cv32e40x_core_inst.load_store_unit_i.mpu_i.bus_trans_ready_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_trans_we  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172];
  assign \cv32e40x_core_inst.load_store_unit_i.align_check_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.load_store_unit_i.be  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.buffer_trans  = { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i , \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168:163], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i , \cv32e40x_core_inst.load_store_unit_i.wdata , \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cfg [1], \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.bufferable , 3'h7, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  };
  assign \cv32e40x_core_inst.load_store_unit_i.buffer_trans_ready  = \cv32e40x_core_inst.load_store_unit_i.response_filter_i.ready_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.buffer_trans_valid  = \cv32e40x_core_inst.load_store_unit_i.response_filter_i.valid_o ;
  assign \cv32e40x_core_inst.load_store_unit_i.bus_busy_o  = \cv32e40x_core_inst.controller_i.bypass_i.lsu_bus_busy_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.bus_resp  = { data_rdata_i, 3'h1 };
  assign \cv32e40x_core_inst.load_store_unit_i.bus_resp_valid  = data_rvalid_i;
  assign \cv32e40x_core_inst.load_store_unit_i.bus_trans [42] = \cv32e40x_core_inst.m_c_obi_data_if.req_payload [42];
  assign \cv32e40x_core_inst.load_store_unit_i.bus_trans_ready  = data_gnt_i;
  assign \cv32e40x_core_inst.load_store_unit_i.bus_trans_valid  = \cv32e40x_core_inst.m_c_obi_data_if.s_req ;
  assign \cv32e40x_core_inst.load_store_unit_i.busy_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_busy_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.clk  = clk_i;
  assign \cv32e40x_core_inst.load_store_unit_i.cnt_is_one_next  = \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_one_txn_pend_n ;
  assign \cv32e40x_core_inst.load_store_unit_i.consumer_resp_wait  = 1'h1;
  assign \cv32e40x_core_inst.load_store_unit_i.ctrl_fsm_i  = { \cv32e40x_core_inst.sleep_unit_i.ctrl_fsm_i [201], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [200], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i , \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [198], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [197], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_5381E , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [9:0], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_63C61 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause , 11'h000, \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [147:145], \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [143:111], \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [109:107], 1'h0, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [105:73], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [72], 19'h00000, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [52:42], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [41:38], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C46A7 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C451 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_06A0A , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_31573 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [10], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C215 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_A1D3F , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_E0ABD , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_AEAA2 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_ECB01 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_90BD1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_D8609 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_557D1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.halt_i , \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [20], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [19], \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [18], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [17], \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16], \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [15], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [14], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [13], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  };
  assign \cv32e40x_core_inst.load_store_unit_i.data_obi_i.clk  = clk_i;
  assign \cv32e40x_core_inst.load_store_unit_i.data_obi_i.resp_o  = { data_rdata_i, 3'h1 };
  assign \cv32e40x_core_inst.load_store_unit_i.data_obi_i.resp_valid_o  = data_rvalid_i;
  assign \cv32e40x_core_inst.load_store_unit_i.data_obi_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.load_store_unit_i.data_obi_i.trans_i  = { \cv32e40x_core_inst.load_store_unit_i.bus_trans [80:43], \cv32e40x_core_inst.m_c_obi_data_if.req_payload [42], \cv32e40x_core_inst.load_store_unit_i.bus_trans [41:0] };
  assign \cv32e40x_core_inst.load_store_unit_i.data_obi_i.trans_ready_o  = data_gnt_i;
  assign \cv32e40x_core_inst.load_store_unit_i.data_obi_i.trans_valid_i  = \cv32e40x_core_inst.m_c_obi_data_if.s_req ;
  assign \cv32e40x_core_inst.load_store_unit_i.filter_resp  = { data_rdata_i, \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_err_wb_i [0], 2'h1 };
  assign \cv32e40x_core_inst.load_store_unit_i.filter_resp_valid  = \cv32e40x_core_inst.load_store_unit_i.align_check_i.bus_resp_valid_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.filter_trans  = { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i , \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168:163], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i , \cv32e40x_core_inst.load_store_unit_i.wdata , \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cfg [1], \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.bufferable , 3'h7, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  };
  assign \cv32e40x_core_inst.load_store_unit_i.filter_trans_ready  = \cv32e40x_core_inst.load_store_unit_i.align_check_i.bus_trans_ready_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.filter_trans_valid  = \cv32e40x_core_inst.load_store_unit_i.response_filter_i.valid_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.clk  = clk_i;
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_one_txn_pend_n  = \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_one_txn_pend_n ;
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_resp_o  = { data_rdata_i, \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_err_wb_i [0], 2'h1, \cv32e40x_core_inst.wb_stage_i.lsu_mpu_status_i , \cv32e40x_core_inst.wb_stage_i.lsu_wpt_match_i , \cv32e40x_core_inst.wb_stage_i.lsu_align_status_i  };
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_resp_valid_o  = \cv32e40x_core_inst.load_store_unit_i.count_down ;
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_trans_i  = { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i , \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168:163], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i , \cv32e40x_core_inst.load_store_unit_i.wdata , 5'h07, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  };
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_trans_pushpop_i  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [43];
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_trans_ready_o  = \cv32e40x_core_inst.load_store_unit_i.trans_ready ;
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_wpt_match_o  = { 31'h00000000, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.trigger_match_ex  };
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_wpt_wait_i  = 1'h1;
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.mpu_resp_i  = { data_rdata_i, \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_err_wb_i [0], 2'h1, \cv32e40x_core_inst.wb_stage_i.lsu_mpu_status_i , 32'h00000000, \cv32e40x_core_inst.wb_stage_i.lsu_align_status_i  };
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.mpu_trans_o  = { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i , \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168:163], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i , \cv32e40x_core_inst.load_store_unit_i.wdata , 5'h07, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  };
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.mpu_trans_pushpop_o  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [43];
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.mpu_trans_valid_o  = \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_trans_valid_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.trigger_match_i  = { 31'h00000000, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.trigger_match_ex  };
  assign \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.wpt_match  = \cv32e40x_core_inst.wb_stage_i.lsu_wpt_match_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.id_ex_pipe_i  = { \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [352:248], 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [246:244], 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [242:177], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [176:153], 31'h00000000, \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [121:40], 37'h0000000000, \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [2], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [1], \cv32e40x_core_inst.controller_i.bypass_i.id_ex_pipe_i [0] };
  assign \cv32e40x_core_inst.load_store_unit_i.lsu_addr_o  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.lsu_align_status_1_o  = \cv32e40x_core_inst.wb_stage_i.lsu_align_status_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.lsu_atomic_0_o  = \cv32e40x_core_inst.controller_i.bypass_i.lsu_atomic_ex_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.lsu_atomic_1_o  = \cv32e40x_core_inst.load_store_unit_i.a_ext.lsu_atomic_q ;
  assign \cv32e40x_core_inst.load_store_unit_i.lsu_be_o  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.lsu_err_1_o  = { 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_err_wb_i [0] };
  assign \cv32e40x_core_inst.load_store_unit_i.lsu_first_op_0_o  = \cv32e40x_core_inst.ex_stage_i.lsu_first_op_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.lsu_last_op_0_o  = \cv32e40x_core_inst.ex_stage_i.lsu_last_op_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.lsu_mpu_status_1_o  = \cv32e40x_core_inst.wb_stage_i.lsu_mpu_status_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.lsu_rdata_1_o  = \cv32e40x_core_inst.wb_stage_i.lsu_rdata_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.lsu_split_0_o  = \cv32e40x_core_inst.ex_stage_i.lsu_split_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.lsu_we_o  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172];
  assign \cv32e40x_core_inst.load_store_unit_i.lsu_wpt_match_1_o  = \cv32e40x_core_inst.wb_stage_i.lsu_wpt_match_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.misaligned_access  = \cv32e40x_core_inst.load_store_unit_i.align_check_i.misaligned_access_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.modified_access  = \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.modified_access_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.atomic_access_i  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168];
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.bus_resp_i  = { data_rdata_i, \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_err_wb_i [0], 36'h400000000, \cv32e40x_core_inst.wb_stage_i.lsu_align_status_i  };
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.bus_trans_bufferable  = \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.bufferable ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.bus_trans_cacheable  = \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cfg [1];
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.bus_trans_o  = { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i , \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168:163], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i , \cv32e40x_core_inst.load_store_unit_i.wdata , \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cfg [1], \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.bufferable , 3'h7, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  };
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.bus_trans_valid_o  = \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_trans_valid_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.clk  = clk_i;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_mpu_err_o  = \cv32e40x_core_inst.load_store_unit_i.mpu_i.mpu_err ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_mpu_err_wait_i  = 1'h1;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_one_txn_pend_n  = \cv32e40x_core_inst.load_store_unit_i.align_check_i.core_one_txn_pend_n ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_resp_o  = { data_rdata_i, \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_err_wb_i [0], 2'h1, \cv32e40x_core_inst.wb_stage_i.lsu_mpu_status_i , 32'h00000000, \cv32e40x_core_inst.wb_stage_i.lsu_align_status_i  };
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_resp_valid_o  = \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.mpu_resp_valid_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_trans_i  = { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i , \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168:163], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i , \cv32e40x_core_inst.load_store_unit_i.wdata , 5'h07, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  };
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_trans_pushpop_i  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [43];
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_trans_ready_o  = \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.mpu_trans_ready_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_trans_we  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172];
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.instr_fetch_access  = 1'h0;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.misaligned_access_i  = \cv32e40x_core_inst.load_store_unit_i.align_check_i.misaligned_access_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.modified_access_i  = \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.modified_access_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.mpu_status  = \cv32e40x_core_inst.wb_stage_i.lsu_mpu_status_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_err  = \cv32e40x_core_inst.load_store_unit_i.mpu_i.mpu_err ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.atomic_access_i  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168];
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.instr_fetch_access_i  = 1'h0;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.load_access_i  = \cv32e40x_core_inst.load_store_unit_i.mpu_i.load_access ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.misaligned_access_i  = \cv32e40x_core_inst.load_store_unit_i.align_check_i.misaligned_access_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_bufferable_o  = \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.bufferable ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cacheable_o  = \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cfg [1];
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cfg_atomic  = \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cfg [0];
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_err_o  = \cv32e40x_core_inst.load_store_unit_i.mpu_i.mpu_err ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.trans_addr_i  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.trans_debug_region_i  = \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_trans_debug_region ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.trans_pushpop_i  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [43];
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.word_addr  = { 2'h0, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i [31:2] };
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_resp  = { data_rdata_i, \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_err_wb_i [0], 2'h1, \cv32e40x_core_inst.wb_stage_i.lsu_mpu_status_i , 32'h00000000, \cv32e40x_core_inst.wb_stage_i.lsu_align_status_i  };
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_resp_valid  = \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.mpu_resp_valid_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_trans  = { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i , \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168:163], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i , \cv32e40x_core_inst.load_store_unit_i.wdata , 5'h07, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  };
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_trans_atomic  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168];
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_trans_pushpop  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [43];
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_trans_ready  = \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.mpu_trans_ready_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.mpu_trans_valid  = \cv32e40x_core_inst.load_store_unit_i.mpu_i.core_trans_valid_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.no_x_ext_regs.sv2v_tmp_288F3  = 1'h0;
  assign \cv32e40x_core_inst.load_store_unit_i.no_x_ext_regs.sv2v_tmp_BF3FD  = 4'h0;
  assign \cv32e40x_core_inst.load_store_unit_i.priv_lvl_lsu_i  = 2'h3;
  assign \cv32e40x_core_inst.load_store_unit_i.ready_0_i  = \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.ready_0_o  = \cv32e40x_core_inst.ex_stage_i.lsu_ready_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.ready_1_i  = 1'h1;
  assign \cv32e40x_core_inst.load_store_unit_i.ready_1_o  = \cv32e40x_core_inst.wb_stage_i.lsu_ready_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.resp  = { data_rdata_i, \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_err_wb_i [0], 2'h1, \cv32e40x_core_inst.wb_stage_i.lsu_mpu_status_i , \cv32e40x_core_inst.wb_stage_i.lsu_wpt_match_i , \cv32e40x_core_inst.wb_stage_i.lsu_align_status_i  };
  assign \cv32e40x_core_inst.load_store_unit_i.resp_rdata  = data_rdata_i;
  assign \cv32e40x_core_inst.load_store_unit_i.resp_valid  = \cv32e40x_core_inst.load_store_unit_i.count_down ;
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_busy_o  = \cv32e40x_core_inst.controller_i.bypass_i.lsu_bus_busy_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_count_down  = data_rvalid_i;
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_trans_accepted  = \cv32e40x_core_inst.load_store_unit_i.response_filter_i.bus_count_up ;
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.busy_o  = \cv32e40x_core_inst.load_store_unit_i.filter_resp_busy ;
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.clk  = clk_i;
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.core_count_down  = \cv32e40x_core_inst.load_store_unit_i.align_check_i.bus_resp_valid_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.core_trans_accepted  = \cv32e40x_core_inst.load_store_unit_i.response_filter_i.core_count_up ;
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.outstanding_q [1:0] = 2'h0;
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.ready_o  = \cv32e40x_core_inst.load_store_unit_i.align_check_i.bus_trans_ready_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.resp_i  = { data_rdata_i, 3'h1 };
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.resp_o  = { data_rdata_i, \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_err_wb_i [0], 2'h1 };
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.resp_valid_i  = data_rvalid_i;
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.resp_valid_o  = \cv32e40x_core_inst.load_store_unit_i.align_check_i.bus_resp_valid_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.sv2v_cast_2$func$preprocessed.v:7539$2080.inp  = 2'hx;
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.trans_i  = { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i , \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168:163], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i , \cv32e40x_core_inst.load_store_unit_i.wdata , \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cfg [1], \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.bufferable , 3'h7, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  };
  assign \cv32e40x_core_inst.load_store_unit_i.response_filter_i.trans_o  = { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i , \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168:163], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i , \cv32e40x_core_inst.load_store_unit_i.wdata , \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cfg [1], \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.bufferable , 3'h7, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  };
  assign \cv32e40x_core_inst.load_store_unit_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.load_store_unit_i.trans [44:0] = { \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [171:170], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168:163], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [169], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [279:248], 2'h3, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  };
  assign \cv32e40x_core_inst.load_store_unit_i.trans_valid  = \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_trans_valid_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.trigger_match_0_i  = { 31'h00000000, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.trigger_match_ex  };
  assign \cv32e40x_core_inst.load_store_unit_i.valid_0_i  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_valid_ex_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.valid_0_o  = \cv32e40x_core_inst.ex_stage_i.lsu_valid_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.valid_1_i  = \cv32e40x_core_inst.controller_i.bypass_i.lsu_en_wb ;
  assign \cv32e40x_core_inst.load_store_unit_i.valid_1_o  = \cv32e40x_core_inst.wb_stage_i.lsu_valid_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.wpt_resp  = { data_rdata_i, \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_err_wb_i [0], 2'h1, \cv32e40x_core_inst.wb_stage_i.lsu_mpu_status_i , \cv32e40x_core_inst.wb_stage_i.lsu_wpt_match_i , \cv32e40x_core_inst.wb_stage_i.lsu_align_status_i  };
  assign \cv32e40x_core_inst.load_store_unit_i.wpt_resp_rdata  = data_rdata_i;
  assign \cv32e40x_core_inst.load_store_unit_i.wpt_resp_valid  = \cv32e40x_core_inst.load_store_unit_i.count_down ;
  assign \cv32e40x_core_inst.load_store_unit_i.wpt_trans  = { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i , \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168:163], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i , \cv32e40x_core_inst.load_store_unit_i.wdata , 5'h07, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  };
  assign \cv32e40x_core_inst.load_store_unit_i.wpt_trans_pushpop  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [43];
  assign \cv32e40x_core_inst.load_store_unit_i.wpt_trans_ready  = \cv32e40x_core_inst.load_store_unit_i.trans_ready ;
  assign \cv32e40x_core_inst.load_store_unit_i.wpt_trans_valid  = \cv32e40x_core_inst.load_store_unit_i.gen_wpt.wpt_i.core_trans_valid_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.clk  = clk_i;
  assign \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.ready_i  = data_gnt_i;
  assign \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.ready_o  = \cv32e40x_core_inst.load_store_unit_i.response_filter_i.ready_i ;
  assign \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.trans_i  = { \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i , \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [168:163], \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172], \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i , \cv32e40x_core_inst.load_store_unit_i.wdata , \cv32e40x_core_inst.load_store_unit_i.mpu_i.pma_i.pma_cfg [1], \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.bufferable , 3'h7, \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q  };
  assign \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.trans_o  = { \cv32e40x_core_inst.load_store_unit_i.bus_trans [80:43], \cv32e40x_core_inst.m_c_obi_data_if.req_payload [42], \cv32e40x_core_inst.load_store_unit_i.bus_trans [41:0] };
  assign \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.valid_i  = \cv32e40x_core_inst.load_store_unit_i.response_filter_i.valid_o ;
  assign \cv32e40x_core_inst.load_store_unit_i.write_buffer_i.valid_o  = \cv32e40x_core_inst.m_c_obi_data_if.s_req ;
  assign \cv32e40x_core_inst.load_store_unit_i.xif_id_q  = 4'h0;
  assign \cv32e40x_core_inst.load_store_unit_i.xif_mpu_err  = \cv32e40x_core_inst.load_store_unit_i.mpu_i.mpu_err ;
  assign \cv32e40x_core_inst.load_store_unit_i.xif_req  = 1'h0;
  assign \cv32e40x_core_inst.load_store_unit_i.xif_res_q  = 1'h0;
  assign \cv32e40x_core_inst.load_store_unit_i.xif_wpt_match  = { 31'h00000000, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.trigger_match_ex  };
  assign \cv32e40x_core_inst.lsu_addr_ex  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_addr_ex_i ;
  assign \cv32e40x_core_inst.lsu_align_status_wb  = \cv32e40x_core_inst.wb_stage_i.lsu_align_status_i ;
  assign \cv32e40x_core_inst.lsu_atomic_ex  = \cv32e40x_core_inst.controller_i.bypass_i.lsu_atomic_ex_i ;
  assign \cv32e40x_core_inst.lsu_atomic_wb  = \cv32e40x_core_inst.load_store_unit_i.a_ext.lsu_atomic_q ;
  assign \cv32e40x_core_inst.lsu_be_ex  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_be_ex_i ;
  assign \cv32e40x_core_inst.lsu_bus_busy  = \cv32e40x_core_inst.controller_i.bypass_i.lsu_bus_busy_i ;
  assign \cv32e40x_core_inst.lsu_busy  = \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_busy_i ;
  assign \cv32e40x_core_inst.lsu_err_wb  = { 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_err_wb_i [0] };
  assign \cv32e40x_core_inst.lsu_first_op_ex  = \cv32e40x_core_inst.ex_stage_i.lsu_first_op_i ;
  assign \cv32e40x_core_inst.lsu_last_op_ex  = \cv32e40x_core_inst.ex_stage_i.lsu_last_op_i ;
  assign \cv32e40x_core_inst.lsu_mpu_status_wb  = \cv32e40x_core_inst.wb_stage_i.lsu_mpu_status_i ;
  assign \cv32e40x_core_inst.lsu_rdata_wb  = \cv32e40x_core_inst.wb_stage_i.lsu_rdata_i ;
  assign \cv32e40x_core_inst.lsu_ready_0  = \cv32e40x_core_inst.ex_stage_i.lsu_ready_i ;
  assign \cv32e40x_core_inst.lsu_ready_1  = \cv32e40x_core_inst.wb_stage_i.lsu_ready_i ;
  assign \cv32e40x_core_inst.lsu_ready_ex  = \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i ;
  assign \cv32e40x_core_inst.lsu_ready_wb  = 1'h1;
  assign \cv32e40x_core_inst.lsu_split_ex  = \cv32e40x_core_inst.ex_stage_i.lsu_split_i ;
  assign \cv32e40x_core_inst.lsu_valid_0  = \cv32e40x_core_inst.ex_stage_i.lsu_valid_i ;
  assign \cv32e40x_core_inst.lsu_valid_1  = \cv32e40x_core_inst.wb_stage_i.lsu_valid_i ;
  assign \cv32e40x_core_inst.lsu_valid_ex  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.lsu_valid_ex_i ;
  assign \cv32e40x_core_inst.lsu_valid_wb  = \cv32e40x_core_inst.controller_i.bypass_i.lsu_en_wb ;
  assign \cv32e40x_core_inst.lsu_we_ex  = \cv32e40x_core_inst.id_stage_i.id_ex_pipe_o [172];
  assign \cv32e40x_core_inst.lsu_wpt_match_wb  = \cv32e40x_core_inst.wb_stage_i.lsu_wpt_match_i ;
  assign { \cv32e40x_core_inst.m_c_obi_data_if.req_payload [80:43], \cv32e40x_core_inst.m_c_obi_data_if.req_payload [41:0] } = { \cv32e40x_core_inst.load_store_unit_i.bus_trans [80:43], \cv32e40x_core_inst.load_store_unit_i.bus_trans [41:0] };
  assign \cv32e40x_core_inst.m_c_obi_data_if.resp_payload  = { data_rdata_i, 3'h1 };
  assign \cv32e40x_core_inst.m_c_obi_data_if.s_gnt  = data_gnt_i;
  assign \cv32e40x_core_inst.m_c_obi_data_if.s_rvalid  = data_rvalid_i;
  assign \cv32e40x_core_inst.m_c_obi_instr_if.resp_payload  = { instr_rdata_i, 1'h0 };
  assign \cv32e40x_core_inst.m_c_obi_instr_if.s_gnt  = instr_gnt_i;
  assign \cv32e40x_core_inst.m_c_obi_instr_if.s_rvalid  = instr_rvalid_i;
  assign \cv32e40x_core_inst.mcause  = { \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [31], 20'h00000, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mcause_csr_i.rdata_q [10:0] };
  assign \cv32e40x_core_inst.mcycle_o  = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_q [63:0];
  assign \cv32e40x_core_inst.mepc  = { \cv32e40x_core_inst.cs_registers_i.mepc_csr_i.rdata_q [31:1], 1'h0 };
  assign \cv32e40x_core_inst.mhartid_i  = 32'd0;
  assign \cv32e40x_core_inst.mie  = { \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [31:16], 4'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [11], 3'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [7], 3'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mie_csr_i.rdata_q [3], 3'h0 };
  assign \cv32e40x_core_inst.mimpid_patch_i  = 4'h0;
  assign \cv32e40x_core_inst.mintstatus  = 32'd0;
  assign \cv32e40x_core_inst.mintthresh_th  = 8'h00;
  assign \cv32e40x_core_inst.mip  = 32'd0;
  assign \cv32e40x_core_inst.mnxti_irq_id  = 5'h00;
  assign \cv32e40x_core_inst.mnxti_irq_level  = 8'h00;
  assign \cv32e40x_core_inst.mnxti_irq_pending  = 1'h0;
  assign \cv32e40x_core_inst.mpu_status_wb  = \cv32e40x_core_inst.controller_i.controller_fsm_i.mpu_status_wb_i ;
  assign \cv32e40x_core_inst.mstatus  = { 24'h000018, \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [7], 3'h0, \cv32e40x_core_inst.cs_registers_i.mstatus_csr_i.rdata_q [3], 3'h0 };
  assign \cv32e40x_core_inst.mtvec_addr  = \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [31:7];
  assign \cv32e40x_core_inst.mtvec_addr_i  = 32'd0;
  assign \cv32e40x_core_inst.mtvec_mode  = { 1'h0, \cv32e40x_core_inst.cs_registers_i.basic_mode_csrs.mtvec_csr_i.rdata_q [0] };
  assign \cv32e40x_core_inst.mtvt_addr  = 25'h0000000;
  assign \cv32e40x_core_inst.pc_if  = \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.addr_q ;
  assign \cv32e40x_core_inst.priv_lvl  = 2'h3;
  assign \cv32e40x_core_inst.priv_lvl_if  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.priv_lvl_if_i ;
  assign \cv32e40x_core_inst.priv_lvl_if_ctrl  = 3'h3;
  assign \cv32e40x_core_inst.priv_lvl_lsu  = 2'h3;
  assign \cv32e40x_core_inst.ptr_in_if  = \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.ptr_in_if_i ;
  assign \cv32e40x_core_inst.register_file_wrapper_i.clk  = clk_i;
  assign \cv32e40x_core_inst.register_file_wrapper_i.raddr_i  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] };
  assign \cv32e40x_core_inst.register_file_wrapper_i.rdata_o  = \cv32e40x_core_inst.rf_rdata_id ;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.clk  = clk_i;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[10].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[11].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[12].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[13].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[14].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[15].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[16].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[17].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[18].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[19].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[1].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[20].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[21].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[22].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[23].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[24].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[25].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[26].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[27].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[28].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[29].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[2].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[30].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[31].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[3].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[4].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[5].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[6].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[7].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[8].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.gen_rf[9].register_write_behavioral.sv2v_autoblock_1.j  = 32'd1;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.mem[0]  = 32'd0;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.raddr_i  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] };
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.rdata_o  = \cv32e40x_core_inst.rf_rdata_id ;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.waddr_i  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242];
  assign \cv32e40x_core_inst.register_file_wrapper_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.register_file_wrapper_i.waddr_i  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242];
  assign \cv32e40x_core_inst.register_file_wrapper_i.wdata_i  = \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  assign \cv32e40x_core_inst.register_file_wrapper_i.we_i  = \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i ;
  assign \cv32e40x_core_inst.rf_raddr_id  = { \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [177:173], \cv32e40x_core_inst.if_stage_i.if_id_pipe_o [182:178] };
  assign \cv32e40x_core_inst.rf_re_id  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_ctrl_mux [26:25];
  assign \cv32e40x_core_inst.rf_waddr  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242];
  assign \cv32e40x_core_inst.rf_waddr_wb  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242];
  assign \cv32e40x_core_inst.rf_wdata  = \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  assign \cv32e40x_core_inst.rf_wdata_ex  = \cv32e40x_core_inst.ex_stage_i.rf_wdata_o ;
  assign \cv32e40x_core_inst.rf_wdata_wb  = \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  assign \cv32e40x_core_inst.rf_we  = \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i ;
  assign \cv32e40x_core_inst.rf_we_wb  = \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i ;
  assign \cv32e40x_core_inst.rst_ni  = rst_ni;
  assign \cv32e40x_core_inst.scan_cg_en_i  = 1'h0;
  assign \cv32e40x_core_inst.sleep_unit_i.clk_gated_o  = clk_i;
  assign \cv32e40x_core_inst.sleep_unit_i.clk_ungated_i  = clk_i;
  assign \cv32e40x_core_inst.sleep_unit_i.core_clock_gate_i.clk_i  = clk_i;
  assign \cv32e40x_core_inst.sleep_unit_i.core_clock_gate_i.clk_o  = clk_i;
  assign \cv32e40x_core_inst.sleep_unit_i.core_clock_gate_i.en_i  = \cv32e40x_core_inst.sleep_unit_i.clock_en ;
  assign \cv32e40x_core_inst.sleep_unit_i.core_clock_gate_i.scan_cg_en_i  = 1'h0;
  assign \cv32e40x_core_inst.sleep_unit_i.core_sleep_o  = core_sleep_o;
  assign \cv32e40x_core_inst.sleep_unit_i.ctrl_fsm_i [200:0] = { \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [200], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i , \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [198], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [197], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_5381E , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [9:0], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_63C61 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause , 11'h000, \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [147:145], \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [143:111], \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [109:107], 1'h0, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [105:73], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [72], 19'h00000, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [52:42], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [41:38], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C46A7 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C451 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_06A0A , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_31573 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [10], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C215 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_A1D3F , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_E0ABD , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_AEAA2 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_ECB01 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_90BD1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_D8609 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_557D1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.halt_i , \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [20], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [19], \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [18], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [17], \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16], \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [15], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [14], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [13], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  };
  assign \cv32e40x_core_inst.sleep_unit_i.fetch_enable_i  = fetch_enable_i;
  assign \cv32e40x_core_inst.sleep_unit_i.fetch_enable_o  = \cv32e40x_core_inst.sleep_unit_i.fetch_enable_q ;
  assign \cv32e40x_core_inst.sleep_unit_i.lsu_busy_i  = \cv32e40x_core_inst.controller_i.controller_fsm_i.lsu_busy_i ;
  assign \cv32e40x_core_inst.sleep_unit_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.sleep_unit_i.scan_cg_en_i  = 1'h0;
  assign \cv32e40x_core_inst.sys_en_id  = \cv32e40x_core_inst.controller_i.controller_fsm_i.sys_en_id_i ;
  assign \cv32e40x_core_inst.sys_mret_insn_id  = \cv32e40x_core_inst.id_stage_i.decoder_i.decoder_i_ctrl [2];
  assign \cv32e40x_core_inst.time_i  = 64'h0000000000000000;
  assign \cv32e40x_core_inst.trigger_match_ex  = { 31'h00000000, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.trigger_match_ex  };
  assign \cv32e40x_core_inst.trigger_match_if  = { 31'h00000000, \cv32e40x_core_inst.cs_registers_i.debug_triggers_i.gen_triggers.trigger_match_if  };
  assign \cv32e40x_core_inst.wb_ready  = \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i ;
  assign \cv32e40x_core_inst.wb_stage_i.align_status_wb_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.align_status_wb_i ;
  assign \cv32e40x_core_inst.wb_stage_i.clic_pa_i  = 32'd0;
  assign \cv32e40x_core_inst.wb_stage_i.clic_pa_valid_i  = 1'h0;
  assign \cv32e40x_core_inst.wb_stage_i.clk  = clk_i;
  assign \cv32e40x_core_inst.wb_stage_i.ctrl_fsm_i  = { \cv32e40x_core_inst.sleep_unit_i.ctrl_fsm_i [201], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [200], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.prefetcher_i.fetch_branch_i , \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [198], \cv32e40x_core_inst.if_stage_i.prefetch_unit_i.alignment_buffer_i.ctrl_fsm_i [197], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [196:193], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_5381E , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [9:0], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_63C61 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause , 11'h000, \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_n , \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [147:145], \cv32e40x_core_inst.dbg_ack , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [143:111], \cv32e40x_core_inst.controller_i.controller_fsm_i.debug_mode_q , \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [109:107], 1'h0, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [105:73], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [72], 19'h00000, \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [52:42], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [41:38], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_counter_event_gated , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_C46A7 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C451 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_06A0A , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_31573 , \cv32e40x_core_inst.controller_i.controller_fsm_i.exc_cause [10], \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_6C215 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_A1D3F , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_E0ABD , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_AEAA2 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_ECB01 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_90BD1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_D8609 , \cv32e40x_core_inst.controller_i.controller_fsm_i.sv2v_tmp_557D1 , \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i , \cv32e40x_core_inst.if_stage_i.gen_seq.sequencer_i.halt_i , \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [20], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [19], \cv32e40x_core_inst.cs_registers_i.ctrl_fsm_i [18], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [17], \cv32e40x_core_inst.if_stage_i.ctrl_fsm_i [16], \cv32e40x_core_inst.id_stage_i.ctrl_fsm_i [15], \cv32e40x_core_inst.ex_stage_i.ctrl_fsm_i [14], \cv32e40x_core_inst.controller_i.controller_fsm_i.ctrl_fsm_o [13], 1'h0, \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_in_wb , \cv32e40x_core_inst.controller_i.controller_fsm_i.exception_cause_wb  };
  assign \cv32e40x_core_inst.wb_stage_i.data_stall_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.data_stall_wb_i ;
  assign \cv32e40x_core_inst.wb_stage_i.ex_wb_pipe_i  = { \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [247:160], 1'h0, \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [158], 31'h00000000, \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [126:41], 4'h0, \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [36:5], 1'h0, \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [3], \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [2], \cv32e40x_core_inst.controller_i.bypass_i.ex_wb_pipe_i [1], \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [0] };
  assign \cv32e40x_core_inst.wb_stage_i.last_op_o  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [2];
  assign \cv32e40x_core_inst.wb_stage_i.lsu_align_status  = \cv32e40x_core_inst.controller_i.controller_fsm_i.align_status_wb_i ;
  assign \cv32e40x_core_inst.wb_stage_i.lsu_mpu_status  = \cv32e40x_core_inst.controller_i.controller_fsm_i.mpu_status_wb_i ;
  assign \cv32e40x_core_inst.wb_stage_i.lsu_ready_o  = 1'h1;
  assign \cv32e40x_core_inst.wb_stage_i.lsu_valid_o  = \cv32e40x_core_inst.controller_i.bypass_i.lsu_en_wb ;
  assign \cv32e40x_core_inst.wb_stage_i.lsu_wpt_match  = \cv32e40x_core_inst.controller_i.controller_fsm_i.wpt_match_wb_i ;
  assign \cv32e40x_core_inst.wb_stage_i.mpu_status_wb_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.mpu_status_wb_i ;
  assign \cv32e40x_core_inst.wb_stage_i.rf_waddr_wb_o  = \cv32e40x_core_inst.ex_stage_i.ex_wb_pipe_o [246:242];
  assign \cv32e40x_core_inst.wb_stage_i.rf_wdata_wb_o  = \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.wdata_i ;
  assign \cv32e40x_core_inst.wb_stage_i.rf_we_wb_o  = \cv32e40x_core_inst.register_file_wrapper_i.register_file_i.we_i ;
  assign \cv32e40x_core_inst.wb_stage_i.rst_n  = rst_ni;
  assign \cv32e40x_core_inst.wb_stage_i.wb_ready_o  = \cv32e40x_core_inst.controller_i.bypass_i.wb_ready_i ;
  assign \cv32e40x_core_inst.wb_stage_i.wb_valid  = \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_valid_i ;
  assign \cv32e40x_core_inst.wb_stage_i.wb_valid_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_valid_i ;
  assign \cv32e40x_core_inst.wb_stage_i.wpt_match_wb_o  = \cv32e40x_core_inst.controller_i.controller_fsm_i.wpt_match_wb_i ;
  assign \cv32e40x_core_inst.wb_stage_i.xif_exception  = 1'h0;
  assign \cv32e40x_core_inst.wb_stage_i.xif_waiting  = 1'h0;
  assign \cv32e40x_core_inst.wb_valid  = \cv32e40x_core_inst.controller_i.controller_fsm_i.wb_valid_i ;
  assign \cv32e40x_core_inst.wpt_match_wb  = \cv32e40x_core_inst.controller_i.controller_fsm_i.wpt_match_wb_i ;
  assign \cv32e40x_core_inst.wu_wfe_i  = 1'h0;
  assign \cv32e40x_core_inst.xif_csr_error_ex  = 1'h0;
  assign \cv32e40x_core_inst.xif_offloading_id  = 1'h0;
  assign data_addr_o = \cv32e40x_core_inst.load_store_unit_i.bus_trans [80:49];
  assign data_be_o = \cv32e40x_core_inst.load_store_unit_i.bus_trans [41:38];
  assign data_req_o = \cv32e40x_core_inst.m_c_obi_data_if.s_req ;
  assign data_wdata_o = \cv32e40x_core_inst.load_store_unit_i.bus_trans [37:6];
  assign data_we_o = \cv32e40x_core_inst.m_c_obi_data_if.req_payload [42];
  assign \ext_if.commit  = 5'h00;
  assign \ext_if.commit_valid  = 1'h0;
  assign \ext_if.compressed_ready  = compressed_ready;
  assign \ext_if.compressed_req  = 22'h000000;
  assign \ext_if.compressed_resp  = { compressed_resp_instr, compressed_resp_accept };
  assign \ext_if.compressed_valid  = 1'h0;
  assign \ext_if.issue_ready  = issue_ready;
  assign \ext_if.issue_req  = 111'h0000000000000000000000000000;
  assign \ext_if.issue_resp  = { issue_resp_accept, issue_resp_writeback, issue_resp_dualwrite, issue_resp_dualread, issue_resp_loadstore, issue_resp_ecswrite, issue_resp_exc };
  assign \ext_if.issue_valid  = 1'h0;
  assign \ext_if.mem_ready  = 1'h0;
  assign \ext_if.mem_req  = { mem_req_id, mem_req_addr, mem_req_mode, mem_req_we, mem_req_size, mem_req_be, mem_req_attr, mem_req_wdata, mem_req_last, mem_req_spec };
  assign \ext_if.mem_resp  = 8'h00;
  assign \ext_if.mem_result  = 38'h0000000000;
  assign \ext_if.mem_result_valid  = 1'h0;
  assign \ext_if.mem_valid  = mem_valid;
  assign \ext_if.result  = { result_id, result_data, result_rd, result_we, result_ecsdata, result_ecswe, result_exc, result_exccode, result_err, result_dbg };
  assign \ext_if.result_ready  = 1'h0;
  assign \ext_if.result_valid  = result_valid;
  assign instr_addr_o = { \cv32e40x_core_inst.m_c_obi_instr_if.req_payload [37:8], 2'h0 };
  assign instr_req_o = \cv32e40x_core_inst.m_c_obi_instr_if.s_req ;
  assign issue_req_ecs = 6'h00;
  assign issue_req_ecs_valid = 1'h0;
  assign issue_req_id = 4'h0;
  assign issue_req_instr = 32'd0;
  assign issue_req_mode = 2'h0;
  assign issue_req_rs = 64'h0000000000000000;
  assign issue_req_rs_valid = 2'h0;
  assign issue_valid = 1'h0;
  assign mcycle_o = \cv32e40x_core_inst.cs_registers_i.mhpmcounter_q [63:0];
  assign mem_ready = 1'h0;
  assign mem_resp_dbg = 1'h0;
  assign mem_resp_exc = 1'h0;
  assign mem_resp_exccode = 6'h00;
  assign mem_result_dbg = 1'h0;
  assign mem_result_err = 1'h0;
  assign mem_result_id = 4'h0;
  assign mem_result_rdata = 32'd0;
  assign mem_result_valid = 1'h0;
  assign result_ready = 1'h0;
  assign \sv2v_cast_32$func$preprocessed.v:11825$183.inp  = 32'hxxxxxxxx;
endmodule
